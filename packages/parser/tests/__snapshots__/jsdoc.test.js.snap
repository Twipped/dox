// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`./jsdoc/abstracttag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 82,
  "filename": "jsdoc/abstracttag.js",
  "fnName": "Thingy",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 82,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Thingy",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Thingy",
    },
  ],
  "raw": "/** @constructor */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/abstracttag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 79,
  "filename": "jsdoc/abstracttag.js",
  "ignore": false,
  "isAbstract": true,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 79,
      "line": 5,
    },
    "start": Position {
      "column": 4,
      "index": 45,
      "line": 4,
    },
  },
  "member": "pez",
  "memberOf": "this",
  "name": "pez",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "pez",
    },
  ],
  "raw": "/** @abstract */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 45,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 2,
}
`;

exports[`./jsdoc/abstracttag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 185,
  "filename": "jsdoc/abstracttag.js",
  "fnName": "OtherThingy",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 185,
      "line": 17,
    },
    "start": Position {
      "column": 0,
      "index": 99,
      "line": 11,
    },
  },
  "name": "OtherThingy",
  "params": Array [],
  "path": Array [
    Object {
      "name": "OtherThingy",
    },
  ],
  "raw": "/** @constructor */",
  "start": 99,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/abstracttag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 182,
  "filename": "jsdoc/abstracttag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 182,
      "line": 15,
    },
    "start": Position {
      "column": 4,
      "index": 149,
      "line": 14,
    },
  },
  "member": "pez",
  "memberOf": "this",
  "name": "pez",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "pez",
    },
  ],
  "raw": "/** @virtual */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 149,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 2,
}
`;

exports[`./jsdoc/accesstag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 220,
  "filename": "jsdoc/accesstag.js",
  "fnName": "Thingy",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 220,
      "line": 16,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Thingy",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Thingy",
    },
  ],
  "raw": "/** @constructor */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/accesstag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 84,
  "filename": "jsdoc/accesstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 16,
      "index": 84,
      "line": 5,
    },
    "start": Position {
      "column": 4,
      "index": 45,
      "line": 4,
    },
  },
  "member": "foo",
  "mutable": true,
  "name": "foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "foo",
    },
  ],
  "raw": "/** @access private */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 45,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 0,
  "visibility": "private",
}
`;

exports[`./jsdoc/accesstag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 133,
  "filename": "jsdoc/accesstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 18,
      "index": 133,
      "line": 8,
    },
    "start": Position {
      "column": 4,
      "index": 90,
      "line": 7,
    },
  },
  "member": "_bar",
  "memberOf": "this",
  "name": "_bar",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "_bar",
    },
  ],
  "raw": "/** @access protected */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 90,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 1,
  "visibility": "protected",
}
`;

exports[`./jsdoc/accesstag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 179,
  "filename": "jsdoc/accesstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 18,
      "index": 179,
      "line": 11,
    },
    "start": Position {
      "column": 4,
      "index": 139,
      "line": 10,
    },
  },
  "member": "_gnu",
  "memberOf": "this",
  "name": "_gnu",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "_gnu",
    },
  ],
  "raw": "/** @access public */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 139,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 2,
  "visibility": "public",
}
`;

exports[`./jsdoc/accesstag.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "nothing",
  "end": 217,
  "filename": "jsdoc/accesstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 217,
      "line": 14,
    },
    "start": Position {
      "column": 4,
      "index": 185,
      "line": 13,
    },
  },
  "member": "pez",
  "memberOf": "this",
  "name": "pez",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "pez",
    },
  ],
  "raw": "/** nothing */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 185,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 3,
}
`;

exports[`./jsdoc/accesstag.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 441,
  "filename": "jsdoc/accesstag.js",
  "fnName": "OtherThingy",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 441,
      "line": 35,
    },
    "start": Position {
      "column": 0,
      "index": 237,
      "line": 20,
    },
  },
  "name": "OtherThingy",
  "params": Array [],
  "path": Array [
    Object {
      "name": "OtherThingy",
    },
  ],
  "raw": "/** @constructor */",
  "start": 237,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/accesstag.js snapshots: Item 7 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 319,
  "filename": "jsdoc/accesstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 16,
      "index": 319,
      "line": 24,
    },
    "start": Position {
      "column": 4,
      "index": 287,
      "line": 23,
    },
  },
  "member": "foo",
  "mutable": true,
  "name": "foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "foo",
    },
  ],
  "raw": "/** @private */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 287,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 0,
  "visibility": "private",
}
`;

exports[`./jsdoc/accesstag.js snapshots: Item 8 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 361,
  "filename": "jsdoc/accesstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 18,
      "index": 361,
      "line": 27,
    },
    "start": Position {
      "column": 4,
      "index": 325,
      "line": 26,
    },
  },
  "member": "_bar",
  "memberOf": "this",
  "name": "_bar",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "_bar",
    },
  ],
  "raw": "/** @protected */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 325,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 1,
  "visibility": "protected",
}
`;

exports[`./jsdoc/accesstag.js snapshots: Item 9 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 400,
  "filename": "jsdoc/accesstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 18,
      "index": 400,
      "line": 30,
    },
    "start": Position {
      "column": 4,
      "index": 367,
      "line": 29,
    },
  },
  "member": "_gnu",
  "memberOf": "this",
  "name": "_gnu",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "_gnu",
    },
  ],
  "raw": "/** @public */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 367,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 2,
  "visibility": "public",
}
`;

exports[`./jsdoc/accesstag.js snapshots: Item 10 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "nothing",
  "end": 438,
  "filename": "jsdoc/accesstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 438,
      "line": 33,
    },
    "start": Position {
      "column": 4,
      "index": 406,
      "line": 32,
    },
  },
  "member": "pez",
  "memberOf": "this",
  "name": "pez",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "pez",
    },
  ],
  "raw": "/** nothing */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 406,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 3,
}
`;

exports[`./jsdoc/alias1.js snapshots: Item 1 1`] = `
Object {
  "alias": "myObject",
  "aliasOriginal": "x",
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Give x another name.",
  "end": 182,
  "filename": "jsdoc/alias1.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 182,
      "line": 10,
    },
    "start": Position {
      "column": 4,
      "index": 34,
      "line": 3,
    },
  },
  "member": "x",
  "mutable": true,
  "name": "myObject",
  "namespace": Object {
    "name": "myObject",
  },
  "params": Array [],
  "path": Array [
    Object {
      "alias": "myObject",
      "name": "myObject",
      "original": "x",
    },
  ],
  "properties": Array [
    Object {
      "description": "document me",
      "ignore": false,
      "path": Array [
        Object {
          "name": "x",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** Give x another name.
        @alias myObject
        @namespace
     */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 34,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/alias1.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 176,
  "filename": "jsdoc/alias1.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 25,
      "index": 176,
      "line": 9,
    },
    "start": Position {
      "column": 8,
      "index": 132,
      "line": 8,
    },
  },
  "member": "myProperty",
  "memberOf": "x",
  "mutable": true,
  "name": "myProperty",
  "params": Array [],
  "path": Array [
    Object {
      "name": "x",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "document me",
        "ignore": false,
        "tags": Array [],
      },
      "code": "myProperty: 'foo'",
      "ctx": Object {
        "kind": "property",
        "member": "myProperty",
        "memberOf": undefined,
        "name": "myProperty",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
        "value": "foo",
      },
      "description": "document me",
      "end": 176,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 25,
          "index": 176,
          "line": 9,
        },
        "start": Position {
          "column": 8,
          "index": 132,
          "line": 8,
        },
      },
      "member": "myProperty",
      "memberOf": undefined,
      "name": "myProperty",
      "path": Array [],
      "raw": "/** document me */",
      "start": 132,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
      "value": "foo",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 132,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "foo",
}
`;

exports[`./jsdoc/alias2.js snapshots: Item 1 1`] = `
Object {
  "alias": "ns.Myclass#",
  "aliasOriginal": "x",
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 117,
  "filename": "jsdoc/alias2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 117,
      "line": 7,
    },
    "start": Position {
      "column": 4,
      "index": 19,
      "line": 3,
    },
  },
  "member": "x",
  "memberOf": "ns",
  "mutable": true,
  "name": "Myclass",
  "params": Array [],
  "path": Array [
    Object {
      "name": "ns",
    },
    Object {
      "alias": "ns.Myclass#",
      "name": "Myclass",
      "original": "x",
    },
  ],
  "properties": Array [
    Object {
      "description": "document me",
      "ignore": false,
      "path": Array [
        Object {
          "name": "x",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** @alias ns.Myclass# */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 19,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/alias2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 111,
  "filename": "jsdoc/alias2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 25,
      "index": 111,
      "line": 6,
    },
    "start": Position {
      "column": 8,
      "index": 67,
      "line": 5,
    },
  },
  "member": "myProperty",
  "memberOf": "x",
  "mutable": true,
  "name": "myProperty",
  "params": Array [],
  "path": Array [
    Object {
      "name": "x",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "document me",
        "ignore": false,
        "tags": Array [],
      },
      "code": "myProperty: 'foo'",
      "ctx": Object {
        "kind": "property",
        "member": "myProperty",
        "memberOf": undefined,
        "name": "myProperty",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
        "value": "foo",
      },
      "description": "document me",
      "end": 111,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 25,
          "index": 111,
          "line": 6,
        },
        "start": Position {
          "column": 8,
          "index": 67,
          "line": 5,
        },
      },
      "member": "myProperty",
      "memberOf": undefined,
      "name": "myProperty",
      "path": Array [],
      "raw": "/** document me */",
      "start": 67,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
      "value": "foo",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 67,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "foo",
}
`;

exports[`./jsdoc/alias3.js snapshots: Item 1 1`] = `
Object {
  "alias": "trackr.CookieManager",
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 192,
  "filename": "jsdoc/alias3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 192,
      "line": 10,
    },
    "start": Position {
      "column": 4,
      "index": 35,
      "line": 3,
    },
  },
  "memberOf": "trackr",
  "name": "CookieManager",
  "params": Array [
    Object {
      "description": "",
      "name": "kv",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "object",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "object",
          },
        ],
        "string": "object",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "trackr",
    },
    Object {
      "alias": "trackr.CookieManager",
      "name": "CookieManager",
      "original": "",
    },
  ],
  "raw": "/** @class
        @alias trackr.CookieManager
        @param {object} kv
    */",
  "start": 35,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/alias3.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 186,
  "filename": "jsdoc/alias3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 24,
      "index": 186,
      "line": 9,
    },
    "start": Position {
      "column": 8,
      "index": 143,
      "line": 8,
    },
  },
  "member": "kv",
  "memberOf": "this",
  "name": "kv",
  "params": Array [
    Object {
      "member": "kv",
      "name": "kv",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "value",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 143,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/alias4.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 199,
  "filename": "jsdoc/alias4.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 199,
      "line": 12,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:jacket",
  },
  "path": Array [],
  "raw": "/** @module jacket */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/alias4.js snapshots: Item 2 1`] = `
Object {
  "alias": "module:jacket",
  "aliasOriginal": "Jacket",
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Jacket constructor.",
  "end": 175,
  "filename": "jsdoc/alias4.js",
  "fnName": "Jacket",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 24,
      "index": 175,
      "line": 9,
    },
    "start": Position {
      "column": 4,
      "index": 57,
      "line": 3,
    },
  },
  "name": "module:jacket",
  "params": Array [],
  "path": Array [
    Object {
      "alias": "module:jacket",
      "name": "module:jacket",
      "original": "Jacket",
    },
  ],
  "raw": "/**
     * Jacket constructor.
     *
     * @constructor
     * @alias module:jacket
     */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 57,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/alias5.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Toaster singleton.",
  "end": 857,
  "filename": "jsdoc/alias5.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 857,
      "line": 44,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "Toaster",
  "mutable": true,
  "name": "Toaster",
  "path": Array [
    Object {
      "name": "Toaster",
    },
  ],
  "raw": "/**
 * Toaster singleton.
 *
 * @class
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/alias5.js snapshots: Item 2 1`] = `
Object {
  "alias": "Toaster#toast",
  "aliasOriginal": "toast",
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Toast an item.",
  "end": 299,
  "filename": "jsdoc/alias5.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 48,
      "index": 299,
      "line": 17,
    },
    "start": Position {
      "column": 4,
      "index": 128,
      "line": 11,
    },
  },
  "member": "toast",
  "memberOf": "Toaster",
  "mutable": true,
  "name": "toast",
  "params": Array [
    Object {
      "description": "- The item to toast.",
      "name": "item",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "BreadyThing",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "BreadyThing",
          },
        ],
        "string": "BreadyThing",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Toaster",
    },
    Object {
      "alias": "Toaster#toast",
      "name": "toast",
      "original": "Toaster.prototype.toast",
    },
  ],
  "raw": "/**
     * Toast an item.
     *
     * @alias Toaster#toast
     * @param {BreadyThing} item - The item to toast.
     */",
  "returnPotentials": TypeInferance {
    "potentials": Array [
      "Object",
      "unknown",
    ],
  },
  "scope": "instance",
  "start": 128,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/alias5.js snapshots: Item 3 1`] = `
Object {
  "alias": "clean",
  "aliasOriginal": "clean",
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Clean the toaster.",
  "end": 456,
  "filename": "jsdoc/alias5.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 44,
      "index": 456,
      "line": 26,
    },
    "start": Position {
      "column": 4,
      "index": 305,
      "line": 19,
    },
  },
  "member": "clean",
  "mutable": true,
  "name": "clean",
  "params": Array [],
  "parent": "Toaster",
  "path": Array [
    Object {
      "alias": "clean",
      "name": "clean",
      "original": "Toaster.prototype.clean",
    },
  ],
  "raw": "/**
     * Clean the toaster.
     *
     * @alias clean
     * @memberOf Toaster
     * @instance
     */",
  "returnPotentials": TypeInferance {
    "potentials": Array [
      "Object",
      "unknown",
    ],
  },
  "scope": "instance",
  "start": 305,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/alias5.js snapshots: Item 4 1`] = `
Object {
  "alias": "Toaster.getInstance",
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Get the Toaster instance.",
  "end": 632,
  "filename": "jsdoc/alias5.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 11,
      "index": 632,
      "line": 34,
    },
    "start": Position {
      "column": 8,
      "index": 479,
      "line": 29,
    },
  },
  "raw": "/**
         * Get the Toaster instance.
         *
         * @alias Toaster.getInstance
         * @returns {Toaster} The Toaster instance.
         */",
  "returns": Object {
    "description": "Toaster instance.",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "Toaster",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "Toaster",
        },
      ],
      "string": "Toaster",
    },
  },
  "start": 479,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/alias6.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 37,
  "filename": "jsdoc/alias6.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 22,
      "index": 37,
      "line": 3,
    },
    "start": Position {
      "column": 0,
      "index": 15,
      "line": 3,
    },
  },
  "module": Object {
    "name": "module:example",
  },
  "path": Array [],
  "raw": "/** @module example */",
  "start": 15,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/alias6.js snapshots: Item 2 1`] = `
Object {
  "alias": "module:example",
  "aliasOriginal": "Foo",
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 102,
  "filename": "jsdoc/alias6.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 102,
      "line": 8,
    },
    "start": Position {
      "column": 0,
      "index": 39,
      "line": 5,
    },
  },
  "name": "module:example",
  "path": Array [
    Object {
      "alias": "module:example",
      "name": "module:example",
      "original": "Foo",
    },
  ],
  "properties": Array [
    Object {
      "filename": "jsdoc/alias6.js",
      "isAsync": false,
      "isConstructor": true,
      "isGenerator": false,
      "kind": "constructor",
      "member": "constructor",
      "memberOf": "Foo.prototype",
      "name": "constructor",
      "params": Array [],
      "scope": "instance",
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Foo",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Foo",
          },
        ],
        "string": "Foo",
      },
    },
  ],
  "raw": "/** @alias module:example */",
  "start": 39,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Foo",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Foo",
      },
    ],
    "string": "Foo",
  },
}
`;

exports[`./jsdoc/aliasexports.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 18,
  "filename": "jsdoc/aliasexports.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 18,
      "index": 18,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:foo",
  },
  "path": Array [],
  "raw": "/** @module foo */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/aliasexports.js snapshots: Item 2 1`] = `
Object {
  "alias": "module:foo.Bar",
  "aliasOriginal": "Bar",
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Bar class.",
  "end": 129,
  "filename": "jsdoc/aliasexports.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 129,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 20,
      "line": 3,
    },
  },
  "memberOf": "module:foo",
  "name": "Bar",
  "path": Array [
    Object {
      "name": "module:foo",
    },
    Object {
      "alias": "module:foo.Bar",
      "name": "Bar",
      "original": "Bar",
    },
  ],
  "properties": Array [
    Object {
      "description": "Create a Bar.",
      "filename": "jsdoc/aliasexports.js",
      "ignore": false,
      "isAsync": false,
      "isConstructor": true,
      "isGenerator": false,
      "kind": "constructor",
      "member": "constructor",
      "memberOf": "Bar.prototype",
      "name": "constructor",
      "params": Array [],
      "scope": "instance",
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Bar",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Bar",
          },
        ],
        "string": "Bar",
      },
    },
  ],
  "raw": "/**
 * Bar class.
 *
 * @alias module:foo.Bar
 */",
  "start": 20,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Bar",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Bar",
      },
    ],
    "string": "Bar",
  },
}
`;

exports[`./jsdoc/aliasexports.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Create a Bar.",
  "end": 127,
  "filename": "jsdoc/aliasexports.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 127,
      "line": 10,
    },
    "start": Position {
      "column": 4,
      "index": 86,
      "line": 9,
    },
  },
  "member": "constructor",
  "memberOf": "Bar.prototype",
  "name": "constructor",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Bar",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "constructor",
    },
  ],
  "raw": "/** Create a Bar. */",
  "scope": "instance",
  "start": 86,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Bar",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Bar",
      },
    ],
    "string": "Bar",
  },
}
`;

exports[`./jsdoc/aliasglobal.js snapshots: Item 1 1`] = `
Object {
  "alias": "<global>.log",
  "aliasOriginal": "log",
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 78,
  "filename": "jsdoc/aliasglobal.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 78,
      "line": 5,
    },
    "start": Position {
      "column": 4,
      "index": 19,
      "line": 3,
    },
  },
  "member": "log",
  "memberOf": "<global>",
  "mutable": true,
  "name": "log",
  "params": Array [],
  "path": Array [
    Object {
      "name": "<global>",
    },
    Object {
      "alias": "<global>.log",
      "name": "log",
      "original": "log",
    },
  ],
  "raw": "/** @alias <global>.log */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 19,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/aliasglobal2.js snapshots: Item 1 1`] = `
Object {
  "alias": "Test",
  "aliasOriginal": "Test",
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Creates a new test object.",
  "end": 203,
  "filename": "jsdoc/aliasglobal2.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 203,
      "line": 10,
    },
    "start": Position {
      "column": 4,
      "index": 19,
      "line": 2,
    },
  },
  "member": "Test",
  "mutable": true,
  "name": "Test",
  "params": Array [
    Object {
      "member": "testName",
      "name": "testName",
    },
  ],
  "path": Array [
    Object {
      "alias": "Test",
      "name": "Test",
      "original": "Test",
    },
  ],
  "raw": "/**
     * Creates a new test object.
     * @alias Test
     * @constructor
     */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 19,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/aliasglobal2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Document me.",
  "end": 197,
  "filename": "jsdoc/aliasglobal2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 29,
      "index": 197,
      "line": 9,
    },
    "start": Position {
      "column": 8,
      "index": 148,
      "line": 8,
    },
  },
  "member": "testName",
  "memberOf": "this",
  "mutable": true,
  "name": "testName",
  "params": Array [
    Object {
      "member": "testName",
      "name": "testName",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "name",
    },
  ],
  "raw": "/** Document me. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 148,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/aliasglobal2.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Document me.",
  "end": 280,
  "filename": "jsdoc/aliasglobal2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 280,
      "line": 14,
    },
    "start": Position {
      "column": 4,
      "index": 209,
      "line": 12,
    },
  },
  "member": "run",
  "memberOf": "Test.prototype",
  "name": "run",
  "params": Array [
    Object {
      "member": "message",
      "name": "message",
    },
  ],
  "path": Array [
    Object {
      "name": "Test",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "run",
    },
  ],
  "raw": "/** Document me. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "scope": "instance",
  "start": 209,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/aliasglobal2.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Document me.",
  "end": 327,
  "filename": "jsdoc/aliasglobal2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 21,
      "index": 327,
      "line": 17,
    },
    "start": Position {
      "column": 4,
      "index": 286,
      "line": 16,
    },
  },
  "member": "counter",
  "memberOf": "Test",
  "name": "counter",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Test",
    },
    Object {
      "name": "counter",
    },
  ],
  "raw": "/** Document me. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 286,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 1,
}
`;

exports[`./jsdoc/aliasresolve.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 33,
  "filename": "jsdoc/aliasresolve.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 11,
      "index": 33,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "A",
  "mutable": true,
  "name": "A",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "A",
    },
  ],
  "properties": Array [],
  "raw": "/**
 * @namespace
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/aliasresolve.js snapshots: Item 2 1`] = `
Object {
  "alias": "A.F",
  "aliasOriginal": "f",
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 118,
  "filename": "jsdoc/aliasresolve.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 15,
      "index": 118,
      "line": 11,
    },
    "start": Position {
      "column": 4,
      "index": 55,
      "line": 7,
    },
  },
  "member": "f",
  "memberOf": "A",
  "mutable": true,
  "name": "F",
  "namespace": Object {},
  "params": Array [
    Object {
      "member": "ns",
      "name": "ns",
    },
  ],
  "path": Array [
    Object {
      "name": "A",
    },
    Object {
      "alias": "A.F",
      "name": "F",
      "original": "f",
    },
  ],
  "properties": Array [],
  "raw": "/**
     * @namespace
     * @alias A.F
     */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 55,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/aliasresolve.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 188,
  "filename": "jsdoc/aliasresolve.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 28,
      "index": 188,
      "line": 16,
    },
    "start": Position {
      "column": 4,
      "index": 124,
      "line": 13,
    },
  },
  "member": "method",
  "memberOf": "f",
  "name": "method",
  "params": Array [],
  "path": Array [
    Object {
      "name": "f",
    },
    Object {
      "name": "method",
    },
  ],
  "raw": "/**
     * @return {String}
     */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "returns": Object {
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "String",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "String",
        },
      ],
      "string": "String",
    },
  },
  "start": 124,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/aliasresolve2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 33,
  "filename": "jsdoc/aliasresolve2.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 11,
      "index": 33,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "A",
  "mutable": true,
  "name": "A",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "A",
    },
  ],
  "properties": Array [],
  "raw": "/**
 * @namespace
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/aliasresolve2.js snapshots: Item 2 1`] = `
Object {
  "alias": "A.F",
  "aliasOriginal": "f",
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 82,
  "filename": "jsdoc/aliasresolve2.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 11,
      "index": 82,
      "line": 10,
    },
    "start": Position {
      "column": 0,
      "index": 35,
      "line": 6,
    },
  },
  "member": "f",
  "memberOf": "A",
  "mutable": true,
  "name": "F",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "A",
    },
    Object {
      "alias": "A.F",
      "name": "F",
      "original": "f",
    },
  ],
  "properties": Array [],
  "raw": "/**
 * @namespace
 * @alias A.F
 */",
  "start": 35,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/aliasresolve2.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 168,
  "filename": "jsdoc/aliasresolve2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 28,
      "index": 168,
      "line": 16,
    },
    "start": Position {
      "column": 4,
      "index": 104,
      "line": 13,
    },
  },
  "member": "method",
  "memberOf": "f",
  "name": "method",
  "params": Array [],
  "path": Array [
    Object {
      "name": "f",
    },
    Object {
      "name": "method",
    },
  ],
  "raw": "/**
     * @return {String}
     */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "returns": Object {
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "String",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "String",
        },
      ],
      "string": "String",
    },
  },
  "start": 104,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/also.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 113,
  "filename": "jsdoc/also.js",
  "fnName": "Asset",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 113,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Asset",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Asset",
    },
  ],
  "raw": "/** @class */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/also.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Set the value of the name property.",
  "end": 194,
  "filename": "jsdoc/also.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 194,
      "line": 13,
    },
    "start": Position {
      "column": 0,
      "index": 115,
      "line": 8,
    },
  },
  "params": Array [
    Object {
      "description": "",
      "name": "newName",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [],
  "raw": "/**
 *
 * Set the value of the name property.
 * @param {string} newName
 *
 */",
  "start": 115,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/also.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Get the value of the name property.",
  "end": 388,
  "filename": "jsdoc/also.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 388,
      "line": 22,
    },
    "start": Position {
      "column": 3,
      "index": 194,
      "line": 13,
    },
  },
  "member": "name",
  "memberOf": "Asset.prototype",
  "name": "name",
  "params": Array [
    Object {
      "member": "newName",
      "name": "newName",
    },
  ],
  "path": Array [
    Object {
      "name": "Asset",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "name",
    },
  ],
  "raw": "/**
 *
 * Get the value of the name property.
 * @returns {string}
 *
 */",
  "returns": Object {
    "description": "
",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "string",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "string",
        },
      ],
      "string": "string",
    },
  },
  "scope": "instance",
  "start": 194,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/also.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Set the value of the shape property.",
  "end": 465,
  "filename": "jsdoc/also.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 465,
      "line": 27,
    },
    "start": Position {
      "column": 0,
      "index": 390,
      "line": 24,
    },
  },
  "params": Array [
    Object {
      "name": "newShape",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [],
  "raw": "/**
 * Set the value of the shape property.
 * @param {string} newShape
 */",
  "start": 390,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/also.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Set the value of the shape property, plus some other property.",
  "end": 601,
  "filename": "jsdoc/also.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 601,
      "line": 31,
    },
    "start": Position {
      "column": 3,
      "index": 465,
      "line": 27,
    },
  },
  "params": Array [
    Object {
      "name": "newShape",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "name": "mysteryProperty",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [],
  "raw": "/**
 * Set the value of the shape property, plus some other property.
 * @param {string} newShape
 * @param {string} mysteryProperty
 */",
  "start": 465,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/also.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Get the value of the shape property.",
  "end": 972,
  "filename": "jsdoc/also.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 972,
      "line": 46,
    },
    "start": Position {
      "column": 3,
      "index": 601,
      "line": 31,
    },
  },
  "member": "shape",
  "memberOf": "Asset.prototype",
  "name": "shape",
  "params": Array [
    Object {
      "member": "newShape",
      "name": "newShape",
    },
    Object {
      "member": "mysteryProperty",
      "name": "mysteryProperty",
    },
  ],
  "path": Array [
    Object {
      "name": "Asset",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "shape",
    },
  ],
  "raw": "/**
 * Get the value of the shape property.
 * @returns {string}
 */",
  "returns": Object {
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "string",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "string",
        },
      ],
      "string": "string",
    },
  },
  "scope": "instance",
  "start": 601,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/also2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 62,
  "filename": "jsdoc/also2.js",
  "fnName": "BowlingAlley",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 62,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "BowlingAlley",
  "params": Array [],
  "path": Array [
    Object {
      "name": "BowlingAlley",
    },
  ],
  "raw": "/** @class */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/also2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Add a lane to the bowling alley.",
  "end": 359,
  "filename": "jsdoc/also2.js",
  "fnName": "addLanes",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 359,
      "line": 14,
    },
    "start": Position {
      "column": 0,
      "index": 64,
      "line": 6,
    },
  },
  "member": "addLanes",
  "memberOf": "BowlingAlley.prototype",
  "name": "addLanes",
  "params": Array [
    Object {
      "description": "- The number of lanes to add.",
      "name": "lanes",
      "optional": true,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "BowlingAlley",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "addLanes",
    },
  ],
  "raw": "/**
 * Add a lane to the bowling alley.
 * @also
 * Add the specified number of lanes to the bowling alley.
 * @param {number} [lanes=1] - The number of lanes to add.
 */",
  "scope": "instance",
  "start": 64,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/anonymousclass.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 19,
  "filename": "jsdoc/anonymousclass.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 19,
      "index": 19,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:test",
  },
  "path": Array [],
  "raw": "/** @module test */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/anonymousclass.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Test class",
  "end": 326,
  "export": "default",
  "filename": "jsdoc/anonymousclass.js",
  "ignore": false,
  "isDefaultExport": true,
  "isExport": true,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 326,
      "line": 19,
    },
    "start": Position {
      "column": 0,
      "index": 21,
      "line": 3,
    },
  },
  "path": Array [],
  "properties": Array [
    Object {
      "description": "Test constructor",
      "export": "default",
      "filename": "jsdoc/anonymousclass.js",
      "ignore": false,
      "isAsync": false,
      "isConstructor": true,
      "isDefaultExport": true,
      "isExport": true,
      "isGenerator": false,
      "kind": "constructor",
      "member": "constructor",
      "memberOf": "prototype",
      "name": "constructor",
      "params": Array [
        Object {
          "description": "- The foo parameter",
          "name": "foo",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "scope": "instance",
      "tags": Array [
        Object {
          "description": "- The foo parameter",
          "name": "foo",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "     * @param {string} foo - The foo parameter",
              "tokens": Object {
                "delimiter": "*",
                "description": "- The foo parameter",
                "end": "",
                "lineEnd": "",
                "name": "foo",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 3,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
    },
    Object {
      "description": "Test method",
      "export": "default",
      "filename": "jsdoc/anonymousclass.js",
      "ignore": false,
      "isAsync": false,
      "isDefaultExport": true,
      "isExport": true,
      "isGenerator": false,
      "kind": "method",
      "member": "test",
      "memberOf": "prototype",
      "name": "test",
      "params": Array [],
      "scope": "instance",
      "tags": Array [],
    },
    Object {
      "description": "Test static method",
      "export": "default",
      "filename": "jsdoc/anonymousclass.js",
      "ignore": false,
      "isAsync": false,
      "isDefaultExport": true,
      "isExport": true,
      "isGenerator": false,
      "kind": "method",
      "member": "staticTest",
      "memberOf": "prototype",
      "name": "staticTest",
      "params": Array [],
      "scope": "static",
      "tags": Array [],
    },
  ],
  "raw": "/** Test class */",
  "start": 21,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/anonymousclass.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Test constructor",
  "end": 228,
  "export": "default",
  "filename": "jsdoc/anonymousclass.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isDefaultExport": true,
  "isExport": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 228,
      "line": 12,
    },
    "start": Position {
      "column": 4,
      "index": 66,
      "line": 5,
    },
  },
  "member": "constructor",
  "memberOf": "prototype",
  "name": "constructor",
  "params": Array [
    Object {
      "description": "- The foo parameter",
      "name": "foo",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "prototype",
    },
    Object {
      "name": "constructor",
    },
  ],
  "raw": "/**
     * Test constructor
     * @param {string} foo - The foo parameter
     */",
  "scope": "instance",
  "start": 66,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/anonymousclass.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Test member",
  "end": 198,
  "filename": "jsdoc/anonymousclass.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 26,
      "index": 198,
      "line": 10,
    },
    "start": Position {
      "column": 8,
      "index": 180,
      "line": 10,
    },
  },
  "raw": "/** Test member */",
  "start": 180,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/anonymousclass.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Test method",
  "end": 266,
  "export": "default",
  "filename": "jsdoc/anonymousclass.js",
  "ignore": false,
  "isAsync": false,
  "isDefaultExport": true,
  "isExport": true,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 13,
      "index": 266,
      "line": 15,
    },
    "start": Position {
      "column": 4,
      "index": 234,
      "line": 14,
    },
  },
  "member": "test",
  "memberOf": "prototype",
  "name": "test",
  "params": Array [],
  "path": Array [
    Object {
      "name": "prototype",
    },
    Object {
      "name": "test",
    },
  ],
  "raw": "/** Test method */",
  "scope": "instance",
  "start": 234,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/anonymousclass.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Test static method",
  "end": 324,
  "export": "default",
  "filename": "jsdoc/anonymousclass.js",
  "ignore": false,
  "isAsync": false,
  "isDefaultExport": true,
  "isExport": true,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 26,
      "index": 324,
      "line": 18,
    },
    "start": Position {
      "column": 4,
      "index": 272,
      "line": 17,
    },
  },
  "member": "staticTest",
  "memberOf": "prototype",
  "name": "staticTest",
  "params": Array [],
  "path": Array [
    Object {
      "name": "prototype",
    },
    Object {
      "name": "staticTest",
    },
  ],
  "raw": "/** Test static method */",
  "scope": "static",
  "start": 272,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/anonymousclassparam.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 18,
  "filename": "jsdoc/anonymousclassparam.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 18,
      "index": 18,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:foo",
  },
  "path": Array [],
  "raw": "/** @module foo */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/arrowfunction.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Increment a number by 1.",
  "end": 114,
  "filename": "jsdoc/arrowfunction.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 27,
      "index": 114,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "increment",
  "mutable": true,
  "name": "increment",
  "params": Array [
    Object {
      "description": "- The number to increment.",
      "name": "n",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "increment",
    },
  ],
  "raw": "/**
 * Increment a number by 1.
 *
 * @param {number} n - The number to increment.
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/arrowfunction.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Print a value to the console.",
  "end": 212,
  "filename": "jsdoc/arrowfunction.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 55,
      "index": 212,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 116,
      "line": 8,
    },
  },
  "member": "print",
  "mutable": true,
  "name": "print",
  "params": Array [
    Object {
      "description": "",
      "ignore": false,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @type {*} */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "",
                "tag": "@type",
                "type": "{*}",
              },
            },
          ],
          "tag": "type",
          "type": "*",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "type": "ANY",
          },
        ],
        "simple": Array [
          Object {
            "name": "*",
          },
        ],
        "string": "*",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "print",
    },
  ],
  "raw": "/**
 * Print a value to the console.
 */",
  "start": 116,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/arrowfunction.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 190,
  "filename": "jsdoc/arrowfunction.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 33,
      "index": 190,
      "line": 11,
    },
    "start": Position {
      "column": 13,
      "index": 170,
      "line": 11,
    },
  },
  "member": "val",
  "mutable": true,
  "name": "val",
  "params": Array [],
  "path": Array [
    Object {
      "name": "print",
    },
  ],
  "raw": "/** @type {*} */",
  "start": 170,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "type": "ANY",
      },
    ],
    "simple": Array [
      Object {
        "name": "*",
      },
    ],
    "string": "*",
  },
}
`;

exports[`./jsdoc/arrowfunction.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Create a class with a \`name\` property.",
  "end": 404,
  "filename": "jsdoc/arrowfunction.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 404,
      "line": 24,
    },
    "start": Position {
      "column": 0,
      "index": 214,
      "line": 13,
    },
  },
  "member": "createClass",
  "mutable": true,
  "name": "createClass",
  "params": Array [],
  "path": Array [
    Object {
      "name": "createClass",
    },
  ],
  "raw": "/**
 * Create a class with a \`name\` property.
 */",
  "start": 214,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/asyncfunction.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Add a number.",
  "end": 353,
  "filename": "jsdoc/asyncfunction.js",
  "fnName": "add",
  "ignore": false,
  "isAsync": true,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 353,
      "line": 17,
    },
    "start": Position {
      "column": 0,
      "index": 151,
      "line": 9,
    },
  },
  "name": "add",
  "params": Array [
    Object {
      "description": "- The number to add.",
      "name": "x",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "add",
    },
  ],
  "raw": "/**
 * Add a number.
 * @param {number} x - The number to add.
 */",
  "returns": Object {
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "Number",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "Number",
        },
      ],
      "string": "Number",
    },
  },
  "start": 151,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/asyncfunction.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Subtract a number.",
  "end": 587,
  "filename": "jsdoc/asyncfunction.js",
  "fnName": "subtract",
  "ignore": false,
  "isAsync": true,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 587,
      "line": 27,
    },
    "start": Position {
      "column": 0,
      "index": 355,
      "line": 19,
    },
  },
  "member": "subtract",
  "mutable": true,
  "name": "subtract",
  "params": Array [
    Object {
      "description": "- The number to subtract.",
      "name": "x",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "subtract",
    },
  ],
  "raw": "/**
 * Subtract a number.
 * @param {number} x - The number to subtract.
 */",
  "returns": Object {
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "Number",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "Number",
        },
      ],
      "string": "Number",
    },
  },
  "start": 355,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/asyncfunction.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Adder class.",
  "end": 805,
  "filename": "jsdoc/asyncfunction.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 805,
      "line": 43,
    },
    "start": Position {
      "column": 0,
      "index": 589,
      "line": 29,
    },
  },
  "name": "Adder",
  "path": Array [
    Object {
      "name": "Adder",
    },
  ],
  "properties": Array [
    Object {
      "description": "Construct an Adder instance.",
      "filename": "jsdoc/asyncfunction.js",
      "ignore": false,
      "isAsync": false,
      "isConstructor": true,
      "isGenerator": false,
      "kind": "constructor",
      "member": "constructor",
      "memberOf": "Adder.prototype",
      "name": "constructor",
      "params": Array [],
      "scope": "instance",
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Adder",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Adder",
          },
        ],
        "string": "Adder",
      },
    },
    Object {
      "description": "Add a number.",
      "filename": "jsdoc/asyncfunction.js",
      "ignore": false,
      "isAsync": true,
      "isGenerator": false,
      "kind": "method",
      "member": "add",
      "memberOf": "Adder.prototype",
      "name": "add",
      "params": Array [
        Object {
          "description": "- The number to add.",
          "name": "x",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "number",
              },
            ],
            "string": "number",
          },
        },
      ],
      "scope": "instance",
      "tags": Array [
        Object {
          "description": "- The number to add.",
          "name": "x",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "     * @param {number} x - The number to add.",
              "tokens": Object {
                "delimiter": "*",
                "description": "- The number to add.",
                "end": "",
                "lineEnd": "",
                "name": "x",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@param",
                "type": "{number}",
              },
            },
            Object {
              "number": 3,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "number",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Adder",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Adder",
          },
        ],
        "string": "Adder",
      },
    },
  ],
  "raw": "/**
 * Adder class.
 */",
  "start": 589,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Adder",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Adder",
      },
    ],
    "string": "Adder",
  },
}
`;

exports[`./jsdoc/asyncfunction.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Construct an Adder instance.",
  "end": 699,
  "filename": "jsdoc/asyncfunction.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 699,
      "line": 36,
    },
    "start": Position {
      "column": 4,
      "index": 631,
      "line": 33,
    },
  },
  "member": "constructor",
  "memberOf": "Adder.prototype",
  "name": "constructor",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Adder",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "constructor",
    },
  ],
  "raw": "/**
     * Construct an Adder instance.
     */",
  "scope": "instance",
  "start": 631,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Adder",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Adder",
      },
    ],
    "string": "Adder",
  },
}
`;

exports[`./jsdoc/asyncfunction.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Add a number.",
  "end": 803,
  "filename": "jsdoc/asyncfunction.js",
  "ignore": false,
  "isAsync": true,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 19,
      "index": 803,
      "line": 42,
    },
    "start": Position {
      "column": 4,
      "index": 705,
      "line": 38,
    },
  },
  "member": "add",
  "memberOf": "Adder.prototype",
  "name": "add",
  "params": Array [
    Object {
      "description": "- The number to add.",
      "name": "x",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Adder",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "add",
    },
  ],
  "raw": "/**
     * Add a number.
     * @param {number} x - The number to add.
     */",
  "scope": "instance",
  "start": 705,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Adder",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Adder",
      },
    ],
    "string": "Adder",
  },
}
`;

exports[`./jsdoc/asynctag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Asynchronous function.",
  "end": 63,
  "filename": "jsdoc/asynctag.js",
  "ignore": false,
  "isAsync": true,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 63,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "foo",
  "raw": "/**
 * Asynchronous function.
 *
 * @function foo
 * @async
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/augmentall.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Parent interface.",
  "end": 67,
  "filename": "jsdoc/augmentall.js",
  "fnName": "Connection",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "isInterface": true,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 24,
      "index": 67,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Connection",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Connection",
    },
  ],
  "raw": "/**
 * Parent interface.
 * @interface
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentall.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Open the connection.",
  "end": 143,
  "filename": "jsdoc/augmentall.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 42,
      "index": 143,
      "line": 10,
    },
    "start": Position {
      "column": 0,
      "index": 69,
      "line": 7,
    },
  },
  "member": "open",
  "memberOf": "Connection.prototype",
  "name": "open",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Connection",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "open",
    },
  ],
  "raw": "/**
 * Open the connection.
 */",
  "scope": "instance",
  "start": 69,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentall.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Child class.",
  "end": 227,
  "filename": "jsdoc/augmentall.js",
  "fnName": "Socket",
  "ignore": false,
  "implements": JSDocType {
    "parsed": Array [
      Object {
        "name": "Connection",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Connection",
      },
    ],
    "string": "Connection",
  },
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 227,
      "line": 17,
    },
    "start": Position {
      "column": 0,
      "index": 145,
      "line": 12,
    },
  },
  "name": "Socket",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Socket",
    },
  ],
  "raw": "/**
 * Child class.
 * @class
 * @implements {Connection}
 */",
  "start": 145,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentall.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 286,
  "filename": "jsdoc/augmentall.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 38,
      "index": 286,
      "line": 20,
    },
    "start": Position {
      "column": 0,
      "index": 229,
      "line": 19,
    },
  },
  "member": "open",
  "memberOf": "Socket.prototype",
  "name": "open",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Socket",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "open",
    },
  ],
  "raw": "/** @inheritdoc */",
  "scope": "instance",
  "start": 229,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentall.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Extension of child class.",
  "end": 385,
  "extends": Array [
    Object {
      "name": "",
    },
  ],
  "filename": "jsdoc/augmentall.js",
  "fnName": "EncryptedSocket",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 29,
      "index": 385,
      "line": 27,
    },
    "start": Position {
      "column": 0,
      "index": 288,
      "line": 22,
    },
  },
  "name": "EncryptedSocket",
  "params": Array [],
  "path": Array [
    Object {
      "name": "EncryptedSocket",
    },
  ],
  "raw": "/**
 * Extension of child class.
 * @class
 * @extends {Socket}
 */",
  "start": 288,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentall2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Parent interface.",
  "end": 67,
  "filename": "jsdoc/augmentall2.js",
  "fnName": "Connection",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "isInterface": true,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 24,
      "index": 67,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Connection",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Connection",
    },
  ],
  "raw": "/**
 * Parent interface.
 * @interface
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentall2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Open the connection.",
  "end": 143,
  "filename": "jsdoc/augmentall2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 42,
      "index": 143,
      "line": 10,
    },
    "start": Position {
      "column": 0,
      "index": 69,
      "line": 7,
    },
  },
  "member": "open",
  "memberOf": "Connection.prototype",
  "name": "open",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Connection",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "open",
    },
  ],
  "raw": "/**
 * Open the connection.
 */",
  "scope": "instance",
  "start": 69,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentall2.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Child interface.",
  "end": 232,
  "extends": Array [
    Object {
      "name": "",
    },
  ],
  "filename": "jsdoc/augmentall2.js",
  "fnName": "Socket",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "isInterface": true,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 232,
      "line": 17,
    },
    "start": Position {
      "column": 0,
      "index": 145,
      "line": 12,
    },
  },
  "name": "Socket",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Socket",
    },
  ],
  "raw": "/**
 * Child interface.
 * @interface
 * @extends {Connection}
 */",
  "start": 145,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentall2.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Implementation of child interface.",
  "end": 343,
  "filename": "jsdoc/augmentall2.js",
  "fnName": "EncryptedSocket",
  "ignore": false,
  "implements": JSDocType {
    "parsed": Array [
      Object {
        "name": "Socket",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Socket",
      },
    ],
    "string": "Socket",
  },
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 29,
      "index": 343,
      "line": 24,
    },
    "start": Position {
      "column": 0,
      "index": 234,
      "line": 19,
    },
  },
  "name": "EncryptedSocket",
  "params": Array [],
  "path": Array [
    Object {
      "name": "EncryptedSocket",
    },
  ],
  "raw": "/**
 * Implementation of child interface.
 * @class
 * @implements {Socket}
 */",
  "start": 234,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentall2.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 411,
  "filename": "jsdoc/augmentall2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 47,
      "index": 411,
      "line": 27,
    },
    "start": Position {
      "column": 0,
      "index": 345,
      "line": 26,
    },
  },
  "member": "open",
  "memberOf": "EncryptedSocket.prototype",
  "name": "open",
  "params": Array [],
  "path": Array [
    Object {
      "name": "EncryptedSocket",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "open",
    },
  ],
  "raw": "/** @inheritdoc */",
  "scope": "instance",
  "start": 345,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 91,
  "filename": "jsdoc/augmentstag.js",
  "fnName": "Foo",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 91,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "raw": "/**
 * @constructor
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "First property",
  "end": 89,
  "filename": "jsdoc/augmentstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 22,
      "index": 89,
      "line": 6,
    },
    "start": Position {
      "column": 4,
      "index": 45,
      "line": 5,
    },
  },
  "member": "prop1",
  "memberOf": "this",
  "name": "prop1",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "prop1",
    },
  ],
  "raw": "/** First property */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 45,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "boolean",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "boolean",
      },
    ],
    "string": "boolean",
  },
  "value": true,
}
`;

exports[`./jsdoc/augmentstag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Second property",
  "end": 175,
  "filename": "jsdoc/augmentstag.js",
  "ignore": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 37,
      "index": 175,
      "line": 13,
    },
    "start": Position {
      "column": 0,
      "index": 93,
      "line": 9,
    },
  },
  "member": "prop2",
  "memberOf": "Foo.prototype",
  "name": "prop2",
  "path": Array [
    Object {
      "name": "Foo",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "prop2",
    },
  ],
  "raw": "/**
 * Second property
 * @type {String}
 */",
  "scope": "instance",
  "start": 93,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "String",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "String",
      },
    ],
    "string": "String",
  },
  "value": "parent prop2",
}
`;

exports[`./jsdoc/augmentstag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "First parent method.",
  "end": 247,
  "filename": "jsdoc/augmentstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 38,
      "index": 247,
      "line": 18,
    },
    "start": Position {
      "column": 0,
      "index": 177,
      "line": 15,
    },
  },
  "member": "method1",
  "memberOf": "Foo.prototype",
  "name": "method1",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "method1",
    },
  ],
  "raw": "/**
 * First parent method.
 */",
  "scope": "instance",
  "start": 177,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Second parent method.",
  "end": 320,
  "filename": "jsdoc/augmentstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 38,
      "index": 320,
      "line": 23,
    },
    "start": Position {
      "column": 0,
      "index": 249,
      "line": 20,
    },
  },
  "member": "method2",
  "memberOf": "Foo.prototype",
  "name": "method2",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "method2",
    },
  ],
  "raw": "/**
 * Second parent method.
 */",
  "scope": "instance",
  "start": 249,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Third parent method.",
  "end": 392,
  "filename": "jsdoc/augmentstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 38,
      "index": 392,
      "line": 28,
    },
    "start": Position {
      "column": 0,
      "index": 322,
      "line": 25,
    },
  },
  "member": "method3",
  "memberOf": "Foo.prototype",
  "name": "method3",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "method3",
    },
  ],
  "raw": "/**
 * Third parent method.
 */",
  "scope": "instance",
  "start": 322,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag.js snapshots: Item 7 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 498,
  "extends": Array [
    Object {
      "name": "Foo",
    },
  ],
  "filename": "jsdoc/augmentstag.js",
  "fnName": "Bar",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 498,
      "line": 37,
    },
    "start": Position {
      "column": 0,
      "index": 394,
      "line": 30,
    },
  },
  "name": "Bar",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Bar",
    },
  ],
  "raw": "/**
 * @constructor
 * @extends Foo
 */",
  "start": 394,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag.js snapshots: Item 8 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Third prop *",
  "end": 496,
  "filename": "jsdoc/augmentstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 22,
      "index": 496,
      "line": 36,
    },
    "start": Position {
      "column": 4,
      "index": 455,
      "line": 35,
    },
  },
  "member": "prop3",
  "memberOf": "this",
  "name": "prop3",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "prop3",
    },
  ],
  "raw": "/** Third prop **/",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 455,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "boolean",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "boolean",
      },
    ],
    "string": "boolean",
  },
  "value": true,
}
`;

exports[`./jsdoc/augmentstag.js snapshots: Item 9 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Second child method.",
  "end": 570,
  "filename": "jsdoc/augmentstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 38,
      "index": 570,
      "line": 42,
    },
    "start": Position {
      "column": 0,
      "index": 500,
      "line": 39,
    },
  },
  "member": "method2",
  "memberOf": "Bar.prototype",
  "name": "method2",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Bar",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "method2",
    },
  ],
  "raw": "/**
 * Second child method.
 */",
  "scope": "instance",
  "start": 500,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag.js snapshots: Item 10 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 682,
  "extends": Array [
    Object {
      "name": "",
    },
  ],
  "filename": "jsdoc/augmentstag.js",
  "fnName": "Baz",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 682,
      "line": 51,
    },
    "start": Position {
      "column": 0,
      "index": 572,
      "line": 44,
    },
  },
  "name": "Baz",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Baz",
    },
  ],
  "raw": "/**
 * @constructor
 * @extends {Bar}
 */",
  "start": 572,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag.js snapshots: Item 11 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Override prop1",
  "end": 680,
  "filename": "jsdoc/augmentstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 23,
      "index": 680,
      "line": 50,
    },
    "start": Position {
      "column": 4,
      "index": 635,
      "line": 49,
    },
  },
  "member": "prop1",
  "memberOf": "this",
  "name": "prop1",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "prop1",
    },
  ],
  "raw": "/** Override prop1 */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 635,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "new",
}
`;

exports[`./jsdoc/augmentstag.js snapshots: Item 12 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Third grandchild method.",
  "end": 758,
  "filename": "jsdoc/augmentstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 38,
      "index": 758,
      "line": 56,
    },
    "start": Position {
      "column": 0,
      "index": 684,
      "line": 53,
    },
  },
  "member": "method3",
  "memberOf": "Baz.prototype",
  "name": "method3",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Baz",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "method3",
    },
  ],
  "raw": "/**
 * Third grandchild method.
 */",
  "scope": "instance",
  "start": 684,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 139,
  "extends": Array [
    Object {
      "name": "UndocumentedThing",
    },
  ],
  "filename": "jsdoc/augmentstag2.js",
  "fnName": "Qux",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 139,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 68,
      "line": 2,
    },
  },
  "name": "Qux",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Qux",
    },
  ],
  "raw": "/**
 * @constructor
 * @extends UndocumentedThing
 */",
  "start": 68,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag3.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 105,
  "filename": "jsdoc/augmentstag3.js",
  "fnName": "Foo",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 105,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 73,
      "line": 2,
    },
  },
  "name": "Foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "raw": "/** @class */",
  "start": 73,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag3.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A method.",
  "end": 162,
  "filename": "jsdoc/augmentstag3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 39,
      "index": 162,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 106,
      "line": 5,
    },
  },
  "member": "method1",
  "memberOf": "Foo.prototype",
  "name": "method1",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "method1",
    },
  ],
  "raw": "/** A method. */",
  "scope": "instance",
  "start": 106,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag3.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 196,
  "filename": "jsdoc/augmentstag3.js",
  "fnName": "Bar",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 196,
      "line": 10,
    },
    "start": Position {
      "column": 0,
      "index": 164,
      "line": 8,
    },
  },
  "name": "Bar",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Bar",
    },
  ],
  "raw": "/** @class */",
  "start": 164,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag3.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Another method.",
  "end": 258,
  "filename": "jsdoc/augmentstag3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 38,
      "index": 258,
      "line": 12,
    },
    "start": Position {
      "column": 0,
      "index": 197,
      "line": 11,
    },
  },
  "member": "method2",
  "memberOf": "Bar.prototype",
  "name": "method2",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Bar",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "method2",
    },
  ],
  "raw": "/** Another method. */",
  "scope": "instance",
  "start": 197,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag3.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 329,
  "extends": Array [
    Object {
      "name": "Foo",
    },
    Object {
      "name": "Bar",
    },
  ],
  "filename": "jsdoc/augmentstag3.js",
  "fnName": "FooBar",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 329,
      "line": 18,
    },
    "start": Position {
      "column": 0,
      "index": 260,
      "line": 14,
    },
  },
  "name": "FooBar",
  "params": Array [],
  "path": Array [
    Object {
      "name": "FooBar",
    },
  ],
  "raw": "/** @class
 * @augments Foo
 * @augments Bar */",
  "start": 260,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag4.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "classDescription": "class",
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 322,
  "filename": "jsdoc/augmentstag4.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 322,
      "line": 17,
    },
    "start": Position {
      "column": 0,
      "index": 48,
      "line": 3,
    },
  },
  "member": "Base",
  "mutable": true,
  "name": "Base",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Base",
    },
  ],
  "raw": "/**
 * @constructor
 * @classdesc Base class
 */",
  "start": 48,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag4.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "member",
  "end": 163,
  "filename": "jsdoc/augmentstag4.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 24,
      "index": 163,
      "line": 9,
    },
    "start": Position {
      "column": 4,
      "index": 125,
      "line": 8,
    },
  },
  "member": "test1",
  "memberOf": "this",
  "mutable": true,
  "name": "test1",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "test1",
    },
  ],
  "raw": "/** member */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 125,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "base",
}
`;

exports[`./jsdoc/augmentstag4.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "another member",
  "end": 212,
  "filename": "jsdoc/augmentstag4.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 22,
      "index": 212,
      "line": 11,
    },
    "start": Position {
      "column": 4,
      "index": 168,
      "line": 10,
    },
  },
  "member": "test2",
  "memberOf": "this",
  "mutable": true,
  "name": "test2",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "test2",
    },
  ],
  "raw": "/** another member */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 168,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag4.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "explicitly named member",
  "end": 319,
  "filename": "jsdoc/augmentstag4.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 31,
      "index": 319,
      "line": 16,
    },
    "start": Position {
      "column": 4,
      "index": 217,
      "line": 12,
    },
  },
  "member": "test3",
  "memberOf": "Base",
  "mutable": true,
  "name": "test3",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "test3",
    },
  ],
  "raw": "/**
     * explicitly named member
     * @function Base#test3
     */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 217,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag4.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "classDescription": "of Base",
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 454,
  "extends": Array [
    Object {
      "name": "Base",
    },
  ],
  "filename": "jsdoc/augmentstag4.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 454,
      "line": 26,
    },
    "start": Position {
      "column": 0,
      "index": 324,
      "line": 19,
    },
  },
  "member": "Derived",
  "mutable": true,
  "name": "Derived",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Derived",
    },
  ],
  "raw": "/**
 * @constructor
 * @extends Base
 * @classdesc Extension of Base
 */",
  "start": 324,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag5.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 13,
  "filename": "jsdoc/augmentstag5.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 13,
      "index": 13,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "raw": "/** @class */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/augmentstag5.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 282,
  "filename": "jsdoc/augmentstag5.js",
  "ignore": false,
  "kind": "prototype",
  "lends": Array [],
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 282,
      "line": 12,
    },
    "start": Position {
      "column": 18,
      "index": 68,
      "line": 6,
    },
  },
  "name": "prototype",
  "path": Array [
    Object {
      "name": "Base0",
    },
    Object {
      "name": "prototype",
    },
  ],
  "properties": Array [
    Object {
      "description": "Description for {@link Base0#methodOfBaseCommon}.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Base0",
        },
        Object {
          "name": "prototype",
        },
      ],
      "tags": Array [],
    },
    Object {
      "description": "Description for {@link Base0#methodOfBase0}.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Base0",
        },
        Object {
          "name": "prototype",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** @lends Base0# */",
  "start": 68,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/augmentstag5.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Description for {@link Base0#methodOfBaseCommon}.",
  "end": 189,
  "filename": "jsdoc/augmentstag5.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 37,
      "index": 189,
      "line": 8,
    },
    "start": Position {
      "column": 4,
      "index": 95,
      "line": 7,
    },
  },
  "member": "methodOfBaseCommon",
  "memberOf": "prototype",
  "name": "methodOfBaseCommon",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Base0",
    },
    Object {
      "name": "prototype",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Description for {@link Base0#methodOfBaseCommon}.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "methodOfBaseCommon: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "methodOfBaseCommon",
        "memberOf": undefined,
        "name": "methodOfBaseCommon",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Description for {@link Base0#methodOfBaseCommon}.",
      "end": 189,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 37,
          "index": 189,
          "line": 8,
        },
        "start": Position {
          "column": 4,
          "index": 95,
          "line": 7,
        },
      },
      "member": "methodOfBaseCommon",
      "memberOf": undefined,
      "name": "methodOfBaseCommon",
      "params": Array [],
      "path": Array [],
      "raw": "/** Description for {@link Base0#methodOfBaseCommon}. */",
      "start": 95,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Description for {@link Base0#methodOfBase0}.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "methodOfBase0: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "methodOfBase0",
        "memberOf": undefined,
        "name": "methodOfBase0",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Description for {@link Base0#methodOfBase0}.",
      "end": 280,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 32,
          "index": 280,
          "line": 11,
        },
        "start": Position {
          "column": 4,
          "index": 196,
          "line": 10,
        },
      },
      "member": "methodOfBase0",
      "memberOf": undefined,
      "name": "methodOfBase0",
      "params": Array [],
      "path": Array [],
      "raw": "/** Description for {@link Base0#methodOfBase0}. */",
      "start": 196,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Description for {@link Base0#methodOfBaseCommon}. */",
  "start": 95,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag5.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Description for {@link Base0#methodOfBase0}.",
  "end": 280,
  "filename": "jsdoc/augmentstag5.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 32,
      "index": 280,
      "line": 11,
    },
    "start": Position {
      "column": 4,
      "index": 196,
      "line": 10,
    },
  },
  "member": "methodOfBase0",
  "memberOf": "prototype",
  "name": "methodOfBase0",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Base0",
    },
    Object {
      "name": "prototype",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Description for {@link Base0#methodOfBaseCommon}.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "methodOfBaseCommon: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "methodOfBaseCommon",
        "memberOf": undefined,
        "name": "methodOfBaseCommon",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Description for {@link Base0#methodOfBaseCommon}.",
      "end": 189,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 37,
          "index": 189,
          "line": 8,
        },
        "start": Position {
          "column": 4,
          "index": 95,
          "line": 7,
        },
      },
      "member": "methodOfBaseCommon",
      "memberOf": undefined,
      "name": "methodOfBaseCommon",
      "params": Array [],
      "path": Array [],
      "raw": "/** Description for {@link Base0#methodOfBaseCommon}. */",
      "start": 95,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Description for {@link Base0#methodOfBase0}.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "methodOfBase0: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "methodOfBase0",
        "memberOf": undefined,
        "name": "methodOfBase0",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Description for {@link Base0#methodOfBase0}.",
      "end": 280,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 32,
          "index": 280,
          "line": 11,
        },
        "start": Position {
          "column": 4,
          "index": 196,
          "line": 10,
        },
      },
      "member": "methodOfBase0",
      "memberOf": undefined,
      "name": "methodOfBase0",
      "params": Array [],
      "path": Array [],
      "raw": "/** Description for {@link Base0#methodOfBase0}. */",
      "start": 196,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Description for {@link Base0#methodOfBase0}. */",
  "start": 196,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag5.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 318,
  "filename": "jsdoc/augmentstag5.js",
  "fnName": "Base1",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 19,
      "index": 318,
      "line": 15,
    },
    "start": Position {
      "column": 0,
      "index": 285,
      "line": 14,
    },
  },
  "name": "Base1",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Base1",
    },
  ],
  "raw": "/** @class */",
  "start": 285,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag5.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 552,
  "filename": "jsdoc/augmentstag5.js",
  "ignore": false,
  "kind": "prototype",
  "lends": Array [],
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 552,
      "line": 23,
    },
    "start": Position {
      "column": 18,
      "index": 338,
      "line": 17,
    },
  },
  "name": "prototype",
  "path": Array [
    Object {
      "name": "Base1",
    },
    Object {
      "name": "prototype",
    },
  ],
  "properties": Array [
    Object {
      "description": "Description for {@link Base1#methodOfBaseCommon}.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Base1",
        },
        Object {
          "name": "prototype",
        },
      ],
      "tags": Array [],
    },
    Object {
      "description": "Description for {@link Base1#methodOfBase1}.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Base1",
        },
        Object {
          "name": "prototype",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** @lends Base1# */",
  "start": 338,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/augmentstag5.js snapshots: Item 7 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Description for {@link Base1#methodOfBaseCommon}.",
  "end": 459,
  "filename": "jsdoc/augmentstag5.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 37,
      "index": 459,
      "line": 19,
    },
    "start": Position {
      "column": 4,
      "index": 365,
      "line": 18,
    },
  },
  "member": "methodOfBaseCommon",
  "memberOf": "prototype",
  "name": "methodOfBaseCommon",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Base1",
    },
    Object {
      "name": "prototype",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Description for {@link Base1#methodOfBaseCommon}.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "methodOfBaseCommon: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "methodOfBaseCommon",
        "memberOf": undefined,
        "name": "methodOfBaseCommon",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Description for {@link Base1#methodOfBaseCommon}.",
      "end": 459,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 37,
          "index": 459,
          "line": 19,
        },
        "start": Position {
          "column": 4,
          "index": 365,
          "line": 18,
        },
      },
      "member": "methodOfBaseCommon",
      "memberOf": undefined,
      "name": "methodOfBaseCommon",
      "params": Array [],
      "path": Array [],
      "raw": "/** Description for {@link Base1#methodOfBaseCommon}. */",
      "start": 365,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Description for {@link Base1#methodOfBase1}.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "methodOfBase1: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "methodOfBase1",
        "memberOf": undefined,
        "name": "methodOfBase1",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Description for {@link Base1#methodOfBase1}.",
      "end": 550,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 32,
          "index": 550,
          "line": 22,
        },
        "start": Position {
          "column": 4,
          "index": 466,
          "line": 21,
        },
      },
      "member": "methodOfBase1",
      "memberOf": undefined,
      "name": "methodOfBase1",
      "params": Array [],
      "path": Array [],
      "raw": "/** Description for {@link Base1#methodOfBase1}. */",
      "start": 466,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Description for {@link Base1#methodOfBaseCommon}. */",
  "start": 365,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag5.js snapshots: Item 8 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Description for {@link Base1#methodOfBase1}.",
  "end": 550,
  "filename": "jsdoc/augmentstag5.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 32,
      "index": 550,
      "line": 22,
    },
    "start": Position {
      "column": 4,
      "index": 466,
      "line": 21,
    },
  },
  "member": "methodOfBase1",
  "memberOf": "prototype",
  "name": "methodOfBase1",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Base1",
    },
    Object {
      "name": "prototype",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Description for {@link Base1#methodOfBaseCommon}.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "methodOfBaseCommon: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "methodOfBaseCommon",
        "memberOf": undefined,
        "name": "methodOfBaseCommon",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Description for {@link Base1#methodOfBaseCommon}.",
      "end": 459,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 37,
          "index": 459,
          "line": 19,
        },
        "start": Position {
          "column": 4,
          "index": 365,
          "line": 18,
        },
      },
      "member": "methodOfBaseCommon",
      "memberOf": undefined,
      "name": "methodOfBaseCommon",
      "params": Array [],
      "path": Array [],
      "raw": "/** Description for {@link Base1#methodOfBaseCommon}. */",
      "start": 365,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Description for {@link Base1#methodOfBase1}.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "methodOfBase1: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "methodOfBase1",
        "memberOf": undefined,
        "name": "methodOfBase1",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Description for {@link Base1#methodOfBase1}.",
      "end": 550,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 32,
          "index": 550,
          "line": 22,
        },
        "start": Position {
          "column": 4,
          "index": 466,
          "line": 21,
        },
      },
      "member": "methodOfBase1",
      "memberOf": undefined,
      "name": "methodOfBase1",
      "params": Array [],
      "path": Array [],
      "raw": "/** Description for {@link Base1#methodOfBase1}. */",
      "start": 466,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Description for {@link Base1#methodOfBase1}. */",
  "start": 466,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag5.js snapshots: Item 9 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 630,
  "extends": Array [
    Object {
      "name": "Base0",
    },
    Object {
      "name": "Base1",
    },
  ],
  "filename": "jsdoc/augmentstag5.js",
  "fnName": "Class",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 19,
      "index": 630,
      "line": 30,
    },
    "start": Position {
      "column": 0,
      "index": 555,
      "line": 25,
    },
  },
  "name": "Class",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Class",
    },
  ],
  "raw": "/**
 * @class
 * @augments Base0
 * @augments Base1
 */",
  "start": 555,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag6.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 58,
  "filename": "jsdoc/augmentstag6.js",
  "fnName": "IConnection",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "isInterface": true,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 25,
      "index": 58,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 15,
      "line": 3,
    },
  },
  "name": "IConnection",
  "params": Array [],
  "path": Array [
    Object {
      "name": "IConnection",
    },
  ],
  "raw": "/** @interface */",
  "start": 15,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag6.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Open the connection.",
  "end": 131,
  "filename": "jsdoc/augmentstag6.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 43,
      "index": 131,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 60,
      "line": 6,
    },
  },
  "member": "open",
  "memberOf": "IConnection.prototype",
  "name": "open",
  "params": Array [],
  "path": Array [
    Object {
      "name": "IConnection",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "open",
    },
  ],
  "raw": "/** Open the connection. */",
  "scope": "instance",
  "start": 60,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag6.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 214,
  "extends": Array [
    Object {
      "name": "",
    },
  ],
  "filename": "jsdoc/augmentstag6.js",
  "fnName": "IClosableConnection",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "isInterface": true,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 33,
      "index": 214,
      "line": 13,
    },
    "start": Position {
      "column": 0,
      "index": 133,
      "line": 9,
    },
  },
  "name": "IClosableConnection",
  "params": Array [],
  "path": Array [
    Object {
      "name": "IClosableConnection",
    },
  ],
  "raw": "/**
 * @interface
 * @extends {IConnection}
 */",
  "start": 133,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/augmentstag6.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Close the connection.",
  "end": 297,
  "filename": "jsdoc/augmentstag6.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 52,
      "index": 297,
      "line": 16,
    },
    "start": Position {
      "column": 0,
      "index": 216,
      "line": 15,
    },
  },
  "member": "close",
  "memberOf": "IClosableConnection.prototype",
  "name": "close",
  "params": Array [],
  "path": Array [
    Object {
      "name": "IClosableConnection",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "close",
    },
  ],
  "raw": "/** Close the connection. */",
  "scope": "instance",
  "start": 216,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/authortag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "author": "Michael",
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 89,
  "filename": "jsdoc/authortag.js",
  "fnName": "Thingy",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 89,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Thingy",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Thingy",
    },
  ],
  "raw": "/** @constructor
    @author Michael Mathews <micmath@gmail.com>
*/",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/authortag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "author": "Jane",
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 199,
  "filename": "jsdoc/authortag.js",
  "fnName": "Thingy2",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 199,
      "line": 10,
    },
    "start": Position {
      "column": 0,
      "index": 91,
      "line": 7,
    },
  },
  "name": "Thingy2",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Thingy2",
    },
  ],
  "raw": "/** @author John Doe <john.doe@gmail.com>
 * @author Jane Doe <jane.doe@gmail.com> */",
  "start": 91,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/borrowstag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 78,
  "filename": "jsdoc/borrowstag.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 78,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "util",
  "mutable": true,
  "name": "util",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "util",
    },
  ],
  "properties": Array [
    Object {
      "member": "trstr",
      "memberOf": "util",
      "name": "trstr",
      "path": Array [
        Object {
          "name": "util",
        },
      ],
    },
  ],
  "raw": "/** @namespace
    @borrows trstr as trim
*/",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/borrowstag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Remove whitespace from around a string.",
  "end": 179,
  "filename": "jsdoc/borrowstag.js",
  "fnName": "trstr",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 179,
      "line": 13,
    },
    "start": Position {
      "column": 0,
      "index": 80,
      "line": 8,
    },
  },
  "name": "trstr",
  "params": Array [
    Object {
      "description": "",
      "name": "str",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "trstr",
    },
  ],
  "raw": "/**
    Remove whitespace from around a string.
    @param {string} str
 */",
  "start": 80,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/borrowstag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 73,
  "filename": "jsdoc/borrowstag2.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 73,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "str",
  "mutable": true,
  "name": "str",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "str",
    },
  ],
  "properties": Array [
    Object {
      "member": "rtrim",
      "memberOf": "str",
      "name": "rtrim",
      "path": Array [
        Object {
          "name": "str",
        },
        Object {
          "name": "str",
        },
      ],
    },
  ],
  "raw": "/** @namespace
    @borrows rtrim
*/",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/borrowstag2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 144,
  "filename": "jsdoc/borrowstag2.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 144,
      "line": 13,
    },
    "start": Position {
      "column": 0,
      "index": 75,
      "line": 8,
    },
  },
  "member": "util",
  "mutable": true,
  "name": "util",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "util",
    },
  ],
  "properties": Array [
    Object {
      "member": "rtrim",
      "memberOf": "util",
      "name": "rtrim",
      "path": Array [
        Object {
          "name": "util",
        },
      ],
    },
  ],
  "raw": "/** @namespace
    @borrows rtrim
*/",
  "start": 75,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/borrowstag2.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Remove whitespace from the right side of a string.",
  "end": 256,
  "filename": "jsdoc/borrowstag2.js",
  "fnName": "rtrim",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 256,
      "line": 20,
    },
    "start": Position {
      "column": 0,
      "index": 146,
      "line": 15,
    },
  },
  "name": "rtrim",
  "params": Array [
    Object {
      "description": "",
      "name": "str",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "rtrim",
    },
  ],
  "raw": "/**
    Remove whitespace from the right side of a string.
    @param {string} str
 */",
  "start": 146,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/borrowstag3.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Remove whitespace from around a string.",
  "end": 111,
  "filename": "jsdoc/borrowstag3.js",
  "fnName": "trstr",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 22,
      "index": 111,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 15,
      "line": 3,
    },
  },
  "name": "trstr",
  "params": Array [
    Object {
      "name": "str",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "trstr",
    },
  ],
  "raw": "/**
 * Remove whitespace from around a string.
 * @param {string} str
 */",
  "start": 15,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/borrowstag3.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Hidden utility function.",
  "end": 195,
  "filename": "jsdoc/borrowstag3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 32,
      "index": 195,
      "line": 11,
    },
    "start": Position {
      "column": 4,
      "index": 131,
      "line": 10,
    },
  },
  "member": "'hidden util'",
  "memberOf": "_util",
  "mutable": true,
  "name": "'hidden util'",
  "params": Array [],
  "path": Array [
    Object {
      "name": "_util",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Hidden utility function.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "'hidden util': function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "'hidden util'",
        "memberOf": undefined,
        "name": "'hidden util'",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Hidden utility function.",
      "end": 195,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 32,
          "index": 195,
          "line": 11,
        },
        "start": Position {
          "column": 4,
          "index": 131,
          "line": 10,
        },
      },
      "member": "'hidden util'",
      "memberOf": undefined,
      "name": "'hidden util'",
      "params": Array [],
      "path": Array [],
      "raw": "/** Hidden utility function. */",
      "start": 131,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Hidden utility function. */",
  "start": 131,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/borrowstag3.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 368,
  "filename": "jsdoc/borrowstag3.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 368,
      "line": 22,
    },
    "start": Position {
      "column": 0,
      "index": 200,
      "line": 14,
    },
  },
  "member": "util",
  "mutable": true,
  "name": "util",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "util",
    },
  ],
  "properties": Array [
    Object {
      "member": "hidden",
      "memberOf": "util",
      "name": "hidden",
      "path": Array [
        Object {
          "name": "util",
        },
        Object {
          "name": "util",
        },
      ],
    },
    Object {
      "member": "trstr",
      "memberOf": "util",
      "name": "trstr",
      "path": Array [
        Object {
          "name": "util",
        },
      ],
    },
  ],
  "raw": "/**
 * @namespace
 * @borrows trstr as trim string
 * @borrows util.hidden util as hidden
 */",
  "start": 200,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/callbacktag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 82,
  "filename": "jsdoc/callbacktag.js",
  "fnName": "makeSpecialRequest",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 82,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "makeSpecialRequest",
  "params": Array [
    Object {
      "name": "cb",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "requestResponseCallback",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "requestResponseCallback",
          },
        ],
        "string": "requestResponseCallback",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "makeSpecialRequest",
    },
  ],
  "raw": "/**
 * @param {requestResponseCallback} cb
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/callbacktag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 165,
  "filename": "jsdoc/callbacktag.js",
  "fnName": "makeExtraSpecialRequest",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 165,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 84,
      "line": 7,
    },
  },
  "name": "makeExtraSpecialRequest",
  "params": Array [
    Object {
      "name": "cb",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "wrongTypeCallback",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "wrongTypeCallback",
          },
        ],
        "string": "wrongTypeCallback",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "makeExtraSpecialRequest",
    },
  ],
  "raw": "/**
 * @param {wrongTypeCallback} cb
 */",
  "start": 84,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/callbacktag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 275,
  "filename": "jsdoc/callbacktag.js",
  "ignore": false,
  "isCallback": true,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 275,
      "line": 17,
    },
    "start": Position {
      "column": 0,
      "index": 167,
      "line": 13,
    },
  },
  "name": "requestResponseCallback",
  "params": Array [
    Object {
      "name": "responseCode",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
    Object {
      "name": "responseText",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "raw": "/**
 * @callback requestResponseCallback
 * @param {number} responseCode
 * @param {string} responseText
 */",
  "start": 167,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/callbacktag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 333,
  "filename": "jsdoc/callbacktag.js",
  "ignore": false,
  "isCallback": true,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 333,
      "line": 21,
    },
    "start": Position {
      "column": 0,
      "index": 277,
      "line": 19,
    },
  },
  "name": "wrongTypeCallback",
  "raw": "/**
 * @callback {(object|string)} wrongTypeCallback
 */",
  "start": 277,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/classdesctag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "classDescription": "description of the class.",
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Asdf.",
  "end": 101,
  "filename": "jsdoc/classdesctag.js",
  "fnName": "Foo",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 101,
      "line": 8,
    },
    "start": Position {
      "column": 0,
      "index": 15,
      "line": 3,
    },
  },
  "name": "Foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "raw": "/**
 * Asdf.
 * @class
 * @classdesc A description of the class.
 */",
  "start": 15,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/classdesctag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "classDescription": "description of the class.",
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 182,
  "filename": "jsdoc/classdesctag.js",
  "ignore": false,
  "isConstructor": true,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 182,
      "line": 14,
    },
    "start": Position {
      "column": 0,
      "index": 103,
      "line": 10,
    },
  },
  "name": "Bar",
  "path": Array [],
  "raw": "/**
 * @classdesc A description of the class.
 * @class Bar
 * @constructor
 */",
  "start": 103,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/classdesctag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Description of the Baz class.",
  "end": 270,
  "filename": "jsdoc/classdesctag.js",
  "fnName": "Baz",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 270,
      "line": 21,
    },
    "start": Position {
      "column": 0,
      "index": 184,
      "line": 16,
    },
  },
  "name": "Baz",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Baz",
    },
  ],
  "raw": "/**
 * The Baz class.
 * @class
 * Description of the Baz class.
 */",
  "start": 184,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/classproperties.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Sample class.",
  "end": 171,
  "filename": "jsdoc/classproperties.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 171,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "A",
  "path": Array [
    Object {
      "name": "A",
    },
  ],
  "properties": Array [
    Object {
      "description": "Public property.",
      "filename": "jsdoc/classproperties.js",
      "ignore": false,
      "kind": "class",
      "name": "A",
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "A",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "A",
          },
        ],
        "string": "A",
      },
    },
    Object {
      "description": "Private property.",
      "filename": "jsdoc/classproperties.js",
      "ignore": false,
      "kind": "class",
      "name": "A",
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "A",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "A",
          },
        ],
        "string": "A",
      },
    },
    Object {
      "description": "Property with no value assigned to it.",
      "filename": "jsdoc/classproperties.js",
      "ignore": false,
      "kind": "class",
      "name": "A",
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "A",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "A",
          },
        ],
        "string": "A",
      },
    },
  ],
  "raw": "/** Sample class. */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "A",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "A",
      },
    ],
    "string": "A",
  },
}
`;

exports[`./jsdoc/classproperties.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Public property.",
  "end": 69,
  "filename": "jsdoc/classproperties.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 10,
      "index": 69,
      "line": 4,
    },
    "start": Position {
      "column": 4,
      "index": 35,
      "line": 3,
    },
  },
  "name": "A",
  "path": Array [
    Object {
      "name": "A",
    },
  ],
  "raw": "/** Public property. */",
  "start": 35,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "A",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "A",
      },
    ],
    "string": "A",
  },
}
`;

exports[`./jsdoc/classproperties.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Private property.",
  "end": 111,
  "filename": "jsdoc/classproperties.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 11,
      "index": 111,
      "line": 7,
    },
    "start": Position {
      "column": 4,
      "index": 75,
      "line": 6,
    },
  },
  "name": "A",
  "path": Array [
    Object {
      "name": "A",
    },
  ],
  "raw": "/** Private property. */",
  "start": 75,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "A",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "A",
      },
    ],
    "string": "A",
  },
}
`;

exports[`./jsdoc/classproperties.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Property with no value assigned to it.",
  "end": 169,
  "filename": "jsdoc/classproperties.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 169,
      "line": 10,
    },
    "start": Position {
      "column": 4,
      "index": 117,
      "line": 9,
    },
  },
  "name": "A",
  "path": Array [
    Object {
      "name": "A",
    },
  ],
  "raw": "/** Property with no value assigned to it. */",
  "start": 117,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "A",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "A",
      },
    ],
    "string": "A",
  },
}
`;

exports[`./jsdoc/classtag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 84,
  "filename": "jsdoc/classtag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 84,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "Ticker",
  "mutable": true,
  "name": "Ticker",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Ticker",
    },
  ],
  "raw": "/**
    Describe the Ticker class here.
    @class
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/classtag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 155,
  "filename": "jsdoc/classtag.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 155,
      "line": 12,
    },
    "start": Position {
      "column": 0,
      "index": 86,
      "line": 9,
    },
  },
  "name": "NewsSource",
  "raw": "/**
    Describe the NewsSource class here.
    @class NewsSource
 */",
  "start": 86,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/classtag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Describe the Subscription class here.",
  "end": 341,
  "filename": "jsdoc/classtag2.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 341,
      "line": 16,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Subscription",
  "path": Array [
    Object {
      "name": "Subscription",
    },
  ],
  "properties": Array [
    Object {
      "description": "Describe the constructor here.",
      "examples": Array [
        "
var subscription = new Subscription();",
      ],
      "filename": "jsdoc/classtag2.js",
      "ignore": false,
      "isAsync": false,
      "isConstructor": true,
      "isGenerator": false,
      "kind": "constructor",
      "member": "constructor",
      "memberOf": "Subscription.prototype",
      "name": "constructor",
      "params": Array [
        Object {
          "description": "- The name of the subscription.",
          "name": "name",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "scope": "instance",
      "tags": Array [
        Object {
          "description": "- The name of the subscription.",
          "name": "name",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "     * @param {string} name - The name of the subscription.",
              "tokens": Object {
                "delimiter": "*",
                "description": "- The name of the subscription.",
                "end": "",
                "lineEnd": "",
                "name": "name",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@param",
                "type": "{string}",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
        Object {
          "description": "
var subscription = new Subscription();",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 4,
              "source": "     * @example",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "@example",
                "type": "",
              },
            },
            Object {
              "number": 5,
              "source": "     * var subscription = new Subscription();",
              "tokens": Object {
                "delimiter": "*",
                "description": "var subscription = new Subscription();",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
            Object {
              "number": 6,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "example",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Subscription",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Subscription",
          },
        ],
        "string": "Subscription",
      },
    },
    Object {
      "description": "Force the subscription to expire.",
      "filename": "jsdoc/classtag2.js",
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "member": "expire",
      "memberOf": "Subscription.prototype",
      "name": "expire",
      "params": Array [],
      "scope": "instance",
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Subscription",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Subscription",
          },
        ],
        "string": "Subscription",
      },
    },
  ],
  "raw": "/**
 * Describe the Subscription class here.
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Subscription",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Subscription",
      },
    ],
    "string": "Subscription",
  },
}
`;

exports[`./jsdoc/classtag2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Describe the constructor here.",
  "end": 277,
  "examples": Array [
    "
var subscription = new Subscription();",
  ],
  "filename": "jsdoc/classtag2.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 24,
      "index": 277,
      "line": 12,
    },
    "start": Position {
      "column": 4,
      "index": 74,
      "line": 5,
    },
  },
  "member": "constructor",
  "memberOf": "Subscription.prototype",
  "name": "constructor",
  "params": Array [
    Object {
      "description": "- The name of the subscription.",
      "name": "name",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Subscription",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "constructor",
    },
  ],
  "raw": "/**
     * Describe the constructor here.
     *
     * @param {string} name - The name of the subscription.
     * @example
     * var subscription = new Subscription();
     */",
  "scope": "instance",
  "start": 74,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Subscription",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Subscription",
      },
    ],
    "string": "Subscription",
  },
}
`;

exports[`./jsdoc/classtag2.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Force the subscription to expire.",
  "end": 339,
  "filename": "jsdoc/classtag2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 15,
      "index": 339,
      "line": 15,
    },
    "start": Position {
      "column": 4,
      "index": 283,
      "line": 14,
    },
  },
  "member": "expire",
  "memberOf": "Subscription.prototype",
  "name": "expire",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Subscription",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "expire",
    },
  ],
  "raw": "/** Force the subscription to expire. */",
  "scope": "instance",
  "start": 283,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Subscription",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Subscription",
      },
    ],
    "string": "Subscription",
  },
}
`;

exports[`./jsdoc/classtag2.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Describe the Subscriber class here.",
  "end": 644,
  "filename": "jsdoc/classtag2.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 644,
      "line": 31,
    },
    "start": Position {
      "column": 0,
      "index": 343,
      "line": 18,
    },
  },
  "member": "Subscriber",
  "name": "Foo",
  "path": Array [
    Object {
      "name": "Subscriber",
    },
  ],
  "properties": Array [
    Object {
      "description": "Describe the constructor here.",
      "filename": "jsdoc/classtag2.js",
      "ignore": false,
      "isAsync": false,
      "isConstructor": true,
      "isGenerator": false,
      "kind": "constructor",
      "member": "constructor",
      "memberOf": "Foo.prototype",
      "name": "constructor",
      "params": Array [
        Object {
          "description": "- The name of the subscriber.",
          "name": "name",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "scope": "instance",
      "tags": Array [
        Object {
          "description": "- The name of the subscriber.",
          "name": "name",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "     * @param {string} name - The name of the subscriber.",
              "tokens": Object {
                "delimiter": "*",
                "description": "- The name of the subscriber.",
                "end": "",
                "lineEnd": "",
                "name": "name",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 4,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Foo",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Foo",
          },
        ],
        "string": "Foo",
      },
    },
    Object {
      "description": "Check whether the subscriber has a callback.",
      "filename": "jsdoc/classtag2.js",
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "member": "hasCallback",
      "memberOf": "Foo.prototype",
      "name": "hasCallback",
      "params": Array [],
      "scope": "instance",
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Foo",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Foo",
          },
        ],
        "string": "Foo",
      },
    },
  ],
  "raw": "/**
 * Describe the Subscriber class here.
 */",
  "start": 343,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Foo",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Foo",
      },
    ],
    "string": "Foo",
  },
}
`;

exports[`./jsdoc/classtag2.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Describe the constructor here.",
  "end": 564,
  "filename": "jsdoc/classtag2.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 24,
      "index": 564,
      "line": 27,
    },
    "start": Position {
      "column": 4,
      "index": 425,
      "line": 22,
    },
  },
  "member": "constructor",
  "memberOf": "Foo.prototype",
  "name": "constructor",
  "params": Array [
    Object {
      "description": "- The name of the subscriber.",
      "name": "name",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Foo",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "constructor",
    },
  ],
  "raw": "/**
     * Describe the constructor here.
     *
     * @param {string} name - The name of the subscriber.
     */",
  "scope": "instance",
  "start": 425,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Foo",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Foo",
      },
    ],
    "string": "Foo",
  },
}
`;

exports[`./jsdoc/classtag2.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Check whether the subscriber has a callback.",
  "end": 642,
  "filename": "jsdoc/classtag2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 642,
      "line": 30,
    },
    "start": Position {
      "column": 4,
      "index": 570,
      "line": 29,
    },
  },
  "member": "hasCallback",
  "memberOf": "Foo.prototype",
  "name": "hasCallback",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "hasCallback",
    },
  ],
  "raw": "/** Check whether the subscriber has a callback. */",
  "scope": "instance",
  "start": 570,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Foo",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Foo",
      },
    ],
    "string": "Foo",
  },
}
`;

exports[`./jsdoc/classtag2.js snapshots: Item 7 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Subclass namespace.",
  "end": 711,
  "filename": "jsdoc/classtag2.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 711,
      "line": 37,
    },
    "start": Position {
      "column": 0,
      "index": 646,
      "line": 33,
    },
  },
  "member": "subclasses",
  "mutable": true,
  "name": "subclasses",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "subclasses",
    },
  ],
  "properties": Array [],
  "raw": "/**
 * Subclass namespace.
 * @namespace
 */",
  "start": 646,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/classtag2.js snapshots: Item 8 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Expiring subscription subclass.",
  "end": 976,
  "filename": "jsdoc/classtag2.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 976,
      "line": 50,
    },
    "start": Position {
      "column": 0,
      "index": 713,
      "line": 39,
    },
  },
  "member": "ExpiringSubscription",
  "memberOf": "subclasses",
  "name": "ExpiringSubscription",
  "path": Array [
    Object {
      "name": "subclasses",
    },
    Object {
      "name": "ExpiringSubscription",
    },
  ],
  "properties": Array [
    Object {
      "description": "Describe the constructor here.",
      "filename": "jsdoc/classtag2.js",
      "ignore": false,
      "isAsync": false,
      "isConstructor": true,
      "isGenerator": false,
      "kind": "constructor",
      "member": "constructor",
      "memberOf": "ExpiringSubscription.prototype",
      "name": "constructor",
      "params": Array [
        Object {
          "description": "- The name of the subscription.",
          "name": "name",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "scope": "instance",
      "tags": Array [
        Object {
          "description": "- The name of the subscription.",
          "name": "name",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "     * @param {string} name - The name of the subscription.",
              "tokens": Object {
                "delimiter": "*",
                "description": "- The name of the subscription.",
                "end": "",
                "lineEnd": "",
                "name": "name",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 4,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "ExpiringSubscription",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "ExpiringSubscription",
          },
        ],
        "string": "ExpiringSubscription",
      },
    },
  ],
  "raw": "/**
 * Expiring subscription subclass.
 * @class
 */",
  "start": 713,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "ExpiringSubscription",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "ExpiringSubscription",
      },
    ],
    "string": "ExpiringSubscription",
  },
}
`;

exports[`./jsdoc/classtag2.js snapshots: Item 9 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Describe the constructor here.",
  "end": 974,
  "filename": "jsdoc/classtag2.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 24,
      "index": 974,
      "line": 49,
    },
    "start": Position {
      "column": 4,
      "index": 833,
      "line": 44,
    },
  },
  "member": "constructor",
  "memberOf": "ExpiringSubscription.prototype",
  "name": "constructor",
  "params": Array [
    Object {
      "description": "- The name of the subscription.",
      "name": "name",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "ExpiringSubscription",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "constructor",
    },
  ],
  "raw": "/**
     * Describe the constructor here.
     *
     * @param {string} name - The name of the subscription.
     */",
  "scope": "instance",
  "start": 833,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "ExpiringSubscription",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "ExpiringSubscription",
      },
    ],
    "string": "ExpiringSubscription",
  },
}
`;

exports[`./jsdoc/classtag2.js snapshots: Item 10 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 1076,
  "filename": "jsdoc/classtag2.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 1076,
      "line": 56,
    },
    "start": Position {
      "column": 0,
      "index": 978,
      "line": 52,
    },
  },
  "name": "InvalidSubscription",
  "parent": "subclasses",
  "path": Array [
    Object {
      "name": "InvalidSubscription",
    },
  ],
  "properties": Array [
    Object {
      "description": "Instance method.",
      "filename": "jsdoc/classtag2.js",
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "member": "foo",
      "memberOf": "InvalidSubscription.prototype",
      "name": "foo",
      "params": Array [],
      "scope": "instance",
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "InvalidSubscription",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "InvalidSubscription",
          },
        ],
        "string": "InvalidSubscription",
      },
    },
  ],
  "raw": "/** @memberOf subclasses */",
  "start": 978,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "InvalidSubscription",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "InvalidSubscription",
      },
    ],
    "string": "InvalidSubscription",
  },
}
`;

exports[`./jsdoc/classtag2.js snapshots: Item 11 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Instance method.",
  "end": 1074,
  "filename": "jsdoc/classtag2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 12,
      "index": 1074,
      "line": 55,
    },
    "start": Position {
      "column": 4,
      "index": 1038,
      "line": 54,
    },
  },
  "member": "foo",
  "memberOf": "InvalidSubscription.prototype",
  "name": "foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "InvalidSubscription",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "foo",
    },
  ],
  "raw": "/** Instance method. */",
  "scope": "instance",
  "start": 1038,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "InvalidSubscription",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "InvalidSubscription",
      },
    ],
    "string": "InvalidSubscription",
  },
}
`;

exports[`./jsdoc/classwithoutname.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Create an instance of MyClass.",
  "end": 196,
  "filename": "jsdoc/classwithoutname.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 29,
      "index": 196,
      "line": 8,
    },
    "start": Position {
      "column": 4,
      "index": 98,
      "line": 4,
    },
  },
  "member": "initialize",
  "memberOf": "MyClass",
  "mutable": true,
  "name": "initialize",
  "params": Array [],
  "path": Array [
    Object {
      "name": "MyClass",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Create an instance of MyClass.",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "     * @constructs",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "@constructs",
                  "type": "",
                },
              },
              Object {
                "number": 3,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
        ],
      },
      "code": "initialize: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Create an instance of MyClass.",
      "end": 196,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 29,
          "index": 196,
          "line": 8,
        },
        "start": Position {
          "column": 4,
          "index": 98,
          "line": 4,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [],
      "path": Array [],
      "raw": "/**
     * Create an instance of MyClass.
     * @constructs
     */",
      "start": 98,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "     * @constructs",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "@constructs",
                "type": "",
              },
            },
            Object {
              "number": 3,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/**
     * Create an instance of MyClass.
     * @constructs
     */",
  "start": 98,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/constanttag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 29,
  "filename": "jsdoc/constanttag.js",
  "ignore": false,
  "isConstant": true,
  "isReadOnly": true,
  "loc": Object {
    "end": Position {
      "column": 12,
      "index": 29,
      "line": 2,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "FOO",
  "mutable": true,
  "name": "FOO",
  "path": Array [
    Object {
      "name": "FOO",
    },
  ],
  "raw": "/** @constant */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 1,
}
`;

exports[`./jsdoc/constanttag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 48,
  "filename": "jsdoc/constanttag.js",
  "ignore": false,
  "isConstant": true,
  "isReadOnly": true,
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 48,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 31,
      "line": 4,
    },
  },
  "path": Array [],
  "raw": "/** @const BAR */",
  "start": 31,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/constanttag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 76,
  "filename": "jsdoc/constanttag.js",
  "ignore": false,
  "isConstant": true,
  "isReadOnly": true,
  "loc": Object {
    "end": Position {
      "column": 26,
      "index": 76,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 50,
      "line": 6,
    },
  },
  "path": Array [],
  "raw": "/** @const {string} BAZ */",
  "start": 50,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
}
`;

exports[`./jsdoc/constanttag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 113,
  "filename": "jsdoc/constanttag.js",
  "ignore": false,
  "isConstant": true,
  "isReadOnly": true,
  "loc": Object {
    "end": Position {
      "column": 12,
      "index": 113,
      "line": 9,
    },
    "start": Position {
      "column": 0,
      "index": 78,
      "line": 8,
    },
  },
  "member": "QUX",
  "mutable": true,
  "name": "QUX",
  "path": Array [
    Object {
      "name": "QUX",
    },
  ],
  "raw": "/** @const {number} */",
  "start": 78,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 0,
}
`;

exports[`./jsdoc/constanttag.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 158,
  "filename": "jsdoc/constanttag.js",
  "ignore": false,
  "isConstant": true,
  "isReadOnly": true,
  "loc": Object {
    "end": Position {
      "column": 13,
      "index": 158,
      "line": 12,
    },
    "start": Position {
      "column": 0,
      "index": 115,
      "line": 11,
    },
  },
  "member": "mySocket",
  "mutable": true,
  "name": "mySocket",
  "path": Array [
    Object {
      "name": "mySocket",
    },
  ],
  "raw": "/** @const {Object} SOCKET */",
  "start": 115,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/constanttag.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 194,
  "filename": "jsdoc/constanttag.js",
  "ignore": false,
  "isConstant": true,
  "isReadOnly": true,
  "loc": Object {
    "end": Position {
      "column": 13,
      "index": 194,
      "line": 15,
    },
    "start": Position {
      "column": 0,
      "index": 160,
      "line": 14,
    },
  },
  "member": "myRocket",
  "mutable": true,
  "name": "myRocket",
  "path": Array [
    Object {
      "name": "myRocket",
    },
  ],
  "raw": "/** @const ROCKET */",
  "start": 160,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/constanttag.js snapshots: Item 7 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "auto-detected const",
  "end": 242,
  "filename": "jsdoc/constanttag.js",
  "ignore": false,
  "isConstant": true,
  "isReadOnly": true,
  "kind": "constant",
  "loc": Object {
    "end": Position {
      "column": 19,
      "index": 242,
      "line": 18,
    },
    "start": Position {
      "column": 0,
      "index": 196,
      "line": 17,
    },
  },
  "member": "myPocket",
  "name": "myPocket",
  "path": Array [
    Object {
      "name": "myPocket",
    },
  ],
  "raw": "/** auto-detected const */",
  "start": 196,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 1,
}
`;

exports[`./jsdoc/constanttag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "ES 2015 class assigned to a const",
  "end": 69,
  "filename": "jsdoc/constanttag2.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 24,
      "index": 69,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "Foo",
  "name": "bar",
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "properties": Array [],
  "raw": "/**
 * ES 2015 class assigned to a const
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "bar",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "bar",
      },
    ],
    "string": "bar",
  },
}
`;

exports[`./jsdoc/constructortag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "your class here.",
  "end": 178,
  "filename": "jsdoc/constructortag.js",
  "fnName": "Feed",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 178,
      "line": 9,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Describe",
  "params": Array [
    Object {
      "description": "",
      "name": "url",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Feed",
    },
  ],
  "raw": "/**
    Describe your constructor function here.
    @class Describe your class here.
    @constructor
    @param {string} url
    @throws MalformedURL
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "throws": Object {
    "description": "    ",
    "type": Array [],
  },
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/constructortag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Document your method here.",
  "end": 257,
  "filename": "jsdoc/constructortag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 257,
      "line": 15,
    },
    "start": Position {
      "column": 0,
      "index": 180,
      "line": 11,
    },
  },
  "member": "refresh",
  "memberOf": "Feed.prototype",
  "name": "refresh",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Feed",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "refresh",
    },
  ],
  "raw": "/**
    Document your method here.
*/",
  "scope": "instance",
  "start": 180,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/constructstag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "classDescription": "        your class here",
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Document your constructor function here.",
  "end": 264,
  "filename": "jsdoc/constructstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 264,
      "line": 11,
    },
    "start": Position {
      "column": 4,
      "index": 29,
      "line": 3,
    },
  },
  "member": "construct",
  "memberOf": undefined,
  "name": "construct",
  "params": Array [
    Object {
      "description": "",
      "name": "opts",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "object",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "object",
          },
        ],
        "string": "object",
      },
    },
  ],
  "path": Array [],
  "properties": Array [
    Object {
      "classDescription": "        your class here",
      "cmt": Object {
        "classDescription": "        your class here",
        "description": "Document your constructor function here.",
        "ignore": false,
        "kind": "class",
        "params": Array [
          Object {
            "description": "",
            "name": "opts",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "name": "object",
                  "type": "NAME",
                },
              ],
              "simple": Array [
                Object {
                  "name": "object",
                },
              ],
              "string": "object",
            },
          },
        ],
        "tags": Array [
          Object {
            "description": "        ",
            "name": "TextBlock",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "        @constructs TextBlock",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "TextBlock",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "        ",
                  "tag": "@constructs",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
          Object {
            "description": "        your class here",
            "name": "Describe",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 3,
                "source": "        @classdesc Describe your class here",
                "tokens": Object {
                  "delimiter": "",
                  "description": "your class here",
                  "end": "",
                  "lineEnd": "",
                  "name": "Describe",
                  "postDelimiter": "",
                  "postName": " ",
                  "postTag": " ",
                  "postType": "",
                  "start": "        ",
                  "tag": "@classdesc",
                  "type": "",
                },
              },
            ],
            "tag": "classdesc",
            "type": "",
          },
          Object {
            "description": "        ",
            "name": "opts",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 4,
                "source": "        @param {object} opts",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "opts",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "        ",
                  "tag": "@param",
                  "type": "{object}",
                },
              },
            ],
            "tag": "param",
            "type": "object",
          },
          Object {
            "description": "        ",
            "name": "MissingNode",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 5,
                "source": "        @throws MissingNode",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "MissingNode",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "        ",
                  "tag": "@throws",
                  "type": "",
                },
              },
              Object {
                "number": 6,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "throws",
            "type": "",
          },
        ],
        "throws": Object {
          "description": "        ",
          "type": Array [],
        },
      },
      "code": "construct: function (node, opts) {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "construct",
        "memberOf": undefined,
        "name": "construct",
        "params": Array [
          Object {
            "member": "node",
            "name": "node",
          },
          Object {
            "member": "opts",
            "name": "opts",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Document your constructor function here.",
      "end": 264,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "class",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 264,
          "line": 11,
        },
        "start": Position {
          "column": 4,
          "index": 29,
          "line": 3,
        },
      },
      "member": "construct",
      "memberOf": undefined,
      "name": "construct",
      "params": Array [
        Object {
          "description": "",
          "name": "opts",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "object",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "object",
              },
            ],
            "string": "object",
          },
        },
      ],
      "path": Array [],
      "raw": "/**
        Document your constructor function here.
        @constructs TextBlock
        @classdesc Describe your class here
        @param {object} opts
        @throws MissingNode
     */",
      "start": 29,
      "tags": Array [
        Object {
          "description": "        ",
          "name": "TextBlock",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "        @constructs TextBlock",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "TextBlock",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
        Object {
          "description": "        your class here",
          "name": "Describe",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "        @classdesc Describe your class here",
              "tokens": Object {
                "delimiter": "",
                "description": "your class here",
                "end": "",
                "lineEnd": "",
                "name": "Describe",
                "postDelimiter": "",
                "postName": " ",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@classdesc",
                "type": "",
              },
            },
          ],
          "tag": "classdesc",
          "type": "",
        },
        Object {
          "description": "        ",
          "name": "opts",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 4,
              "source": "        @param {object} opts",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "opts",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "        ",
                "tag": "@param",
                "type": "{object}",
              },
            },
          ],
          "tag": "param",
          "type": "object",
        },
        Object {
          "description": "        ",
          "name": "MissingNode",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 5,
              "source": "        @throws MissingNode",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "MissingNode",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@throws",
                "type": "",
              },
            },
            Object {
              "number": 6,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "throws",
          "type": "",
        },
      ],
      "throws": Object {
        "description": "        ",
        "type": Array [],
      },
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Document your method here.",
        "ignore": false,
        "parent": "TextBlock#",
        "tags": Array [
          Object {
            "description": "        ",
            "name": "TextBlock#",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "        @memberOf TextBlock#",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "TextBlock#",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "        ",
                  "tag": "@memberOf",
                  "type": "",
                },
              },
              Object {
                "number": 3,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "memberOf",
            "type": "",
          },
        ],
      },
      "code": "align: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "align",
        "memberOf": undefined,
        "name": "align",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Document your method here.",
      "end": 376,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 376,
          "line": 18,
        },
        "start": Position {
          "column": 4,
          "index": 271,
          "line": 13,
        },
      },
      "member": "align",
      "memberOf": undefined,
      "name": "align",
      "params": Array [],
      "parent": "TextBlock#",
      "path": Array [],
      "raw": "/**
        Document your method here.
        @memberOf TextBlock#
     */",
      "start": 271,
      "tags": Array [
        Object {
          "description": "        ",
          "name": "TextBlock#",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "        @memberOf TextBlock#",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "TextBlock#",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@memberOf",
                "type": "",
              },
            },
            Object {
              "number": 3,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "memberOf",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/**
        Document your constructor function here.
        @constructs TextBlock
        @classdesc Describe your class here
        @param {object} opts
        @throws MissingNode
     */",
  "start": 29,
  "tags": ArrayContaining [],
  "throws": Object {
    "description": "        ",
    "type": Array [],
  },
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/constructstag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Document your method here.",
  "end": 376,
  "filename": "jsdoc/constructstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 376,
      "line": 18,
    },
    "start": Position {
      "column": 4,
      "index": 271,
      "line": 13,
    },
  },
  "member": "align",
  "memberOf": undefined,
  "name": "align",
  "params": Array [],
  "parent": "TextBlock#",
  "path": Array [],
  "properties": Array [
    Object {
      "classDescription": "        your class here",
      "cmt": Object {
        "classDescription": "        your class here",
        "description": "Document your constructor function here.",
        "ignore": false,
        "kind": "class",
        "params": Array [
          Object {
            "description": "",
            "name": "opts",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "name": "object",
                  "type": "NAME",
                },
              ],
              "simple": Array [
                Object {
                  "name": "object",
                },
              ],
              "string": "object",
            },
          },
        ],
        "tags": Array [
          Object {
            "description": "        ",
            "name": "TextBlock",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "        @constructs TextBlock",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "TextBlock",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "        ",
                  "tag": "@constructs",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
          Object {
            "description": "        your class here",
            "name": "Describe",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 3,
                "source": "        @classdesc Describe your class here",
                "tokens": Object {
                  "delimiter": "",
                  "description": "your class here",
                  "end": "",
                  "lineEnd": "",
                  "name": "Describe",
                  "postDelimiter": "",
                  "postName": " ",
                  "postTag": " ",
                  "postType": "",
                  "start": "        ",
                  "tag": "@classdesc",
                  "type": "",
                },
              },
            ],
            "tag": "classdesc",
            "type": "",
          },
          Object {
            "description": "        ",
            "name": "opts",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 4,
                "source": "        @param {object} opts",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "opts",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "        ",
                  "tag": "@param",
                  "type": "{object}",
                },
              },
            ],
            "tag": "param",
            "type": "object",
          },
          Object {
            "description": "        ",
            "name": "MissingNode",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 5,
                "source": "        @throws MissingNode",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "MissingNode",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "        ",
                  "tag": "@throws",
                  "type": "",
                },
              },
              Object {
                "number": 6,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "throws",
            "type": "",
          },
        ],
        "throws": Object {
          "description": "        ",
          "type": Array [],
        },
      },
      "code": "construct: function (node, opts) {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "construct",
        "memberOf": undefined,
        "name": "construct",
        "params": Array [
          Object {
            "member": "node",
            "name": "node",
          },
          Object {
            "member": "opts",
            "name": "opts",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Document your constructor function here.",
      "end": 264,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "class",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 264,
          "line": 11,
        },
        "start": Position {
          "column": 4,
          "index": 29,
          "line": 3,
        },
      },
      "member": "construct",
      "memberOf": undefined,
      "name": "construct",
      "params": Array [
        Object {
          "description": "",
          "name": "opts",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "object",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "object",
              },
            ],
            "string": "object",
          },
        },
      ],
      "path": Array [],
      "raw": "/**
        Document your constructor function here.
        @constructs TextBlock
        @classdesc Describe your class here
        @param {object} opts
        @throws MissingNode
     */",
      "start": 29,
      "tags": Array [
        Object {
          "description": "        ",
          "name": "TextBlock",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "        @constructs TextBlock",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "TextBlock",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
        Object {
          "description": "        your class here",
          "name": "Describe",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "        @classdesc Describe your class here",
              "tokens": Object {
                "delimiter": "",
                "description": "your class here",
                "end": "",
                "lineEnd": "",
                "name": "Describe",
                "postDelimiter": "",
                "postName": " ",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@classdesc",
                "type": "",
              },
            },
          ],
          "tag": "classdesc",
          "type": "",
        },
        Object {
          "description": "        ",
          "name": "opts",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 4,
              "source": "        @param {object} opts",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "opts",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "        ",
                "tag": "@param",
                "type": "{object}",
              },
            },
          ],
          "tag": "param",
          "type": "object",
        },
        Object {
          "description": "        ",
          "name": "MissingNode",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 5,
              "source": "        @throws MissingNode",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "MissingNode",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@throws",
                "type": "",
              },
            },
            Object {
              "number": 6,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "throws",
          "type": "",
        },
      ],
      "throws": Object {
        "description": "        ",
        "type": Array [],
      },
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Document your method here.",
        "ignore": false,
        "parent": "TextBlock#",
        "tags": Array [
          Object {
            "description": "        ",
            "name": "TextBlock#",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "        @memberOf TextBlock#",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "TextBlock#",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "        ",
                  "tag": "@memberOf",
                  "type": "",
                },
              },
              Object {
                "number": 3,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "memberOf",
            "type": "",
          },
        ],
      },
      "code": "align: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "align",
        "memberOf": undefined,
        "name": "align",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Document your method here.",
      "end": 376,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 376,
          "line": 18,
        },
        "start": Position {
          "column": 4,
          "index": 271,
          "line": 13,
        },
      },
      "member": "align",
      "memberOf": undefined,
      "name": "align",
      "params": Array [],
      "parent": "TextBlock#",
      "path": Array [],
      "raw": "/**
        Document your method here.
        @memberOf TextBlock#
     */",
      "start": 271,
      "tags": Array [
        Object {
          "description": "        ",
          "name": "TextBlock#",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "        @memberOf TextBlock#",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "TextBlock#",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@memberOf",
                "type": "",
              },
            },
            Object {
              "number": 3,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "memberOf",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/**
        Document your method here.
        @memberOf TextBlock#
     */",
  "start": 271,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/constructstag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 108,
  "filename": "jsdoc/constructstag2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 108,
      "line": 8,
    },
    "start": Position {
      "column": 4,
      "index": 21,
      "line": 2,
    },
  },
  "params": Array [
    Object {
      "description": "",
      "name": "items",
      "optional": false,
      "type": Array [],
    },
  ],
  "path": Array [],
  "raw": "/**
        @constructs Menu
        @param items
     */",
  "start": 21,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/constructstag2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 203,
  "filename": "jsdoc/constructstag2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 203,
      "line": 14,
    },
    "start": Position {
      "column": 8,
      "index": 124,
      "line": 10,
    },
  },
  "member": "show",
  "memberOf": undefined,
  "name": "show",
  "params": Array [],
  "parent": "Menu#",
  "path": Array [],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "parent": "Menu#",
        "tags": Array [
          Object {
            "description": "            ",
            "name": "Menu#",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "            @memberOf Menu#",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "Menu#",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "            ",
                  "tag": "@memberOf",
                  "type": "",
                },
              },
              Object {
                "number": 2,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "memberOf",
            "type": "",
          },
        ],
      },
      "code": "show: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "show",
        "memberOf": undefined,
        "name": "show",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 203,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 203,
          "line": 14,
        },
        "start": Position {
          "column": 8,
          "index": 124,
          "line": 10,
        },
      },
      "member": "show",
      "memberOf": undefined,
      "name": "show",
      "params": Array [],
      "parent": "Menu#",
      "path": Array [],
      "raw": "/**
            @memberOf Menu#
         */",
      "start": 124,
      "tags": Array [
        Object {
          "description": "            ",
          "name": "Menu#",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "            @memberOf Menu#",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "Menu#",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "            ",
                "tag": "@memberOf",
                "type": "",
              },
            },
            Object {
              "number": 2,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "memberOf",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/**
            @memberOf Menu#
         */",
  "start": 124,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/constructstag3.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 447,
  "filename": "jsdoc/constructstag3.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 447,
      "line": 26,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "Person",
  "mutable": true,
  "name": "Person",
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "raw": "/**
    A class that represents a person.
    @class
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/constructstag3.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 262,
  "filename": "jsdoc/constructstag3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 262,
      "line": 15,
    },
    "start": Position {
      "column": 4,
      "index": 90,
      "line": 7,
    },
  },
  "member": "initialize",
  "memberOf": "Person",
  "mutable": true,
  "name": "initialize",
  "params": Array [
    Object {
      "description": "",
      "name": "name",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "params": Array [
          Object {
            "description": "",
            "name": "name",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "name": "string",
                  "type": "NAME",
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                },
              ],
              "string": "string",
            },
          },
        ],
        "tags": Array [
          Object {
            "description": "        ",
            "name": "Person",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "        @constructs Person",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "Person",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "        ",
                  "tag": "@constructs",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
          Object {
            "description": "        ",
            "name": "name",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "        @param {string} name",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "name",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "        ",
                  "tag": "@param",
                  "type": "{string}",
                },
              },
              Object {
                "number": 3,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "string",
          },
        ],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 262,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 262,
          "line": 15,
        },
        "start": Position {
          "column": 4,
          "index": 90,
          "line": 7,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "description": "",
          "name": "name",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "path": Array [],
      "raw": "/**
        @constructs Person
        @param {string} name
     */",
      "start": 90,
      "tags": Array [
        Object {
          "description": "        ",
          "name": "Person",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "        @constructs Person",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "Person",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
        Object {
          "description": "        ",
          "name": "name",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "        @param {string} name",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "name",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "        ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 3,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.name = name;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "name",
        "memberOf": "this",
        "name": "name",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The name of the person.",
      "end": 256,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 25,
          "index": 256,
          "line": 14,
        },
        "start": Position {
          "column": 8,
          "index": 200,
          "line": 13,
        },
      },
      "member": "name",
      "memberOf": "this",
      "name": "name",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "name",
        },
      ],
      "raw": "/** The name of the person. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 200,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "params": Array [
          Object {
            "description": "",
            "name": "message",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "name": "string",
                  "type": "NAME",
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                },
              ],
              "string": "string",
            },
          },
        ],
        "parent": "Person#",
        "tags": Array [
          Object {
            "description": "        ",
            "name": "Person#",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "        @memberOf Person#",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "Person#",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "        ",
                  "tag": "@memberOf",
                  "type": "",
                },
              },
            ],
            "tag": "memberOf",
            "type": "",
          },
          Object {
            "description": "        ",
            "name": "message",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "        @param {string} message",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "message",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "        ",
                  "tag": "@param",
                  "type": "{string}",
                },
              },
              Object {
                "number": 3,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "string",
          },
        ],
      },
      "code": "say: function (message) {
  this.message = message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 443,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 443,
          "line": 25,
        },
        "start": Position {
          "column": 4,
          "index": 269,
          "line": 17,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "description": "",
          "name": "message",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "parent": "Person#",
      "path": Array [],
      "raw": "/**
        @memberOf Person#
        @param {string} message
     */",
      "start": 269,
      "tags": Array [
        Object {
          "description": "        ",
          "name": "Person#",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "        @memberOf Person#",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "Person#",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@memberOf",
                "type": "",
              },
            },
          ],
          "tag": "memberOf",
          "type": "",
        },
        Object {
          "description": "        ",
          "name": "message",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "        @param {string} message",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "message",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "        ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 3,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The person's message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.message = message;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "message",
        "memberOf": "this",
        "name": "message",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The person's message.",
      "end": 437,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 31,
          "index": 437,
          "line": 24,
        },
        "start": Position {
          "column": 8,
          "index": 377,
          "line": 23,
        },
      },
      "member": "message",
      "memberOf": "this",
      "name": "message",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "message",
        },
      ],
      "raw": "/** The person's message. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 377,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/**
        @constructs Person
        @param {string} name
     */",
  "start": 90,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/constructstag3.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The name of the person.",
  "end": 256,
  "filename": "jsdoc/constructstag3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 25,
      "index": 256,
      "line": 14,
    },
    "start": Position {
      "column": 8,
      "index": 200,
      "line": 13,
    },
  },
  "member": "name",
  "memberOf": "this",
  "mutable": true,
  "name": "name",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "name",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "params": Array [
          Object {
            "description": "",
            "name": "name",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "name": "string",
                  "type": "NAME",
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                },
              ],
              "string": "string",
            },
          },
        ],
        "tags": Array [
          Object {
            "description": "        ",
            "name": "Person",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "        @constructs Person",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "Person",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "        ",
                  "tag": "@constructs",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
          Object {
            "description": "        ",
            "name": "name",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "        @param {string} name",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "name",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "        ",
                  "tag": "@param",
                  "type": "{string}",
                },
              },
              Object {
                "number": 3,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "string",
          },
        ],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 262,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 262,
          "line": 15,
        },
        "start": Position {
          "column": 4,
          "index": 90,
          "line": 7,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "description": "",
          "name": "name",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "path": Array [],
      "raw": "/**
        @constructs Person
        @param {string} name
     */",
      "start": 90,
      "tags": Array [
        Object {
          "description": "        ",
          "name": "Person",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "        @constructs Person",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "Person",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
        Object {
          "description": "        ",
          "name": "name",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "        @param {string} name",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "name",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "        ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 3,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.name = name;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "name",
        "memberOf": "this",
        "name": "name",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The name of the person.",
      "end": 256,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 25,
          "index": 256,
          "line": 14,
        },
        "start": Position {
          "column": 8,
          "index": 200,
          "line": 13,
        },
      },
      "member": "name",
      "memberOf": "this",
      "name": "name",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "name",
        },
      ],
      "raw": "/** The name of the person. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 200,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "params": Array [
          Object {
            "description": "",
            "name": "message",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "name": "string",
                  "type": "NAME",
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                },
              ],
              "string": "string",
            },
          },
        ],
        "parent": "Person#",
        "tags": Array [
          Object {
            "description": "        ",
            "name": "Person#",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "        @memberOf Person#",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "Person#",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "        ",
                  "tag": "@memberOf",
                  "type": "",
                },
              },
            ],
            "tag": "memberOf",
            "type": "",
          },
          Object {
            "description": "        ",
            "name": "message",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "        @param {string} message",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "message",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "        ",
                  "tag": "@param",
                  "type": "{string}",
                },
              },
              Object {
                "number": 3,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "string",
          },
        ],
      },
      "code": "say: function (message) {
  this.message = message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 443,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 443,
          "line": 25,
        },
        "start": Position {
          "column": 4,
          "index": 269,
          "line": 17,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "description": "",
          "name": "message",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "parent": "Person#",
      "path": Array [],
      "raw": "/**
        @memberOf Person#
        @param {string} message
     */",
      "start": 269,
      "tags": Array [
        Object {
          "description": "        ",
          "name": "Person#",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "        @memberOf Person#",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "Person#",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@memberOf",
                "type": "",
              },
            },
          ],
          "tag": "memberOf",
          "type": "",
        },
        Object {
          "description": "        ",
          "name": "message",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "        @param {string} message",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "message",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "        ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 3,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The person's message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.message = message;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "message",
        "memberOf": "this",
        "name": "message",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The person's message.",
      "end": 437,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 31,
          "index": 437,
          "line": 24,
        },
        "start": Position {
          "column": 8,
          "index": 377,
          "line": 23,
        },
      },
      "member": "message",
      "memberOf": "this",
      "name": "message",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "message",
        },
      ],
      "raw": "/** The person's message. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 377,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** The name of the person. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 200,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/constructstag3.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 443,
  "filename": "jsdoc/constructstag3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 443,
      "line": 25,
    },
    "start": Position {
      "column": 4,
      "index": 269,
      "line": 17,
    },
  },
  "member": "say",
  "memberOf": "Person",
  "mutable": true,
  "name": "say",
  "params": Array [
    Object {
      "description": "",
      "name": "message",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "parent": "Person#",
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "params": Array [
          Object {
            "description": "",
            "name": "name",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "name": "string",
                  "type": "NAME",
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                },
              ],
              "string": "string",
            },
          },
        ],
        "tags": Array [
          Object {
            "description": "        ",
            "name": "Person",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "        @constructs Person",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "Person",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "        ",
                  "tag": "@constructs",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
          Object {
            "description": "        ",
            "name": "name",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "        @param {string} name",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "name",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "        ",
                  "tag": "@param",
                  "type": "{string}",
                },
              },
              Object {
                "number": 3,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "string",
          },
        ],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 262,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 262,
          "line": 15,
        },
        "start": Position {
          "column": 4,
          "index": 90,
          "line": 7,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "description": "",
          "name": "name",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "path": Array [],
      "raw": "/**
        @constructs Person
        @param {string} name
     */",
      "start": 90,
      "tags": Array [
        Object {
          "description": "        ",
          "name": "Person",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "        @constructs Person",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "Person",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
        Object {
          "description": "        ",
          "name": "name",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "        @param {string} name",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "name",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "        ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 3,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.name = name;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "name",
        "memberOf": "this",
        "name": "name",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The name of the person.",
      "end": 256,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 25,
          "index": 256,
          "line": 14,
        },
        "start": Position {
          "column": 8,
          "index": 200,
          "line": 13,
        },
      },
      "member": "name",
      "memberOf": "this",
      "name": "name",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "name",
        },
      ],
      "raw": "/** The name of the person. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 200,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "params": Array [
          Object {
            "description": "",
            "name": "message",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "name": "string",
                  "type": "NAME",
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                },
              ],
              "string": "string",
            },
          },
        ],
        "parent": "Person#",
        "tags": Array [
          Object {
            "description": "        ",
            "name": "Person#",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "        @memberOf Person#",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "Person#",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "        ",
                  "tag": "@memberOf",
                  "type": "",
                },
              },
            ],
            "tag": "memberOf",
            "type": "",
          },
          Object {
            "description": "        ",
            "name": "message",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "        @param {string} message",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "message",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "        ",
                  "tag": "@param",
                  "type": "{string}",
                },
              },
              Object {
                "number": 3,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "string",
          },
        ],
      },
      "code": "say: function (message) {
  this.message = message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 443,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 443,
          "line": 25,
        },
        "start": Position {
          "column": 4,
          "index": 269,
          "line": 17,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "description": "",
          "name": "message",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "parent": "Person#",
      "path": Array [],
      "raw": "/**
        @memberOf Person#
        @param {string} message
     */",
      "start": 269,
      "tags": Array [
        Object {
          "description": "        ",
          "name": "Person#",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "        @memberOf Person#",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "Person#",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@memberOf",
                "type": "",
              },
            },
          ],
          "tag": "memberOf",
          "type": "",
        },
        Object {
          "description": "        ",
          "name": "message",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "        @param {string} message",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "message",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "        ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 3,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The person's message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.message = message;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "message",
        "memberOf": "this",
        "name": "message",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The person's message.",
      "end": 437,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 31,
          "index": 437,
          "line": 24,
        },
        "start": Position {
          "column": 8,
          "index": 377,
          "line": 23,
        },
      },
      "member": "message",
      "memberOf": "this",
      "name": "message",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "message",
        },
      ],
      "raw": "/** The person's message. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 377,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/**
        @memberOf Person#
        @param {string} message
     */",
  "start": 269,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/constructstag3.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The person's message.",
  "end": 437,
  "filename": "jsdoc/constructstag3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 31,
      "index": 437,
      "line": 24,
    },
    "start": Position {
      "column": 8,
      "index": 377,
      "line": 23,
    },
  },
  "member": "message",
  "memberOf": "this",
  "mutable": true,
  "name": "message",
  "params": Array [
    Object {
      "member": "message",
      "name": "message",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "message",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "params": Array [
          Object {
            "description": "",
            "name": "name",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "name": "string",
                  "type": "NAME",
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                },
              ],
              "string": "string",
            },
          },
        ],
        "tags": Array [
          Object {
            "description": "        ",
            "name": "Person",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "        @constructs Person",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "Person",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "        ",
                  "tag": "@constructs",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
          Object {
            "description": "        ",
            "name": "name",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "        @param {string} name",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "name",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "        ",
                  "tag": "@param",
                  "type": "{string}",
                },
              },
              Object {
                "number": 3,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "string",
          },
        ],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 262,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 262,
          "line": 15,
        },
        "start": Position {
          "column": 4,
          "index": 90,
          "line": 7,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "description": "",
          "name": "name",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "path": Array [],
      "raw": "/**
        @constructs Person
        @param {string} name
     */",
      "start": 90,
      "tags": Array [
        Object {
          "description": "        ",
          "name": "Person",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "        @constructs Person",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "Person",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
        Object {
          "description": "        ",
          "name": "name",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "        @param {string} name",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "name",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "        ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 3,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.name = name;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "name",
        "memberOf": "this",
        "name": "name",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The name of the person.",
      "end": 256,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 25,
          "index": 256,
          "line": 14,
        },
        "start": Position {
          "column": 8,
          "index": 200,
          "line": 13,
        },
      },
      "member": "name",
      "memberOf": "this",
      "name": "name",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "name",
        },
      ],
      "raw": "/** The name of the person. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 200,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "params": Array [
          Object {
            "description": "",
            "name": "message",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "name": "string",
                  "type": "NAME",
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                },
              ],
              "string": "string",
            },
          },
        ],
        "parent": "Person#",
        "tags": Array [
          Object {
            "description": "        ",
            "name": "Person#",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "        @memberOf Person#",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "Person#",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "        ",
                  "tag": "@memberOf",
                  "type": "",
                },
              },
            ],
            "tag": "memberOf",
            "type": "",
          },
          Object {
            "description": "        ",
            "name": "message",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "        @param {string} message",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "message",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "        ",
                  "tag": "@param",
                  "type": "{string}",
                },
              },
              Object {
                "number": 3,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "string",
          },
        ],
      },
      "code": "say: function (message) {
  this.message = message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 443,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 443,
          "line": 25,
        },
        "start": Position {
          "column": 4,
          "index": 269,
          "line": 17,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "description": "",
          "name": "message",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "parent": "Person#",
      "path": Array [],
      "raw": "/**
        @memberOf Person#
        @param {string} message
     */",
      "start": 269,
      "tags": Array [
        Object {
          "description": "        ",
          "name": "Person#",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "        @memberOf Person#",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "Person#",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@memberOf",
                "type": "",
              },
            },
          ],
          "tag": "memberOf",
          "type": "",
        },
        Object {
          "description": "        ",
          "name": "message",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "        @param {string} message",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "message",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "        ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 3,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The person's message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.message = message;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "message",
        "memberOf": "this",
        "name": "message",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The person's message.",
      "end": 437,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 31,
          "index": 437,
          "line": 24,
        },
        "start": Position {
          "column": 8,
          "index": 377,
          "line": 23,
        },
      },
      "member": "message",
      "memberOf": "this",
      "name": "message",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "message",
        },
      ],
      "raw": "/** The person's message. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 377,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** The person's message. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 377,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/constructstag4.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 463,
  "filename": "jsdoc/constructstag4.js",
  "ignore": false,
  "kind": "object",
  "lends": Array [],
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 463,
      "line": 23,
    },
    "start": Position {
      "column": 26,
      "index": 26,
      "line": 1,
    },
  },
  "member": "Person",
  "mutable": true,
  "name": "Person",
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "classDescription": "        class that represents a person.",
      "description": "Describe the constructor.",
      "ignore": false,
      "kind": "class",
      "params": Array [
        Object {
          "description": "",
          "name": "name",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "path": Array [
        Object {
          "name": "Person",
        },
      ],
      "tags": Array [
        Object {
          "description": "        class that represents a person.",
          "name": "A",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "        @classdesc A class that represents a person.",
              "tokens": Object {
                "delimiter": "",
                "description": "class that represents a person.",
                "end": "",
                "lineEnd": "",
                "name": "A",
                "postDelimiter": "",
                "postName": " ",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@classdesc",
                "type": "",
              },
            },
          ],
          "tag": "classdesc",
          "type": "",
        },
        Object {
          "description": "        ",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "        @constructs",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "        ",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
        Object {
          "description": "        ",
          "name": "name",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 4,
              "source": "        @param {string} name",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "name",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "        ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 5,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
    },
    Object {
      "description": "",
      "ignore": false,
      "params": Array [
        Object {
          "description": "",
          "name": "message",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "path": Array [
        Object {
          "name": "Person",
        },
      ],
      "tags": Array [
        Object {
          "description": "        ",
          "name": "message",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "        @param {string} message",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "message",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "        ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 2,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
    },
  ],
  "raw": "/** @lends Person# */",
  "start": 26,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/constructstag4.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "classDescription": "        class that represents a person.",
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Describe the constructor.",
  "end": 306,
  "filename": "jsdoc/constructstag4.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 306,
      "line": 13,
    },
    "start": Position {
      "column": 4,
      "index": 54,
      "line": 3,
    },
  },
  "member": "initialize",
  "memberOf": "Person",
  "mutable": true,
  "name": "initialize",
  "params": Array [
    Object {
      "description": "",
      "name": "name",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "classDescription": "        class that represents a person.",
      "cmt": Object {
        "classDescription": "        class that represents a person.",
        "description": "Describe the constructor.",
        "ignore": false,
        "kind": "class",
        "params": Array [
          Object {
            "description": "",
            "name": "name",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "name": "string",
                  "type": "NAME",
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                },
              ],
              "string": "string",
            },
          },
        ],
        "tags": Array [
          Object {
            "description": "        class that represents a person.",
            "name": "A",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "        @classdesc A class that represents a person.",
                "tokens": Object {
                  "delimiter": "",
                  "description": "class that represents a person.",
                  "end": "",
                  "lineEnd": "",
                  "name": "A",
                  "postDelimiter": "",
                  "postName": " ",
                  "postTag": " ",
                  "postType": "",
                  "start": "        ",
                  "tag": "@classdesc",
                  "type": "",
                },
              },
            ],
            "tag": "classdesc",
            "type": "",
          },
          Object {
            "description": "        ",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 3,
                "source": "        @constructs",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "        ",
                  "tag": "@constructs",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
          Object {
            "description": "        ",
            "name": "name",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 4,
                "source": "        @param {string} name",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "name",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "        ",
                  "tag": "@param",
                  "type": "{string}",
                },
              },
              Object {
                "number": 5,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "string",
          },
        ],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Describe the constructor.",
      "end": 306,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "class",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 306,
          "line": 13,
        },
        "start": Position {
          "column": 4,
          "index": 54,
          "line": 3,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "description": "",
          "name": "name",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "path": Array [],
      "raw": "/**
        Describe the constructor.
        @classdesc A class that represents a person.
        @constructs
        @param {string} name
     */",
      "start": 54,
      "tags": Array [
        Object {
          "description": "        class that represents a person.",
          "name": "A",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "        @classdesc A class that represents a person.",
              "tokens": Object {
                "delimiter": "",
                "description": "class that represents a person.",
                "end": "",
                "lineEnd": "",
                "name": "A",
                "postDelimiter": "",
                "postName": " ",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@classdesc",
                "type": "",
              },
            },
          ],
          "tag": "classdesc",
          "type": "",
        },
        Object {
          "description": "        ",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "        @constructs",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "        ",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
        Object {
          "description": "        ",
          "name": "name",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 4,
              "source": "        @param {string} name",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "name",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "        ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 5,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.name = name;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "name",
        "memberOf": "this",
        "name": "name",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The name of the person.",
      "end": 300,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 25,
          "index": 300,
          "line": 12,
        },
        "start": Position {
          "column": 8,
          "index": 244,
          "line": 11,
        },
      },
      "member": "name",
      "memberOf": "this",
      "name": "name",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "name",
        },
      ],
      "raw": "/** The name of the person. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 244,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "params": Array [
          Object {
            "description": "",
            "name": "message",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "name": "string",
                  "type": "NAME",
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                },
              ],
              "string": "string",
            },
          },
        ],
        "tags": Array [
          Object {
            "description": "        ",
            "name": "message",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "        @param {string} message",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "message",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "        ",
                  "tag": "@param",
                  "type": "{string}",
                },
              },
              Object {
                "number": 2,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "string",
          },
        ],
      },
      "code": "say: function (message) {
  this.message = message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 461,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 461,
          "line": 22,
        },
        "start": Position {
          "column": 4,
          "index": 313,
          "line": 15,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "description": "",
          "name": "message",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "path": Array [],
      "raw": "/**
        @param {string} message
     */",
      "start": 313,
      "tags": Array [
        Object {
          "description": "        ",
          "name": "message",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "        @param {string} message",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "message",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "        ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 2,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The person's message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.message = message;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "message",
        "memberOf": "this",
        "name": "message",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The person's message.",
      "end": 455,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 31,
          "index": 455,
          "line": 21,
        },
        "start": Position {
          "column": 8,
          "index": 395,
          "line": 20,
        },
      },
      "member": "message",
      "memberOf": "this",
      "name": "message",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "message",
        },
      ],
      "raw": "/** The person's message. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 395,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/**
        Describe the constructor.
        @classdesc A class that represents a person.
        @constructs
        @param {string} name
     */",
  "start": 54,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/constructstag4.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The name of the person.",
  "end": 300,
  "filename": "jsdoc/constructstag4.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 25,
      "index": 300,
      "line": 12,
    },
    "start": Position {
      "column": 8,
      "index": 244,
      "line": 11,
    },
  },
  "member": "name",
  "memberOf": "this",
  "mutable": true,
  "name": "name",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "name",
    },
  ],
  "properties": Array [
    Object {
      "classDescription": "        class that represents a person.",
      "cmt": Object {
        "classDescription": "        class that represents a person.",
        "description": "Describe the constructor.",
        "ignore": false,
        "kind": "class",
        "params": Array [
          Object {
            "description": "",
            "name": "name",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "name": "string",
                  "type": "NAME",
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                },
              ],
              "string": "string",
            },
          },
        ],
        "tags": Array [
          Object {
            "description": "        class that represents a person.",
            "name": "A",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "        @classdesc A class that represents a person.",
                "tokens": Object {
                  "delimiter": "",
                  "description": "class that represents a person.",
                  "end": "",
                  "lineEnd": "",
                  "name": "A",
                  "postDelimiter": "",
                  "postName": " ",
                  "postTag": " ",
                  "postType": "",
                  "start": "        ",
                  "tag": "@classdesc",
                  "type": "",
                },
              },
            ],
            "tag": "classdesc",
            "type": "",
          },
          Object {
            "description": "        ",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 3,
                "source": "        @constructs",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "        ",
                  "tag": "@constructs",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
          Object {
            "description": "        ",
            "name": "name",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 4,
                "source": "        @param {string} name",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "name",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "        ",
                  "tag": "@param",
                  "type": "{string}",
                },
              },
              Object {
                "number": 5,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "string",
          },
        ],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Describe the constructor.",
      "end": 306,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "class",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 306,
          "line": 13,
        },
        "start": Position {
          "column": 4,
          "index": 54,
          "line": 3,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "description": "",
          "name": "name",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "path": Array [],
      "raw": "/**
        Describe the constructor.
        @classdesc A class that represents a person.
        @constructs
        @param {string} name
     */",
      "start": 54,
      "tags": Array [
        Object {
          "description": "        class that represents a person.",
          "name": "A",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "        @classdesc A class that represents a person.",
              "tokens": Object {
                "delimiter": "",
                "description": "class that represents a person.",
                "end": "",
                "lineEnd": "",
                "name": "A",
                "postDelimiter": "",
                "postName": " ",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@classdesc",
                "type": "",
              },
            },
          ],
          "tag": "classdesc",
          "type": "",
        },
        Object {
          "description": "        ",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "        @constructs",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "        ",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
        Object {
          "description": "        ",
          "name": "name",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 4,
              "source": "        @param {string} name",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "name",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "        ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 5,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.name = name;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "name",
        "memberOf": "this",
        "name": "name",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The name of the person.",
      "end": 300,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 25,
          "index": 300,
          "line": 12,
        },
        "start": Position {
          "column": 8,
          "index": 244,
          "line": 11,
        },
      },
      "member": "name",
      "memberOf": "this",
      "name": "name",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "name",
        },
      ],
      "raw": "/** The name of the person. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 244,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "params": Array [
          Object {
            "description": "",
            "name": "message",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "name": "string",
                  "type": "NAME",
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                },
              ],
              "string": "string",
            },
          },
        ],
        "tags": Array [
          Object {
            "description": "        ",
            "name": "message",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "        @param {string} message",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "message",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "        ",
                  "tag": "@param",
                  "type": "{string}",
                },
              },
              Object {
                "number": 2,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "string",
          },
        ],
      },
      "code": "say: function (message) {
  this.message = message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 461,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 461,
          "line": 22,
        },
        "start": Position {
          "column": 4,
          "index": 313,
          "line": 15,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "description": "",
          "name": "message",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "path": Array [],
      "raw": "/**
        @param {string} message
     */",
      "start": 313,
      "tags": Array [
        Object {
          "description": "        ",
          "name": "message",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "        @param {string} message",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "message",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "        ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 2,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The person's message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.message = message;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "message",
        "memberOf": "this",
        "name": "message",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The person's message.",
      "end": 455,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 31,
          "index": 455,
          "line": 21,
        },
        "start": Position {
          "column": 8,
          "index": 395,
          "line": 20,
        },
      },
      "member": "message",
      "memberOf": "this",
      "name": "message",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "message",
        },
      ],
      "raw": "/** The person's message. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 395,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** The name of the person. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 244,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/constructstag4.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 461,
  "filename": "jsdoc/constructstag4.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 461,
      "line": 22,
    },
    "start": Position {
      "column": 4,
      "index": 313,
      "line": 15,
    },
  },
  "member": "say",
  "memberOf": "Person",
  "mutable": true,
  "name": "say",
  "params": Array [
    Object {
      "description": "",
      "name": "message",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "classDescription": "        class that represents a person.",
      "cmt": Object {
        "classDescription": "        class that represents a person.",
        "description": "Describe the constructor.",
        "ignore": false,
        "kind": "class",
        "params": Array [
          Object {
            "description": "",
            "name": "name",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "name": "string",
                  "type": "NAME",
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                },
              ],
              "string": "string",
            },
          },
        ],
        "tags": Array [
          Object {
            "description": "        class that represents a person.",
            "name": "A",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "        @classdesc A class that represents a person.",
                "tokens": Object {
                  "delimiter": "",
                  "description": "class that represents a person.",
                  "end": "",
                  "lineEnd": "",
                  "name": "A",
                  "postDelimiter": "",
                  "postName": " ",
                  "postTag": " ",
                  "postType": "",
                  "start": "        ",
                  "tag": "@classdesc",
                  "type": "",
                },
              },
            ],
            "tag": "classdesc",
            "type": "",
          },
          Object {
            "description": "        ",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 3,
                "source": "        @constructs",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "        ",
                  "tag": "@constructs",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
          Object {
            "description": "        ",
            "name": "name",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 4,
                "source": "        @param {string} name",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "name",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "        ",
                  "tag": "@param",
                  "type": "{string}",
                },
              },
              Object {
                "number": 5,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "string",
          },
        ],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Describe the constructor.",
      "end": 306,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "class",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 306,
          "line": 13,
        },
        "start": Position {
          "column": 4,
          "index": 54,
          "line": 3,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "description": "",
          "name": "name",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "path": Array [],
      "raw": "/**
        Describe the constructor.
        @classdesc A class that represents a person.
        @constructs
        @param {string} name
     */",
      "start": 54,
      "tags": Array [
        Object {
          "description": "        class that represents a person.",
          "name": "A",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "        @classdesc A class that represents a person.",
              "tokens": Object {
                "delimiter": "",
                "description": "class that represents a person.",
                "end": "",
                "lineEnd": "",
                "name": "A",
                "postDelimiter": "",
                "postName": " ",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@classdesc",
                "type": "",
              },
            },
          ],
          "tag": "classdesc",
          "type": "",
        },
        Object {
          "description": "        ",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "        @constructs",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "        ",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
        Object {
          "description": "        ",
          "name": "name",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 4,
              "source": "        @param {string} name",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "name",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "        ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 5,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.name = name;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "name",
        "memberOf": "this",
        "name": "name",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The name of the person.",
      "end": 300,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 25,
          "index": 300,
          "line": 12,
        },
        "start": Position {
          "column": 8,
          "index": 244,
          "line": 11,
        },
      },
      "member": "name",
      "memberOf": "this",
      "name": "name",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "name",
        },
      ],
      "raw": "/** The name of the person. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 244,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "params": Array [
          Object {
            "description": "",
            "name": "message",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "name": "string",
                  "type": "NAME",
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                },
              ],
              "string": "string",
            },
          },
        ],
        "tags": Array [
          Object {
            "description": "        ",
            "name": "message",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "        @param {string} message",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "message",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "        ",
                  "tag": "@param",
                  "type": "{string}",
                },
              },
              Object {
                "number": 2,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "string",
          },
        ],
      },
      "code": "say: function (message) {
  this.message = message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 461,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 461,
          "line": 22,
        },
        "start": Position {
          "column": 4,
          "index": 313,
          "line": 15,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "description": "",
          "name": "message",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "path": Array [],
      "raw": "/**
        @param {string} message
     */",
      "start": 313,
      "tags": Array [
        Object {
          "description": "        ",
          "name": "message",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "        @param {string} message",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "message",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "        ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 2,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The person's message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.message = message;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "message",
        "memberOf": "this",
        "name": "message",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The person's message.",
      "end": 455,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 31,
          "index": 455,
          "line": 21,
        },
        "start": Position {
          "column": 8,
          "index": 395,
          "line": 20,
        },
      },
      "member": "message",
      "memberOf": "this",
      "name": "message",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "message",
        },
      ],
      "raw": "/** The person's message. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 395,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/**
        @param {string} message
     */",
  "start": 313,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/constructstag4.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The person's message.",
  "end": 455,
  "filename": "jsdoc/constructstag4.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 31,
      "index": 455,
      "line": 21,
    },
    "start": Position {
      "column": 8,
      "index": 395,
      "line": 20,
    },
  },
  "member": "message",
  "memberOf": "this",
  "mutable": true,
  "name": "message",
  "params": Array [
    Object {
      "member": "message",
      "name": "message",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "message",
    },
  ],
  "properties": Array [
    Object {
      "classDescription": "        class that represents a person.",
      "cmt": Object {
        "classDescription": "        class that represents a person.",
        "description": "Describe the constructor.",
        "ignore": false,
        "kind": "class",
        "params": Array [
          Object {
            "description": "",
            "name": "name",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "name": "string",
                  "type": "NAME",
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                },
              ],
              "string": "string",
            },
          },
        ],
        "tags": Array [
          Object {
            "description": "        class that represents a person.",
            "name": "A",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "        @classdesc A class that represents a person.",
                "tokens": Object {
                  "delimiter": "",
                  "description": "class that represents a person.",
                  "end": "",
                  "lineEnd": "",
                  "name": "A",
                  "postDelimiter": "",
                  "postName": " ",
                  "postTag": " ",
                  "postType": "",
                  "start": "        ",
                  "tag": "@classdesc",
                  "type": "",
                },
              },
            ],
            "tag": "classdesc",
            "type": "",
          },
          Object {
            "description": "        ",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 3,
                "source": "        @constructs",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "        ",
                  "tag": "@constructs",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
          Object {
            "description": "        ",
            "name": "name",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 4,
                "source": "        @param {string} name",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "name",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "        ",
                  "tag": "@param",
                  "type": "{string}",
                },
              },
              Object {
                "number": 5,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "string",
          },
        ],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Describe the constructor.",
      "end": 306,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "class",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 306,
          "line": 13,
        },
        "start": Position {
          "column": 4,
          "index": 54,
          "line": 3,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "description": "",
          "name": "name",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "path": Array [],
      "raw": "/**
        Describe the constructor.
        @classdesc A class that represents a person.
        @constructs
        @param {string} name
     */",
      "start": 54,
      "tags": Array [
        Object {
          "description": "        class that represents a person.",
          "name": "A",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "        @classdesc A class that represents a person.",
              "tokens": Object {
                "delimiter": "",
                "description": "class that represents a person.",
                "end": "",
                "lineEnd": "",
                "name": "A",
                "postDelimiter": "",
                "postName": " ",
                "postTag": " ",
                "postType": "",
                "start": "        ",
                "tag": "@classdesc",
                "type": "",
              },
            },
          ],
          "tag": "classdesc",
          "type": "",
        },
        Object {
          "description": "        ",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "        @constructs",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "        ",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
        Object {
          "description": "        ",
          "name": "name",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 4,
              "source": "        @param {string} name",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "name",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "        ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 5,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.name = name;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "name",
        "memberOf": "this",
        "name": "name",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The name of the person.",
      "end": 300,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 25,
          "index": 300,
          "line": 12,
        },
        "start": Position {
          "column": 8,
          "index": 244,
          "line": 11,
        },
      },
      "member": "name",
      "memberOf": "this",
      "name": "name",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "name",
        },
      ],
      "raw": "/** The name of the person. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 244,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "params": Array [
          Object {
            "description": "",
            "name": "message",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "name": "string",
                  "type": "NAME",
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                },
              ],
              "string": "string",
            },
          },
        ],
        "tags": Array [
          Object {
            "description": "        ",
            "name": "message",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "        @param {string} message",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "message",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "        ",
                  "tag": "@param",
                  "type": "{string}",
                },
              },
              Object {
                "number": 2,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "string",
          },
        ],
      },
      "code": "say: function (message) {
  this.message = message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 461,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 461,
          "line": 22,
        },
        "start": Position {
          "column": 4,
          "index": 313,
          "line": 15,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "description": "",
          "name": "message",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "path": Array [],
      "raw": "/**
        @param {string} message
     */",
      "start": 313,
      "tags": Array [
        Object {
          "description": "        ",
          "name": "message",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "        @param {string} message",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "message",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "        ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 2,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The person's message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.message = message;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "message",
        "memberOf": "this",
        "name": "message",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The person's message.",
      "end": 455,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 31,
          "index": 455,
          "line": 21,
        },
        "start": Position {
          "column": 8,
          "index": 395,
          "line": 20,
        },
      },
      "member": "message",
      "memberOf": "this",
      "name": "message",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "message",
        },
      ],
      "raw": "/** The person's message. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 395,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** The person's message. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 395,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/constructstag5.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 55,
  "filename": "jsdoc/constructstag5.js",
  "ignore": false,
  "lends": Array [],
  "loc": Object {
    "end": Position {
      "column": 34,
      "index": 55,
      "line": 2,
    },
    "start": Position {
      "column": 15,
      "index": 36,
      "line": 2,
    },
  },
  "raw": "/** @lends Duck# */",
  "start": 36,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/constructstag5.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Constructs a duck.",
  "end": 175,
  "filename": "jsdoc/constructstag5.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 14,
      "index": 175,
      "line": 7,
    },
    "start": Position {
      "column": 12,
      "index": 70,
      "line": 3,
    },
  },
  "params": Array [
    Object {
      "description": "",
      "name": "tog",
      "optional": false,
      "type": Array [],
    },
  ],
  "raw": "/**
               Constructs a duck.
               @constructs
               @param tog
            */",
  "start": 70,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/constructstag5.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Say hello.",
  "end": 261,
  "filename": "jsdoc/constructstag5.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 29,
      "index": 261,
      "line": 10,
    },
    "start": Position {
      "column": 12,
      "index": 244,
      "line": 10,
    },
  },
  "raw": "/** Say hello. */",
  "start": 244,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/copyrighttag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 82,
  "filename": "jsdoc/copyrighttag.js",
  "fnName": "Thingy",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 82,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Thingy",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Thingy",
    },
  ],
  "raw": "/** @constructor
    @copyright (c) 2011 Michael Mathews
*/",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/defaultparams.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Set the user's first name.",
  "end": 266,
  "filename": "jsdoc/defaultparams.js",
  "fnName": "setFirstName",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 46,
      "index": 266,
      "line": 14,
    },
    "start": Position {
      "column": 0,
      "index": 125,
      "line": 9,
    },
  },
  "name": "setFirstName",
  "params": Array [
    Object {
      "description": "- The user's first name.",
      "name": "firstName",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "setFirstName",
    },
  ],
  "raw": "/**
 * Set the user's first name.
 *
 * @param {string} firstName - The user's first name.
 */",
  "start": 125,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/defaultparams.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Set the user's last name.",
  "end": 411,
  "filename": "jsdoc/defaultparams.js",
  "fnName": "setLastName",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 43,
      "index": 411,
      "line": 21,
    },
    "start": Position {
      "column": 0,
      "index": 268,
      "line": 16,
    },
  },
  "name": "setLastName",
  "params": Array [
    Object {
      "description": "- The user's last name.",
      "name": "lastName",
      "optional": true,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "setLastName",
    },
  ],
  "raw": "/**
 * Set the user's last name.
 *
 * @param {string} [lastName=Braun] - The user's last name.
 */",
  "start": 268,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/defaultparams.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Set the user's first, middle, and last names.",
  "end": 709,
  "filename": "jsdoc/defaultparams.js",
  "fnName": "setName",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 74,
      "index": 709,
      "line": 30,
    },
    "start": Position {
      "column": 0,
      "index": 413,
      "line": 23,
    },
  },
  "name": "setName",
  "params": Array [
    Object {
      "description": "- The user's first name.",
      "name": "firstName",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "description": "- The user's middle name.",
      "name": "middleName",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "description": "- The user's last name.",
      "name": "lastName",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "setName",
    },
  ],
  "raw": "/**
 * Set the user's first, middle, and last names.
 *
 * @param {string} firstName - The user's first name.
 * @param {string} middleName - The user's middle name.
 * @param {string} lastName - The user's last name.
 */",
  "start": 413,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/defaultparams.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Set the user's manager.",
  "end": 828,
  "filename": "jsdoc/defaultparams.js",
  "fnName": "setManager",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 36,
      "index": 828,
      "line": 37,
    },
    "start": Position {
      "column": 0,
      "index": 711,
      "line": 32,
    },
  },
  "name": "setManager",
  "params": Array [
    Object {
      "description": "- The manager.",
      "name": "manager",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Manager",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Manager",
          },
        ],
        "string": "Manager",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "setManager",
    },
  ],
  "raw": "/**
 * Set the user's manager.
 *
 * @param {Manager} manager - The manager.
 */",
  "start": 711,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/defaultparams.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Set whether the user is currently active.",
  "end": 1000,
  "filename": "jsdoc/defaultparams.js",
  "fnName": "setActive",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 38,
      "index": 1000,
      "line": 44,
    },
    "start": Position {
      "column": 0,
      "index": 830,
      "line": 39,
    },
  },
  "name": "setActive",
  "params": Array [
    Object {
      "description": "- Set to \`true\` if active; otherwise, \`false\`.",
      "name": "isActive",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "boolean",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "boolean",
          },
        ],
        "string": "boolean",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "setActive",
    },
  ],
  "raw": "/**
 * Set whether the user is currently active.
 *
 * @param {boolean} isActive - Set to \`true\` if active; otherwise, \`false\`.
 */",
  "start": 830,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/defaultparams.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Set the year in which the employee was born.",
  "end": 1148,
  "filename": "jsdoc/defaultparams.js",
  "fnName": "setBirthYear",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 37,
      "index": 1148,
      "line": 50,
    },
    "start": Position {
      "column": 0,
      "index": 1002,
      "line": 46,
    },
  },
  "name": "setBirthYear",
  "params": Array [
    Object {
      "description": "- The four-digit birth year.",
      "name": "year",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "setBirthYear",
    },
  ],
  "raw": "/**
 * Set the year in which the employee was born.
 * @param {number} year - The four-digit birth year.
 */",
  "start": 1002,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/defaultparams.js snapshots: Item 7 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Set the name of the user's dog. At this time, only one dog is supported.",
  "end": 1330,
  "filename": "jsdoc/defaultparams.js",
  "fnName": "setDogName",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 36,
      "index": 1330,
      "line": 57,
    },
    "start": Position {
      "column": 0,
      "index": 1150,
      "line": 52,
    },
  },
  "name": "setDogName",
  "params": Array [
    Object {
      "description": "- The name of the user's dog.",
      "name": "dogName",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "setDogName",
    },
  ],
  "raw": "/**
 * Set the name of the user's dog. At this time, only one dog is supported.
 *
 * @param {string} dogName - The name of the user's dog.
 */",
  "start": 1150,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/defaultparams.js snapshots: Item 8 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Set the user's favorite pizza toppings.",
  "end": 1516,
  "filename": "jsdoc/defaultparams.js",
  "fnName": "setPizzaToppings",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 63,
      "index": 1516,
      "line": 64,
    },
    "start": Position {
      "column": 0,
      "index": 1332,
      "line": 59,
    },
  },
  "name": "setPizzaToppings",
  "params": Array [
    Object {
      "description": "- The user's favorite toppings.",
      "name": "toppings",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "PizzaToppings",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "PizzaToppings",
          },
        ],
        "string": "PizzaToppings",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "setPizzaToppings",
    },
  ],
  "raw": "/**
 * Set the user's favorite pizza toppings.
 *
 * @param {PizzaToppings} toppings - The user's favorite toppings.
 */",
  "start": 1332,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/defaultparams.js snapshots: Item 9 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Set whether the user is a ninja.",
  "end": 1698,
  "filename": "jsdoc/defaultparams.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 45,
      "index": 1698,
      "line": 71,
    },
    "start": Position {
      "column": 0,
      "index": 1518,
      "line": 66,
    },
  },
  "member": "setIsNinja",
  "mutable": true,
  "name": "setIsNinja",
  "params": Array [
    Object {
      "description": "- Set to \`true\` if the user is a ninja; otherwise, \`false\`.",
      "name": "isNinja",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "boolean",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "boolean",
          },
        ],
        "string": "boolean",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "setIsNinja",
    },
  ],
  "raw": "/**
 * Set whether the user is a ninja.
 *
 * @param {boolean} isNinja - Set to \`true\` if the user is a ninja; otherwise, \`false\`.
 */",
  "start": 1518,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/defaultparams2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Class representing pizza toppings.",
  "end": 273,
  "filename": "jsdoc/defaultparams2.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 273,
      "line": 10,
    },
    "start": Position {
      "column": 0,
      "index": 15,
      "line": 3,
    },
  },
  "name": "PizzaToppings",
  "path": Array [
    Object {
      "name": "PizzaToppings",
    },
  ],
  "properties": Array [
    Object {
      "description": "Set whether sardines are included in the pizza toppings.",
      "filename": "jsdoc/defaultparams2.js",
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "member": "setSardines",
      "memberOf": "PizzaToppings.prototype",
      "name": "setSardines",
      "params": Array [
        Object {
          "description": "\`true\` to include sardines, \`false\` to omit them.",
          "name": "bool",
          "optional": true,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "boolean",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "boolean",
              },
            ],
            "string": "boolean",
          },
        },
      ],
      "scope": "instance",
      "tags": Array [
        Object {
          "description": "\`true\` to include sardines, \`false\` to omit them.",
          "name": "bool",
          "optional": true,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "     * @param {boolean} [bool] \`true\` to include sardines, \`false\` to omit them.",
              "tokens": Object {
                "delimiter": "*",
                "description": "\`true\` to include sardines, \`false\` to omit them.",
                "end": "",
                "lineEnd": "",
                "name": "[bool]",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@param",
                "type": "{boolean}",
              },
            },
            Object {
              "number": 3,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "boolean",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "PizzaToppings",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "PizzaToppings",
          },
        ],
        "string": "PizzaToppings",
      },
    },
  ],
  "raw": "/** Class representing pizza toppings. */",
  "start": 15,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "PizzaToppings",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "PizzaToppings",
      },
    ],
    "string": "PizzaToppings",
  },
}
`;

exports[`./jsdoc/defaultparams2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Set whether sardines are included in the pizza toppings.",
  "end": 271,
  "filename": "jsdoc/defaultparams2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 31,
      "index": 271,
      "line": 9,
    },
    "start": Position {
      "column": 4,
      "index": 83,
      "line": 5,
    },
  },
  "member": "setSardines",
  "memberOf": "PizzaToppings.prototype",
  "name": "setSardines",
  "params": Array [
    Object {
      "description": "\`true\` to include sardines, \`false\` to omit them.",
      "name": "bool",
      "optional": true,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "boolean",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "boolean",
          },
        ],
        "string": "boolean",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "PizzaToppings",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "setSardines",
    },
  ],
  "raw": "/**
     * Set whether sardines are included in the pizza toppings.
     * @param {boolean} [bool] \`true\` to include sardines, \`false\` to omit them.
     */",
  "scope": "instance",
  "start": 83,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "PizzaToppings",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "PizzaToppings",
      },
    ],
    "string": "PizzaToppings",
  },
}
`;

exports[`./jsdoc/defaulttag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "default": true,
  "description": "",
  "end": 40,
  "filename": "jsdoc/defaulttag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 19,
      "index": 40,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "request",
  "mutable": true,
  "name": "request",
  "path": Array [
    Object {
      "name": "request",
    },
  ],
  "raw": "/**
    @default
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/defaulttag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "default": true,
  "description": "",
  "end": 83,
  "filename": "jsdoc/defaulttag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 83,
      "line": 9,
    },
    "start": Position {
      "column": 0,
      "index": 42,
      "line": 6,
    },
  },
  "member": "response",
  "mutable": true,
  "name": "response",
  "path": Array [
    Object {
      "name": "response",
    },
  ],
  "raw": "/**
    @default
 */",
  "start": 42,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "ok",
}
`;

exports[`./jsdoc/defaulttag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "default": true,
  "description": "",
  "end": 122,
  "filename": "jsdoc/defaulttag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 16,
      "index": 122,
      "line": 14,
    },
    "start": Position {
      "column": 0,
      "index": 85,
      "line": 11,
    },
  },
  "member": "rcode",
  "mutable": true,
  "name": "rcode",
  "path": Array [
    Object {
      "name": "rcode",
    },
  ],
  "raw": "/**
    @default
 */",
  "start": 85,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 200,
}
`;

exports[`./jsdoc/defaulttag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "default": true,
  "description": "",
  "end": 163,
  "filename": "jsdoc/defaulttag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 18,
      "index": 163,
      "line": 19,
    },
    "start": Position {
      "column": 0,
      "index": 124,
      "line": 16,
    },
  },
  "member": "rvalid",
  "mutable": true,
  "name": "rvalid",
  "path": Array [
    Object {
      "name": "rvalid",
    },
  ],
  "raw": "/**
    @default
 */",
  "start": 124,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "boolean",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "boolean",
      },
    ],
    "string": "boolean",
  },
  "value": true,
}
`;

exports[`./jsdoc/defaulttag.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "default": true,
  "description": "",
  "end": 207,
  "filename": "jsdoc/defaulttag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 21,
      "index": 207,
      "line": 24,
    },
    "start": Position {
      "column": 0,
      "index": 165,
      "line": 21,
    },
  },
  "member": "rerrored",
  "mutable": true,
  "name": "rerrored",
  "path": Array [
    Object {
      "name": "rerrored",
    },
  ],
  "raw": "/**
    @default
 */",
  "start": 165,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "boolean",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "boolean",
      },
    ],
    "string": "boolean",
  },
  "value": false,
}
`;

exports[`./jsdoc/defaulttag.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "default": true,
  "description": "",
  "end": 276,
  "filename": "jsdoc/defaulttag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 28,
      "index": 276,
      "line": 29,
    },
    "start": Position {
      "column": 0,
      "index": 209,
      "line": 26,
    },
  },
  "member": "win",
  "mutable": true,
  "name": "win",
  "path": Array [
    Object {
      "name": "win",
    },
  ],
  "raw": "/**
    @default the parent window
 */",
  "start": 209,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/defaulttag.js snapshots: Item 7 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "default": true,
  "description": "",
  "end": 332,
  "filename": "jsdoc/defaulttag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 33,
      "index": 332,
      "line": 34,
    },
    "start": Position {
      "column": 0,
      "index": 278,
      "line": 31,
    },
  },
  "member": "header",
  "mutable": true,
  "name": "header",
  "path": Array [
    Object {
      "name": "header",
    },
  ],
  "raw": "/**
    @default
 */",
  "start": 278,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/defaulttag.js snapshots: Item 8 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "default": true,
  "description": "",
  "end": 405,
  "filename": "jsdoc/defaulttag.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 50,
      "index": 405,
      "line": 39,
    },
    "start": Position {
      "column": 0,
      "index": 334,
      "line": 36,
    },
  },
  "member": "obj",
  "mutable": true,
  "name": "obj",
  "path": Array [
    Object {
      "name": "obj",
    },
  ],
  "properties": Array [
    Object {
      "kind": "property",
      "member": "valueA",
      "memberOf": "obj",
      "name": "valueA",
      "path": Array [
        Object {
          "name": "obj",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
      "value": "a",
    },
    Object {
      "member": "valueB",
      "memberOf": "obj",
      "name": "valueB",
      "path": Array [
        Object {
          "name": "obj",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "boolean",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "boolean",
          },
        ],
        "string": "boolean",
      },
      "value": false,
    },
    Object {
      "kind": "property",
      "member": "valueC",
      "memberOf": "obj",
      "name": "valueC",
      "path": Array [
        Object {
          "name": "obj",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 7,
    },
  ],
  "raw": "/**
    @default
 */",
  "start": 334,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/defaulttag.js snapshots: Item 9 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "default": true,
  "description": "",
  "end": 506,
  "filename": "jsdoc/defaulttag.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 506,
      "line": 48,
    },
    "start": Position {
      "column": 0,
      "index": 407,
      "line": 41,
    },
  },
  "member": "multilineObject",
  "mutable": true,
  "name": "multilineObject",
  "path": Array [
    Object {
      "name": "multilineObject",
    },
  ],
  "properties": Array [
    Object {
      "kind": "property",
      "member": "valueA",
      "memberOf": "multilineObject",
      "name": "valueA",
      "path": Array [
        Object {
          "name": "multilineObject",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
      "value": "a",
    },
    Object {
      "member": "valueB",
      "memberOf": "multilineObject",
      "name": "valueB",
      "path": Array [
        Object {
          "name": "multilineObject",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "boolean",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "boolean",
          },
        ],
        "string": "boolean",
      },
      "value": false,
    },
    Object {
      "kind": "property",
      "member": "valueC",
      "memberOf": "multilineObject",
      "name": "valueC",
      "path": Array [
        Object {
          "name": "multilineObject",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 7,
    },
  ],
  "raw": "/**
 * @default
 */",
  "start": 407,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/defaulttag.js snapshots: Item 10 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "default": true,
  "description": "",
  "end": 552,
  "filename": "jsdoc/defaulttag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 28,
      "index": 552,
      "line": 51,
    },
    "start": Position {
      "column": 0,
      "index": 508,
      "line": 50,
    },
  },
  "member": "arr",
  "mutable": true,
  "name": "arr",
  "path": Array [
    Object {
      "name": "arr",
    },
  ],
  "raw": "/** @default */",
  "start": 508,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/defaulttag.js snapshots: Item 11 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "default": true,
  "description": "",
  "end": 618,
  "filename": "jsdoc/defaulttag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 26,
      "index": 618,
      "line": 57,
    },
    "start": Position {
      "column": 0,
      "index": 554,
      "line": 53,
    },
  },
  "member": "defaultWithType",
  "mutable": true,
  "name": "defaultWithType",
  "path": Array [
    Object {
      "name": "defaultWithType",
    },
  ],
  "raw": "/**
 * @default
 * @type {string}
 */",
  "start": 554,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "a",
}
`;

exports[`./jsdoc/definetag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "define": Object {
    "description": "if enabled, \`false\` otherwise",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "boolean",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "boolean",
        },
      ],
      "string": "boolean",
    },
  },
  "description": "Controls whether debugging is enabled.",
  "end": 135,
  "filename": "jsdoc/definetag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 24,
      "index": 135,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "ENABLE_DEBUG",
  "mutable": true,
  "name": "ENABLE_DEBUG",
  "path": Array [
    Object {
      "name": "ENABLE_DEBUG",
    },
  ],
  "raw": "/**
 * Controls whether debugging is enabled.
 *
 * @define {boolean} \`true\` if enabled, \`false\` otherwise
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "boolean",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "boolean",
      },
    ],
    "string": "boolean",
  },
  "value": true,
}
`;

exports[`./jsdoc/deprecatedtag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 38,
  "filename": "jsdoc/deprecatedtag.js",
  "fnName": "foo",
  "ignore": false,
  "isAsync": false,
  "isDeprecated": true,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 38,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "foo",
    },
  ],
  "raw": "/** @deprecated
*/",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/deprecatedtag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 96,
  "filename": "jsdoc/deprecatedtag.js",
  "fnName": "bar",
  "ignore": false,
  "isAsync": false,
  "isDeprecated": "version 2.0",
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 96,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 40,
      "line": 7,
    },
  },
  "name": "bar",
  "params": Array [],
  "path": Array [
    Object {
      "name": "bar",
    },
  ],
  "raw": "/** @deprecated since version 2.0
*/",
  "start": 40,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/descriptiontag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "halb halb",
  "end": 53,
  "filename": "jsdoc/descriptiontag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 53,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "x",
  "mutable": true,
  "name": "x",
  "path": Array [
    Object {
      "name": "x",
    },
  ],
  "raw": "/** Blah Blah Blah
 * @desc halb halb halb
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/descriptiontag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 89,
  "filename": "jsdoc/descriptiontag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 89,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 55,
      "line": 6,
    },
  },
  "member": "y",
  "mutable": true,
  "name": "y",
  "path": Array [
    Object {
      "name": "y",
    },
  ],
  "raw": "/** @description lkjasdf */",
  "start": 55,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/destructuring.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A builder function for the Stick application;",
  "end": 127,
  "filename": "jsdoc/destructuring.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 37,
      "index": 127,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "{
  Application
}",
  "mutable": true,
  "name": "{
  Application
}",
  "path": Array [
    Object {
      "name": "{
  Application
}",
    },
  ],
  "raw": "/**
    A builder function for the Stick application;
    @var {function} Application
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/dicttag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 50,
  "filename": "jsdoc/dicttag.js",
  "fnName": "Foo",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isDict": true,
  "isGenerator": false,
  "isStruct": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 50,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "raw": "/**
 * @constructor
 * @dict
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/doclet.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Markdown asterisks in a doclet that does not use leading asterisks.
*Strong** is strong.

List item 1.
List item 2.",
  "end": 213,
  "filename": "jsdoc/doclet.js",
  "fnName": "test1",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 213,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "test1",
  "params": Array [
    Object {
      "description": "- The thingy.",
      "name": "thingy",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "test1",
    },
  ],
  "raw": "/**
    Markdown asterisks in a doclet that does not use leading asterisks.
    **Strong** is strong.

    * List item 1.
    * List item 2.
    @param {string} thingy - The thingy.
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/doclet.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Markdown asterisks in a doclet that uses leading asterisks.
**Strong** is strong.

* List item 1.
* List item 2.",
  "end": 417,
  "filename": "jsdoc/doclet.js",
  "fnName": "test2",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 417,
      "line": 23,
    },
    "start": Position {
      "column": 0,
      "index": 215,
      "line": 13,
    },
  },
  "name": "test2",
  "params": Array [
    Object {
      "description": "- The thingy.",
      "name": "thingy",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "test2",
    },
  ],
  "raw": "/**
 * Markdown asterisks in a doclet that uses leading asterisks.
 * **Strong** is strong.
 *
 * * List item 1.
 * * List item 2.
 * @param {string} thingy - The thingy.
 */",
  "start": 215,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/emptycomments.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 26,
  "filename": "jsdoc/emptycomments.js",
  "fnName": "first",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 19,
      "index": 26,
      "line": 2,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "first",
  "params": Array [],
  "path": Array [
    Object {
      "name": "first",
    },
  ],
  "raw": "/** */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/emptycomments.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 58,
  "filename": "jsdoc/emptycomments.js",
  "fnName": "second",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 58,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 28,
      "line": 4,
    },
  },
  "name": "second",
  "params": Array [],
  "path": Array [
    Object {
      "name": "second",
    },
  ],
  "raw": "/**    */",
  "start": 28,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/emptycomments.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 154,
  "filename": "jsdoc/emptycomments.js",
  "fnName": "third",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 19,
      "index": 154,
      "line": 9,
    },
    "start": Position {
      "column": 0,
      "index": 126,
      "line": 8,
    },
  },
  "name": "third",
  "params": Array [],
  "path": Array [
    Object {
      "name": "third",
    },
  ],
  "raw": "/** 	 */",
  "start": 126,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/emptycomments.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 258,
  "filename": "jsdoc/emptycomments.js",
  "fnName": "fourth",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 258,
      "line": 13,
    },
    "start": Position {
      "column": 0,
      "index": 227,
      "line": 12,
    },
  },
  "name": "fourth",
  "params": Array [],
  "path": Array [
    Object {
      "name": "fourth",
    },
  ],
  "raw": "/** 			 */",
  "start": 227,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/emptycomments.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 347,
  "filename": "jsdoc/emptycomments.js",
  "fnName": "fifth",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 19,
      "index": 347,
      "line": 18,
    },
    "start": Position {
      "column": 0,
      "index": 320,
      "line": 16,
    },
  },
  "name": "fifth",
  "params": Array [],
  "path": Array [
    Object {
      "name": "fifth",
    },
  ],
  "raw": "/**
 */",
  "start": 320,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/emptycomments.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 454,
  "filename": "jsdoc/emptycomments.js",
  "fnName": "sixth",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 19,
      "index": 454,
      "line": 27,
    },
    "start": Position {
      "column": 0,
      "index": 415,
      "line": 21,
    },
  },
  "name": "sixth",
  "params": Array [],
  "path": Array [
    Object {
      "name": "sixth",
    },
  ],
  "raw": "/**
 *
 *
 *
 *
 */",
  "start": 415,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/enumtag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Enum for tri-state values.",
  "end": 162,
  "filename": "jsdoc/enumtag.js",
  "ignore": false,
  "isEnum": true,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 162,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "TriState",
  "mutable": true,
  "name": "TriState",
  "path": Array [
    Object {
      "name": "TriState",
    },
  ],
  "properties": Array [
    Object {
      "description": "true",
      "ignore": false,
      "path": Array [
        Object {
          "name": "TriState",
        },
      ],
      "tags": Array [],
    },
    Object {
      "member": "FALSE",
      "memberOf": "TriState",
      "name": "FALSE",
      "path": Array [
        Object {
          "name": "TriState",
        },
      ],
    },
    Object {
      "description": "",
      "ignore": false,
      "path": Array [
        Object {
          "name": "TriState",
        },
      ],
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @type {boolean} */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "",
                "tag": "@type",
                "type": "{boolean}",
              },
            },
          ],
          "tag": "type",
          "type": "boolean",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "boolean",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "boolean",
          },
        ],
        "string": "boolean",
      },
    },
  ],
  "raw": "/**
 * Enum for tri-state values.
 * @enum {number}
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
}
`;

exports[`./jsdoc/enumtag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "true",
  "end": 100,
  "filename": "jsdoc/enumtag.js",
  "ignore": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 11,
      "index": 100,
      "line": 7,
    },
    "start": Position {
      "column": 4,
      "index": 77,
      "line": 6,
    },
  },
  "member": "TRUE",
  "memberOf": "TriState",
  "mutable": true,
  "name": "TRUE",
  "path": Array [
    Object {
      "name": "TriState",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "true",
        "ignore": false,
        "tags": Array [],
      },
      "code": "TRUE: 1",
      "ctx": Object {
        "kind": "property",
        "member": "TRUE",
        "memberOf": undefined,
        "name": "TRUE",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
        "value": 1,
      },
      "description": "true",
      "end": 100,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 11,
          "index": 100,
          "line": 7,
        },
        "start": Position {
          "column": 4,
          "index": 77,
          "line": 6,
        },
      },
      "member": "TRUE",
      "memberOf": undefined,
      "name": "TRUE",
      "path": Array [],
      "raw": "/** true */",
      "start": 77,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 1,
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @type {boolean} */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "",
                  "tag": "@type",
                  "type": "{boolean}",
                },
              },
            ],
            "tag": "type",
            "type": "boolean",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "boolean",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "boolean",
            },
          ],
          "string": "boolean",
        },
      },
      "code": "MAYBE: true",
      "ctx": Object {
        "kind": "property",
        "member": "MAYBE",
        "memberOf": undefined,
        "name": "MAYBE",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "boolean",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "boolean",
            },
          ],
          "string": "boolean",
        },
        "value": true,
      },
      "description": "",
      "end": 159,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 15,
          "index": 159,
          "line": 10,
        },
        "start": Position {
          "column": 4,
          "index": 121,
          "line": 9,
        },
      },
      "member": "MAYBE",
      "memberOf": undefined,
      "name": "MAYBE",
      "path": Array [],
      "raw": "/** @type {boolean} */",
      "start": 121,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @type {boolean} */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "",
                "tag": "@type",
                "type": "{boolean}",
              },
            },
          ],
          "tag": "type",
          "type": "boolean",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "boolean",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "boolean",
          },
        ],
        "string": "boolean",
      },
      "value": true,
    },
  ],
  "raw": "/** true */",
  "start": 77,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 1,
}
`;

exports[`./jsdoc/enumtag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 159,
  "filename": "jsdoc/enumtag.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 15,
      "index": 159,
      "line": 10,
    },
    "start": Position {
      "column": 4,
      "index": 121,
      "line": 9,
    },
  },
  "member": "MAYBE",
  "memberOf": "TriState",
  "mutable": true,
  "name": "MAYBE",
  "path": Array [
    Object {
      "name": "TriState",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "true",
        "ignore": false,
        "tags": Array [],
      },
      "code": "TRUE: 1",
      "ctx": Object {
        "kind": "property",
        "member": "TRUE",
        "memberOf": undefined,
        "name": "TRUE",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
        "value": 1,
      },
      "description": "true",
      "end": 100,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 11,
          "index": 100,
          "line": 7,
        },
        "start": Position {
          "column": 4,
          "index": 77,
          "line": 6,
        },
      },
      "member": "TRUE",
      "memberOf": undefined,
      "name": "TRUE",
      "path": Array [],
      "raw": "/** true */",
      "start": 77,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 1,
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @type {boolean} */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "",
                  "tag": "@type",
                  "type": "{boolean}",
                },
              },
            ],
            "tag": "type",
            "type": "boolean",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "boolean",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "boolean",
            },
          ],
          "string": "boolean",
        },
      },
      "code": "MAYBE: true",
      "ctx": Object {
        "kind": "property",
        "member": "MAYBE",
        "memberOf": undefined,
        "name": "MAYBE",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "boolean",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "boolean",
            },
          ],
          "string": "boolean",
        },
        "value": true,
      },
      "description": "",
      "end": 159,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 15,
          "index": 159,
          "line": 10,
        },
        "start": Position {
          "column": 4,
          "index": 121,
          "line": 9,
        },
      },
      "member": "MAYBE",
      "memberOf": undefined,
      "name": "MAYBE",
      "path": Array [],
      "raw": "/** @type {boolean} */",
      "start": 121,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @type {boolean} */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "",
                "tag": "@type",
                "type": "{boolean}",
              },
            },
          ],
          "tag": "type",
          "type": "boolean",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "boolean",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "boolean",
          },
        ],
        "string": "boolean",
      },
      "value": true,
    },
  ],
  "raw": "/** @type {boolean} */",
  "start": 121,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "boolean",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "boolean",
      },
    ],
    "string": "boolean",
  },
  "value": true,
}
`;

exports[`./jsdoc/enumtag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Numeric enum for true/false values.",
  "end": 300,
  "filename": "jsdoc/enumtag.js",
  "ignore": false,
  "isEnum": true,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 300,
      "line": 21,
    },
    "start": Position {
      "column": 0,
      "index": 164,
      "line": 13,
    },
  },
  "member": "TrueFalseNumeric",
  "mutable": true,
  "name": "TrueFalseNumeric",
  "path": Array [
    Object {
      "name": "TrueFalseNumeric",
    },
  ],
  "properties": Array [
    Object {
      "description": "false",
      "ignore": false,
      "path": Array [
        Object {
          "name": "TrueFalseNumeric",
        },
      ],
      "tags": Array [],
    },
    Object {
      "member": "1",
      "memberOf": "TrueFalseNumeric",
      "name": "1",
      "path": Array [
        Object {
          "name": "TrueFalseNumeric",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "boolean",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "boolean",
          },
        ],
        "string": "boolean",
      },
      "value": true,
    },
  ],
  "raw": "/**
 * Numeric enum for true/false values.
 * @enum {boolean}
 */",
  "start": 164,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "boolean",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "boolean",
      },
    ],
    "string": "boolean",
  },
}
`;

exports[`./jsdoc/enumtag.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "false",
  "end": 284,
  "filename": "jsdoc/enumtag.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 12,
      "index": 284,
      "line": 19,
    },
    "start": Position {
      "column": 4,
      "index": 259,
      "line": 18,
    },
  },
  "member": "0",
  "memberOf": "TrueFalseNumeric",
  "mutable": true,
  "name": "0",
  "path": Array [
    Object {
      "name": "TrueFalseNumeric",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "false",
        "ignore": false,
        "tags": Array [],
      },
      "code": "0: false",
      "ctx": Object {
        "kind": "property",
        "member": "0",
        "memberOf": undefined,
        "name": "0",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "boolean",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "boolean",
            },
          ],
          "string": "boolean",
        },
        "value": false,
      },
      "description": "false",
      "end": 284,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 12,
          "index": 284,
          "line": 19,
        },
        "start": Position {
          "column": 4,
          "index": 259,
          "line": 18,
        },
      },
      "member": "0",
      "memberOf": undefined,
      "name": "0",
      "path": Array [],
      "raw": "/** false */",
      "start": 259,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "boolean",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "boolean",
          },
        ],
        "string": "boolean",
      },
      "value": false,
    },
  ],
  "raw": "/** false */",
  "start": 259,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "boolean",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "boolean",
      },
    ],
    "string": "boolean",
  },
  "value": false,
}
`;

exports[`./jsdoc/enumtag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 23,
  "filename": "jsdoc/enumtag2.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 23,
      "index": 23,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:my/enums",
  },
  "path": Array [],
  "raw": "/** @module my/enums */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/enumtag2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Enum for quad-state values.",
  "end": 226,
  "export": "QuadState",
  "filename": "jsdoc/enumtag2.js",
  "ignore": false,
  "isEnum": true,
  "isExport": true,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 226,
      "line": 14,
    },
    "start": Position {
      "column": 0,
      "index": 25,
      "line": 3,
    },
  },
  "member": "QuadState",
  "memberOf": "exports",
  "mutable": true,
  "name": "QuadState",
  "parent": "module:my/enums",
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "QuadState",
    },
  ],
  "properties": Array [
    Object {
      "description": "true",
      "ignore": false,
      "path": Array [
        Object {
          "name": "exports",
        },
        Object {
          "name": "QuadState",
        },
      ],
      "tags": Array [],
    },
    Object {
      "member": "FALSE",
      "memberOf": "QuadState",
      "name": "FALSE",
      "path": Array [
        Object {
          "name": "exports",
        },
        Object {
          "name": "QuadState",
        },
      ],
    },
    Object {
      "kind": "constant",
      "member": "MAYBE",
      "memberOf": "QuadState",
      "name": "MAYBE",
      "path": Array [
        Object {
          "name": "exports",
        },
        Object {
          "name": "QuadState",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 0,
    },
    Object {
      "member": "UNKNOWN",
      "memberOf": "QuadState",
      "name": "UNKNOWN",
      "path": Array [
        Object {
          "name": "exports",
        },
        Object {
          "name": "QuadState",
        },
      ],
    },
  ],
  "raw": "/**
 * Enum for quad-state values.
 * @enum {number}
 * @memberOf module:my/enums
 */",
  "start": 25,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
}
`;

exports[`./jsdoc/enumtag2.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "true",
  "end": 176,
  "filename": "jsdoc/enumtag2.js",
  "ignore": false,
  "kind": "constant",
  "loc": Object {
    "end": Position {
      "column": 11,
      "index": 176,
      "line": 10,
    },
    "start": Position {
      "column": 4,
      "index": 153,
      "line": 9,
    },
  },
  "member": "TRUE",
  "memberOf": "QuadState",
  "mutable": true,
  "name": "TRUE",
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "QuadState",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "true",
        "ignore": false,
        "tags": Array [],
      },
      "code": "TRUE: 1",
      "ctx": Object {
        "kind": "property",
        "member": "TRUE",
        "memberOf": undefined,
        "name": "TRUE",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
        "value": 1,
      },
      "description": "true",
      "end": 176,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 11,
          "index": 176,
          "line": 10,
        },
        "start": Position {
          "column": 4,
          "index": 153,
          "line": 9,
        },
      },
      "member": "TRUE",
      "memberOf": undefined,
      "name": "TRUE",
      "path": Array [],
      "raw": "/** true */",
      "start": 153,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 1,
    },
  ],
  "raw": "/** true */",
  "start": 153,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 1,
}
`;

exports[`./jsdoc/enumtag2.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Enum for penta-state values.",
  "end": 497,
  "export": "PentaState",
  "filename": "jsdoc/enumtag2.js",
  "ignore": false,
  "isEnum": true,
  "isExport": true,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 497,
      "line": 32,
    },
    "start": Position {
      "column": 0,
      "index": 228,
      "line": 16,
    },
  },
  "member": "PentaState",
  "memberOf": "exports",
  "name": "PentaState",
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "PentaState",
    },
  ],
  "raw": "/**
 * Enum for penta-state values.
 * @enum {number}
 */",
  "start": 228,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
}
`;

exports[`./jsdoc/enumtag2.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Enum for penta-state values, BUT SHOUTIER.",
  "end": 496,
  "export": "PENTASTATE",
  "filename": "jsdoc/enumtag2.js",
  "ignore": false,
  "isEnum": true,
  "isExport": true,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 496,
      "line": 32,
    },
    "start": Position {
      "column": 0,
      "index": 307,
      "line": 21,
    },
  },
  "member": "PENTASTATE",
  "memberOf": "exports",
  "name": "PENTASTATE",
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "PENTASTATE",
    },
  ],
  "properties": Array [
    Object {
      "description": "true",
      "ignore": false,
      "path": Array [
        Object {
          "name": "exports",
        },
        Object {
          "name": "PENTASTATE",
        },
      ],
      "tags": Array [],
    },
    Object {
      "member": "FALSE",
      "memberOf": "PENTASTATE",
      "name": "FALSE",
      "path": Array [
        Object {
          "name": "exports",
        },
        Object {
          "name": "PENTASTATE",
        },
      ],
    },
    Object {
      "kind": "constant",
      "member": "MAYBE",
      "memberOf": "PENTASTATE",
      "name": "MAYBE",
      "path": Array [
        Object {
          "name": "exports",
        },
        Object {
          "name": "PENTASTATE",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 0,
    },
    Object {
      "member": "UNKNOWN",
      "memberOf": "PENTASTATE",
      "name": "UNKNOWN",
      "path": Array [
        Object {
          "name": "exports",
        },
        Object {
          "name": "PENTASTATE",
        },
      ],
    },
    Object {
      "kind": "constant",
      "member": "DONTCARE",
      "memberOf": "PENTASTATE",
      "name": "DONTCARE",
      "path": Array [
        Object {
          "name": "exports",
        },
        Object {
          "name": "PENTASTATE",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 99,
    },
  ],
  "raw": "/**
 * Enum for penta-state values, BUT SHOUTIER.
 * @enum {number}
 */",
  "start": 307,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
}
`;

exports[`./jsdoc/enumtag2.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "true",
  "end": 429,
  "filename": "jsdoc/enumtag2.js",
  "ignore": false,
  "kind": "constant",
  "loc": Object {
    "end": Position {
      "column": 11,
      "index": 429,
      "line": 27,
    },
    "start": Position {
      "column": 4,
      "index": 406,
      "line": 26,
    },
  },
  "member": "TRUE",
  "memberOf": "PENTASTATE",
  "name": "TRUE",
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "PENTASTATE",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "true",
        "ignore": false,
        "tags": Array [],
      },
      "code": "TRUE: 1",
      "ctx": Object {
        "kind": "property",
        "member": "TRUE",
        "memberOf": undefined,
        "name": "TRUE",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
        "value": 1,
      },
      "description": "true",
      "end": 429,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 11,
          "index": 429,
          "line": 27,
        },
        "start": Position {
          "column": 4,
          "index": 406,
          "line": 26,
        },
      },
      "member": "TRUE",
      "memberOf": undefined,
      "name": "TRUE",
      "path": Array [],
      "raw": "/** true */",
      "start": 406,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 1,
    },
  ],
  "raw": "/** true */",
  "start": 406,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 1,
}
`;

exports[`./jsdoc/enumtag3.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 128,
  "filename": "jsdoc/enumtag3.js",
  "ignore": false,
  "isAsync": false,
  "isEnum": true,
  "isGenerator": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 128,
      "line": 8,
    },
    "start": Position {
      "column": 4,
      "index": 25,
      "line": 2,
    },
  },
  "member": "exports",
  "mutable": true,
  "name": "exports",
  "params": Array [],
  "path": Array [
    Object {
      "name": "exports",
    },
  ],
  "properties": Array [
    Object {
      "kind": "property",
      "member": "A",
      "memberOf": "exports",
      "name": "A",
      "path": Array [
        Object {
          "name": "exports",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
      "value": "abc",
    },
  ],
  "raw": "/**
     * @exports mymodule
     * @enum {string}
      */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 25,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
}
`;

exports[`./jsdoc/eventfirestag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 45,
  "filename": "jsdoc/eventfirestag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 45,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "Hurl",
  "mutable": true,
  "name": "Hurl",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Hurl",
    },
  ],
  "raw": "/**
 * @class
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/eventfirestag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Throw a snowball.",
  "end": 247,
  "filename": "jsdoc/eventfirestag.js",
  "fires": Array [
    Object {
      "memberOf": "Hurl",
      "name": "snowball",
    },
    Object {
      "memberOf": "Hurl",
      "name": "event:brick",
    },
  ],
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 247,
      "line": 18,
    },
    "start": Position {
      "column": 0,
      "index": 47,
      "line": 7,
    },
  },
  "member": "snowball",
  "memberOf": "Hurl.prototype",
  "name": "snowball",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Hurl",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "snowball",
    },
  ],
  "raw": "/**
 * Throw a snowball.
 *
 * @fires Hurl#snowball
 * @fires Hurl#event:brick
 */",
  "scope": "instance",
  "start": 47,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/eventfirestag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 244,
  "filename": "jsdoc/eventfirestag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "event",
  "loc": Object {
    "end": Position {
      "column": 30,
      "index": 244,
      "line": 17,
    },
    "start": Position {
      "column": 4,
      "index": 174,
      "line": 14,
    },
  },
  "member": "snowball",
  "memberOf": "Hurl",
  "name": "snowball",
  "params": Array [],
  "path": Array [],
  "raw": "/**
     * @event Hurl#snowball
     */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "scope": "instance",
  "start": 174,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/eventfirestag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Throw a football match.",
  "end": 448,
  "filename": "jsdoc/eventfirestag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 448,
      "line": 30,
    },
    "start": Position {
      "column": 0,
      "index": 249,
      "line": 20,
    },
  },
  "member": "footballMatch",
  "memberOf": "Hurl.prototype",
  "name": "footballMatch",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Hurl",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "footballMatch",
    },
  ],
  "raw": "/**
 * Throw a football match.
 *
 * @emits Hurl#footballMatch
 */",
  "scope": "instance",
  "start": 249,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/eventfirestag.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 445,
  "filename": "jsdoc/eventfirestag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "event",
  "loc": Object {
    "end": Position {
      "column": 35,
      "index": 445,
      "line": 29,
    },
    "start": Position {
      "column": 4,
      "index": 365,
      "line": 26,
    },
  },
  "member": "footballMatch",
  "memberOf": "Hurl",
  "name": "footballMatch",
  "params": Array [],
  "path": Array [],
  "raw": "/**
     * @event Hurl#footballMatch
     */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "scope": "instance",
  "start": 365,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/eventorder.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Socket class.",
  "end": 110,
  "filename": "jsdoc/eventorder.js",
  "fnName": "Socket",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 110,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 43,
      "line": 5,
    },
  },
  "name": "Socket",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Socket",
    },
  ],
  "raw": "/**
 * Socket class.
 * @class
 */",
  "start": 43,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/eventorder.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Send a packet.",
  "end": 302,
  "filename": "jsdoc/eventorder.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 302,
      "line": 20,
    },
    "start": Position {
      "column": 0,
      "index": 112,
      "line": 13,
    },
  },
  "member": "send",
  "memberOf": "Socket.prototype",
  "name": "send",
  "params": Array [
    Object {
      "description": "- The packet to send.",
      "name": "packet",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Packet",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Packet",
          },
        ],
        "string": "Packet",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Socket",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "send",
    },
  ],
  "raw": "/**
 * Send a packet.
 * @param {Packet} packet - The packet to send.
 * @return {boolean} \`true\` on success, \`false\` on failure.
 */",
  "returns": Object {
    "description": "on success, \`false\` on failure.",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "boolean",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "boolean",
        },
      ],
      "string": "boolean",
    },
  },
  "scope": "instance",
  "start": 112,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/eventorder.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Virtual doclet for \`Packet\` class.",
  "end": 366,
  "filename": "jsdoc/eventorder.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 366,
      "line": 25,
    },
    "start": Position {
      "column": 0,
      "index": 304,
      "line": 22,
    },
  },
  "name": "Packet",
  "path": Array [],
  "raw": "/**
 * Virtual doclet for \`Packet\` class.
 * @class Packet
 */",
  "start": 304,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/eventorder.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Close the socket.",
  "end": 448,
  "filename": "jsdoc/eventorder.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 448,
      "line": 32,
    },
    "start": Position {
      "column": 0,
      "index": 368,
      "line": 27,
    },
  },
  "member": "close",
  "memberOf": "Socket.prototype",
  "name": "close",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Socket",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "close",
    },
  ],
  "raw": "/**
 * Close the socket.
 */",
  "scope": "instance",
  "start": 368,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exampletag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 69,
  "examples": Array [
    "console.log(\\"foo\\");
console.log(\\"bar\\");",
  ],
  "filename": "jsdoc/exampletag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 69,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "x",
  "mutable": true,
  "name": "x",
  "path": Array [
    Object {
      "name": "x",
    },
  ],
  "raw": "/** @example
 * console.log(\\"foo\\");
 * console.log(\\"bar\\");
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/exampletag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 194,
  "examples": Array [
    "console.log(\\"foo\\");
console.log(\\"bar\\");",
    "
<caption>Example 2</caption>
1 + 2;",
  ],
  "filename": "jsdoc/exampletag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 194,
      "line": 14,
    },
    "start": Position {
      "column": 0,
      "index": 71,
      "line": 7,
    },
  },
  "member": "y",
  "mutable": true,
  "name": "y",
  "path": Array [
    Object {
      "name": "y",
    },
  ],
  "raw": "/** @example
 * console.log(\\"foo\\");
 * console.log(\\"bar\\");
 * @example
 * <caption>Example 2</caption>
 * 1 + 2;
 */",
  "start": 71,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/exceptiontag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 66,
  "filename": "jsdoc/exceptiontag.js",
  "fnName": "foo",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 66,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "foo",
  "params": Array [
    Object {
      "member": "x",
      "name": "x",
    },
  ],
  "path": Array [
    Object {
      "name": "foo",
    },
  ],
  "raw": "/**
    @throws {InvalidArgumentException}
*/",
  "start": 0,
  "tags": ArrayContaining [],
  "throws": Object {
    "description": "    ",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "InvalidArgumentException",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "InvalidArgumentException",
        },
      ],
      "string": "InvalidArgumentException",
    },
  },
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exceptiontag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 151,
  "filename": "jsdoc/exceptiontag.js",
  "fnName": "bar",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 151,
      "line": 13,
    },
    "start": Position {
      "column": 0,
      "index": 68,
      "line": 8,
    },
  },
  "name": "bar",
  "params": Array [
    Object {
      "member": "x",
      "name": "x",
    },
  ],
  "path": Array [
    Object {
      "name": "bar",
    },
  ],
  "raw": "/**
    @exception Will throw an error if argument is null.
*/",
  "start": 68,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exceptiontag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 239,
  "filename": "jsdoc/exceptiontag.js",
  "fnName": "pez",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 239,
      "line": 20,
    },
    "start": Position {
      "column": 0,
      "index": 153,
      "line": 15,
    },
  },
  "name": "pez",
  "params": Array [
    Object {
      "member": "x",
      "name": "x",
    },
  ],
  "path": Array [
    Object {
      "name": "pez",
    },
  ],
  "raw": "/**
    @exception {DivideByZero} Argument x must be non-zero.
*/",
  "start": 153,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exceptiontag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A description of the function.",
  "end": 359,
  "filename": "jsdoc/exceptiontag.js",
  "fnName": "cos",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 18,
      "index": 359,
      "line": 27,
    },
    "start": Position {
      "column": 0,
      "index": 241,
      "line": 22,
    },
  },
  "name": "cos",
  "params": Array [
    Object {
      "member": "x",
      "name": "x",
    },
  ],
  "path": Array [
    Object {
      "name": "cos",
    },
  ],
  "raw": "/**
 * A description of the function.
 *
 * @exception {Object} A description of the exception.
 */",
  "start": 241,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exportclass.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Foo module",
  "end": 36,
  "filename": "jsdoc/exportclass.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 36,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:foo",
  },
  "path": Array [],
  "raw": "/**
 * Foo module
 * @module foo
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/exportclass.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Class description",
  "end": 83,
  "export": "Bar",
  "filename": "jsdoc/exportclass.js",
  "ignore": false,
  "isExport": true,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 83,
      "line": 8,
    },
    "start": Position {
      "column": 0,
      "index": 38,
      "line": 6,
    },
  },
  "name": "Bar",
  "path": Array [
    Object {
      "name": "Bar",
    },
  ],
  "properties": Array [],
  "raw": "/** Class description */",
  "start": 38,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Bar",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Bar",
      },
    ],
    "string": "Bar",
  },
}
`;

exports[`./jsdoc/exportdefault.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 19,
  "filename": "jsdoc/exportdefault.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 19,
      "index": 19,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:test",
  },
  "path": Array [],
  "raw": "/** @module test */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/exportdefault.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Test value",
  "end": 60,
  "export": "default",
  "filename": "jsdoc/exportdefault.js",
  "ignore": false,
  "isDefaultExport": true,
  "isExport": true,
  "loc": Object {
    "end": Position {
      "column": 21,
      "index": 60,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 21,
      "line": 3,
    },
  },
  "path": Array [],
  "raw": "/** Test value */",
  "start": 21,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "foo",
}
`;

exports[`./jsdoc/exportdefaultclass.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 19,
  "filename": "jsdoc/exportdefaultclass.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 19,
      "index": 19,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:test",
  },
  "path": Array [],
  "raw": "/** @module test */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/exportdefaultclass.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Test class",
  "end": 116,
  "export": "default",
  "filename": "jsdoc/exportdefaultclass.js",
  "ignore": false,
  "isDefaultExport": true,
  "isExport": true,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 116,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 21,
      "line": 3,
    },
  },
  "name": "Foo",
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "properties": Array [
    Object {
      "description": "Test constructor",
      "export": "default",
      "filename": "jsdoc/exportdefaultclass.js",
      "ignore": false,
      "isAsync": false,
      "isConstructor": true,
      "isDefaultExport": true,
      "isExport": true,
      "isGenerator": false,
      "kind": "constructor",
      "member": "constructor",
      "memberOf": "Foo.prototype",
      "name": "constructor",
      "params": Array [],
      "scope": "instance",
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Foo",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Foo",
          },
        ],
        "string": "Foo",
      },
    },
  ],
  "raw": "/** Test class */",
  "start": 21,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Foo",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Foo",
      },
    ],
    "string": "Foo",
  },
}
`;

exports[`./jsdoc/exportdefaultclass.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Test constructor",
  "end": 114,
  "export": "default",
  "filename": "jsdoc/exportdefaultclass.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isDefaultExport": true,
  "isExport": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 114,
      "line": 6,
    },
    "start": Position {
      "column": 4,
      "index": 70,
      "line": 5,
    },
  },
  "member": "constructor",
  "memberOf": "Foo.prototype",
  "name": "constructor",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "constructor",
    },
  ],
  "raw": "/** Test constructor */",
  "scope": "instance",
  "start": 70,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Foo",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Foo",
      },
    ],
    "string": "Foo",
  },
}
`;

exports[`./jsdoc/exports.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "An example of a server-side JavaScript module.",
  "end": 149,
  "examples": Array [
    "
   var g = require('hello/world').sayHello('Gracie');",
  ],
  "filename": "jsdoc/exports.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 149,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:hello/world",
  },
  "path": Array [],
  "raw": "/**
 * An example of a server-side JavaScript module.
 * @module hello/world
 * @example
 *    var g = require('hello/world').sayHello('Gracie');
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/exports.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Generate a greeting.",
  "end": 348,
  "export": "sayHello",
  "filename": "jsdoc/exports.js",
  "ignore": false,
  "isAsync": false,
  "isExport": true,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 348,
      "line": 15,
    },
    "start": Position {
      "column": 0,
      "index": 151,
      "line": 8,
    },
  },
  "member": "sayHello",
  "memberOf": "exports",
  "name": "sayHello",
  "params": Array [
    Object {
      "description": "To whom we say hello.",
      "name": "subject",
      "optional": true,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "sayHello",
    },
  ],
  "raw": "/**
 * Generate a greeting.
 * @param {string} [subject=\\"world\\"] To whom we say hello.
 * @returns {string}
 */",
  "returns": Object {
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "string",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "string",
        },
      ],
      "string": "string",
    },
  },
  "start": 151,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exports.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Generate a morose farewell.",
  "end": 573,
  "export": "default",
  "filename": "jsdoc/exports.js",
  "ignore": false,
  "isAsync": false,
  "isDefaultExport": true,
  "isExport": true,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 573,
      "line": 24,
    },
    "start": Position {
      "column": 0,
      "index": 350,
      "line": 17,
    },
  },
  "member": "sayGoodbye",
  "memberOf": "module.exports",
  "name": "sayGoodbye",
  "params": Array [
    Object {
      "description": "To whom we say goodbye.",
      "name": "subject",
      "optional": true,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "module",
    },
    Object {
      "name": "exports",
    },
    Object {
      "name": "sayGoodbye",
    },
  ],
  "raw": "/**
 * Generate a morose farewell.
 * @param {string} [subject=\\"world\\"] To whom we say goodbye.
 * @returns {string}
 */",
  "returns": Object {
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "string",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "string",
        },
      ],
      "string": "string",
    },
  },
  "start": 350,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exportstag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A module representing a shirt.",
  "end": 362,
  "filename": "jsdoc/exportstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 362,
      "line": 17,
    },
    "start": Position {
      "column": 3,
      "index": 24,
      "line": 2,
    },
  },
  "member": "shirt",
  "mutable": true,
  "name": "shirt",
  "params": Array [],
  "path": Array [
    Object {
      "name": "shirt",
    },
  ],
  "properties": Array [
    Object {
      "description": "A property of the module.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "shirt",
        },
      ],
      "tags": Array [],
    },
    Object {
      "description": "",
      "ignore": false,
      "isConstructor": true,
      "kind": "constructor",
      "path": Array [
        Object {
          "name": "shirt",
        },
      ],
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @constructor */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@constructor",
                "type": "",
              },
            },
          ],
          "tag": "constructor",
          "type": "",
        },
      ],
    },
  ],
  "raw": "/**
        A module representing a shirt.
        @exports my/shirt
        @version 1.0
     */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 24,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
  "version": "1.0",
}
`;

exports[`./jsdoc/exportstag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A property of the module.",
  "end": 204,
  "filename": "jsdoc/exportstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 22,
      "index": 204,
      "line": 10,
    },
    "start": Position {
      "column": 8,
      "index": 149,
      "line": 9,
    },
  },
  "member": "color",
  "memberOf": "shirt",
  "mutable": true,
  "name": "color",
  "params": Array [],
  "path": Array [
    Object {
      "name": "shirt",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "A property of the module.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "color: \\"black\\"",
      "ctx": Object {
        "kind": "property",
        "member": "color",
        "memberOf": undefined,
        "name": "color",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
        "value": "black",
      },
      "description": "A property of the module.",
      "end": 204,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 22,
          "index": 204,
          "line": 10,
        },
        "start": Position {
          "column": 8,
          "index": 149,
          "line": 9,
        },
      },
      "member": "color",
      "memberOf": undefined,
      "name": "color",
      "path": Array [],
      "raw": "/** A property of the module. */",
      "start": 149,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
      "value": "black",
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "isConstructor": true,
        "kind": "constructor",
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @constructor */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "",
                  "tag": "@constructor",
                  "type": "",
                },
              },
            ],
            "tag": "constructor",
            "type": "",
          },
        ],
      },
      "code": "Turtleneck: function (size) {
  this.size = size;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "Turtleneck",
        "memberOf": undefined,
        "name": "Turtleneck",
        "params": Array [
          Object {
            "member": "size",
            "name": "size",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 355,
      "ignore": false,
      "isAsync": false,
      "isConstructor": true,
      "isGenerator": false,
      "kind": "constructor",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 355,
          "line": 16,
        },
        "start": Position {
          "column": 8,
          "index": 215,
          "line": 12,
        },
      },
      "member": "Turtleneck",
      "memberOf": undefined,
      "name": "Turtleneck",
      "params": Array [
        Object {
          "member": "size",
          "name": "size",
        },
      ],
      "path": Array [],
      "raw": "/** @constructor */",
      "start": 215,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @constructor */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@constructor",
                "type": "",
              },
            },
          ],
          "tag": "constructor",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "A property of the class.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.size = size;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "size",
        "memberOf": "this",
        "name": "size",
        "params": Array [
          Object {
            "member": "size",
            "name": "size",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "A property of the class.",
      "end": 345,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 29,
          "index": 345,
          "line": 15,
        },
        "start": Position {
          "column": 12,
          "index": 284,
          "line": 14,
        },
      },
      "member": "size",
      "memberOf": "this",
      "name": "size",
      "params": Array [
        Object {
          "member": "size",
          "name": "size",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "size",
        },
      ],
      "raw": "/** A property of the class. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 284,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** A property of the module. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 149,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "black",
}
`;

exports[`./jsdoc/exportstag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 355,
  "filename": "jsdoc/exportstag.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 355,
      "line": 16,
    },
    "start": Position {
      "column": 8,
      "index": 215,
      "line": 12,
    },
  },
  "member": "Turtleneck",
  "memberOf": "shirt",
  "mutable": true,
  "name": "Turtleneck",
  "params": Array [
    Object {
      "member": "size",
      "name": "size",
    },
  ],
  "path": Array [
    Object {
      "name": "shirt",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "A property of the module.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "color: \\"black\\"",
      "ctx": Object {
        "kind": "property",
        "member": "color",
        "memberOf": undefined,
        "name": "color",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
        "value": "black",
      },
      "description": "A property of the module.",
      "end": 204,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 22,
          "index": 204,
          "line": 10,
        },
        "start": Position {
          "column": 8,
          "index": 149,
          "line": 9,
        },
      },
      "member": "color",
      "memberOf": undefined,
      "name": "color",
      "path": Array [],
      "raw": "/** A property of the module. */",
      "start": 149,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
      "value": "black",
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "isConstructor": true,
        "kind": "constructor",
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @constructor */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "",
                  "tag": "@constructor",
                  "type": "",
                },
              },
            ],
            "tag": "constructor",
            "type": "",
          },
        ],
      },
      "code": "Turtleneck: function (size) {
  this.size = size;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "Turtleneck",
        "memberOf": undefined,
        "name": "Turtleneck",
        "params": Array [
          Object {
            "member": "size",
            "name": "size",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 355,
      "ignore": false,
      "isAsync": false,
      "isConstructor": true,
      "isGenerator": false,
      "kind": "constructor",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 355,
          "line": 16,
        },
        "start": Position {
          "column": 8,
          "index": 215,
          "line": 12,
        },
      },
      "member": "Turtleneck",
      "memberOf": undefined,
      "name": "Turtleneck",
      "params": Array [
        Object {
          "member": "size",
          "name": "size",
        },
      ],
      "path": Array [],
      "raw": "/** @constructor */",
      "start": 215,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @constructor */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@constructor",
                "type": "",
              },
            },
          ],
          "tag": "constructor",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "A property of the class.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.size = size;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "size",
        "memberOf": "this",
        "name": "size",
        "params": Array [
          Object {
            "member": "size",
            "name": "size",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "A property of the class.",
      "end": 345,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 29,
          "index": 345,
          "line": 15,
        },
        "start": Position {
          "column": 12,
          "index": 284,
          "line": 14,
        },
      },
      "member": "size",
      "memberOf": "this",
      "name": "size",
      "params": Array [
        Object {
          "member": "size",
          "name": "size",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "size",
        },
      ],
      "raw": "/** A property of the class. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 284,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** @constructor */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 215,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exportstag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A property of the class.",
  "end": 345,
  "filename": "jsdoc/exportstag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 29,
      "index": 345,
      "line": 15,
    },
    "start": Position {
      "column": 12,
      "index": 284,
      "line": 14,
    },
  },
  "member": "size",
  "memberOf": "this",
  "mutable": true,
  "name": "size",
  "params": Array [
    Object {
      "member": "size",
      "name": "size",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "size",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "A property of the module.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "color: \\"black\\"",
      "ctx": Object {
        "kind": "property",
        "member": "color",
        "memberOf": undefined,
        "name": "color",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
        "value": "black",
      },
      "description": "A property of the module.",
      "end": 204,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 22,
          "index": 204,
          "line": 10,
        },
        "start": Position {
          "column": 8,
          "index": 149,
          "line": 9,
        },
      },
      "member": "color",
      "memberOf": undefined,
      "name": "color",
      "path": Array [],
      "raw": "/** A property of the module. */",
      "start": 149,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
      "value": "black",
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "isConstructor": true,
        "kind": "constructor",
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @constructor */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "",
                  "tag": "@constructor",
                  "type": "",
                },
              },
            ],
            "tag": "constructor",
            "type": "",
          },
        ],
      },
      "code": "Turtleneck: function (size) {
  this.size = size;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "Turtleneck",
        "memberOf": undefined,
        "name": "Turtleneck",
        "params": Array [
          Object {
            "member": "size",
            "name": "size",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 355,
      "ignore": false,
      "isAsync": false,
      "isConstructor": true,
      "isGenerator": false,
      "kind": "constructor",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 355,
          "line": 16,
        },
        "start": Position {
          "column": 8,
          "index": 215,
          "line": 12,
        },
      },
      "member": "Turtleneck",
      "memberOf": undefined,
      "name": "Turtleneck",
      "params": Array [
        Object {
          "member": "size",
          "name": "size",
        },
      ],
      "path": Array [],
      "raw": "/** @constructor */",
      "start": 215,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @constructor */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@constructor",
                "type": "",
              },
            },
          ],
          "tag": "constructor",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "A property of the class.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.size = size;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "size",
        "memberOf": "this",
        "name": "size",
        "params": Array [
          Object {
            "member": "size",
            "name": "size",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "A property of the class.",
      "end": 345,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 29,
          "index": 345,
          "line": 15,
        },
        "start": Position {
          "column": 12,
          "index": 284,
          "line": 14,
        },
      },
      "member": "size",
      "memberOf": "this",
      "name": "size",
      "params": Array [
        Object {
          "member": "size",
          "name": "size",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "size",
        },
      ],
      "raw": "/** A property of the class. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 284,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** A property of the class. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 284,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exportstag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A module representing a coat.",
  "end": 308,
  "filename": "jsdoc/exportstag2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 308,
      "line": 13,
    },
    "start": Position {
      "column": 7,
      "index": 53,
      "line": 4,
    },
  },
  "member": "myModule",
  "mutable": true,
  "name": "myModule",
  "params": Array [
    Object {
      "member": "wool",
      "name": "wool",
    },
  ],
  "path": Array [
    Object {
      "name": "myModule",
    },
  ],
  "raw": "/**
            A module representing a coat.
            @exports my/coat
            @requires my/buttons
            @version 1.0
         */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 53,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
  "version": "1.0",
}
`;

exports[`./jsdoc/exportstag2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 298,
  "filename": "jsdoc/exportstag2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 29,
      "index": 298,
      "line": 12,
    },
    "start": Position {
      "column": 12,
      "index": 250,
      "line": 11,
    },
  },
  "member": "wool",
  "memberOf": "this",
  "mutable": true,
  "name": "wool",
  "params": Array [
    Object {
      "member": "wool",
      "name": "wool",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "wool",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 250,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exportstag3.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Utility functions to ease working with DOM elements.",
  "end": 501,
  "filename": "jsdoc/exportstag3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 501,
      "line": 21,
    },
    "start": Position {
      "column": 4,
      "index": 12,
      "line": 2,
    },
  },
  "params": Array [],
  "path": Array [],
  "raw": "/**
        Utility functions to ease working with DOM elements.
        @exports html/utils
     */",
  "start": 12,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exportstag3.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Get the value of a property on an element.",
  "end": 318,
  "filename": "jsdoc/exportstag3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 13,
      "index": 318,
      "line": 12,
    },
    "start": Position {
      "column": 12,
      "index": 168,
      "line": 9,
    },
  },
  "member": "getStyleProperty",
  "memberOf": "exports",
  "mutable": true,
  "name": "getStyleProperty",
  "params": Array [
    Object {
      "member": "element",
      "name": "element",
    },
    Object {
      "member": "propertyName",
      "name": "propertyName",
    },
  ],
  "path": Array [
    Object {
      "name": "exports",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Get the value of a property on an element.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "getStyleProperty: function (element, propertyName) {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "getStyleProperty",
        "memberOf": undefined,
        "name": "getStyleProperty",
        "params": Array [
          Object {
            "member": "element",
            "name": "element",
          },
          Object {
            "member": "propertyName",
            "name": "propertyName",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Get the value of a property on an element.",
      "end": 318,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 13,
          "index": 318,
          "line": 12,
        },
        "start": Position {
          "column": 12,
          "index": 168,
          "line": 9,
        },
      },
      "member": "getStyleProperty",
      "memberOf": undefined,
      "name": "getStyleProperty",
      "params": Array [
        Object {
          "member": "element",
          "name": "element",
        },
        Object {
          "member": "propertyName",
          "name": "propertyName",
        },
      ],
      "path": Array [],
      "raw": "/** Get the value of a property on an element. */",
      "start": 168,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Get the value of a property on an element. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 168,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exportstag3.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Determine if an element is in the document head.",
  "end": 470,
  "export": "isInHead",
  "filename": "jsdoc/exportstag3.js",
  "ignore": false,
  "isAsync": false,
  "isExport": true,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 470,
      "line": 18,
    },
    "start": Position {
      "column": 8,
      "index": 339,
      "line": 15,
    },
  },
  "member": "isInHead",
  "memberOf": "exports",
  "name": "isInHead",
  "params": Array [
    Object {
      "member": "element",
      "name": "element",
    },
  ],
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "isInHead",
    },
  ],
  "raw": "/** Determine if an element is in the document head. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 339,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exportstag4.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 219,
  "filename": "jsdoc/exportstag4.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 4,
      "index": 219,
      "line": 11,
    },
    "start": Position {
      "column": 3,
      "index": 11,
      "line": 2,
    },
  },
  "params": Array [],
  "path": Array [],
  "raw": "/** @exports some/module */",
  "start": 11,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exportstag4.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 105,
  "filename": "jsdoc/exportstag4.js",
  "fnName": "myClass",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 28,
      "index": 105,
      "line": 5,
    },
    "start": Position {
      "column": 7,
      "index": 63,
      "line": 4,
    },
  },
  "name": "myClass",
  "params": Array [],
  "path": Array [
    Object {
      "name": "myClass",
    },
  ],
  "raw": "/** @class */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 63,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exportstag4.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Some method",
  "end": 184,
  "filename": "jsdoc/exportstag4.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 51,
      "index": 184,
      "line": 8,
    },
    "start": Position {
      "column": 7,
      "index": 114,
      "line": 7,
    },
  },
  "member": "myMethod",
  "memberOf": "myClass.prototype",
  "name": "myMethod",
  "params": Array [],
  "path": Array [
    Object {
      "name": "myClass",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "myMethod",
    },
  ],
  "raw": "/** Some method */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "scope": "instance",
  "start": 114,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exportstag5.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 278,
  "filename": "jsdoc/exportstag5.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 278,
      "line": 11,
    },
    "start": Position {
      "column": 4,
      "index": 71,
      "line": 4,
    },
  },
  "member": "Foo",
  "mutable": true,
  "name": "Foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "raw": "/** @exports Foo */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 71,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exportstag5.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 271,
  "filename": "jsdoc/exportstag5.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "lends": Array [],
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 271,
      "line": 10,
    },
    "start": Position {
      "column": 8,
      "index": 128,
      "line": 6,
    },
  },
  "member": "Foo",
  "mutable": true,
  "name": "Foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "properties": Array [
    Object {
      "description": "This should be in the Foo module doc.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Foo",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** @lends module:Foo.prototype */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 128,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/exportstag5.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "This should be in the Foo module doc.",
  "end": 261,
  "filename": "jsdoc/exportstag5.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 31,
      "index": 261,
      "line": 9,
    },
    "start": Position {
      "column": 12,
      "index": 185,
      "line": 8,
    },
  },
  "member": "bar",
  "memberOf": "Foo",
  "mutable": true,
  "name": "bar",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "This should be in the Foo module doc.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "bar: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "bar",
        "memberOf": undefined,
        "name": "bar",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "This should be in the Foo module doc.",
      "end": 261,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 31,
          "index": 261,
          "line": 9,
        },
        "start": Position {
          "column": 12,
          "index": 185,
          "line": 8,
        },
      },
      "member": "bar",
      "memberOf": undefined,
      "name": "bar",
      "params": Array [],
      "path": Array [],
      "raw": "/** This should be in the Foo module doc. */",
      "start": 185,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** This should be in the Foo module doc. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 185,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exportstag6.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A module representing a shirt.",
  "end": 107,
  "filename": "jsdoc/exportstag6.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 11,
      "index": 107,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 17,
      "line": 2,
    },
  },
  "member": "shirtModule",
  "name": "shirtModule",
  "params": Array [],
  "path": Array [],
  "raw": "/**
 * A module representing a shirt.
 * @exports my/shirt
 * @version 1.0
 */",
  "start": 17,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
  "version": "1.0",
}
`;

exports[`./jsdoc/exportstag6.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A property of the module.",
  "end": 180,
  "filename": "jsdoc/exportstag6.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 32,
      "index": 180,
      "line": 9,
    },
    "start": Position {
      "column": 4,
      "index": 115,
      "line": 8,
    },
  },
  "member": "color",
  "memberOf": "shirtModule",
  "name": "color",
  "params": Array [
    Object {
      "description": "A module representing a shirt.",
      "ignore": false,
      "tags": Array [
        Object {
          "description": "",
          "name": "my/shirt",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": " * @exports my/shirt",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "my/shirt",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": " ",
                "tag": "@exports",
                "type": "",
              },
            },
          ],
          "tag": "exports",
          "type": "",
        },
        Object {
          "description": "",
          "name": "1.0",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": " * @version 1.0",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "1.0",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": " ",
                "tag": "@version",
                "type": "",
              },
            },
            Object {
              "number": 4,
              "source": " */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": " ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "version",
          "type": "",
        },
      ],
      "version": "1.0",
    },
  ],
  "path": Array [
    Object {
      "name": "shirtModule",
    },
    Object {
      "name": "color",
    },
  ],
  "raw": "/** A property of the module. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 115,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "black",
}
`;

exports[`./jsdoc/exportstag6.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 324,
  "filename": "jsdoc/exportstag6.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 324,
      "line": 15,
    },
    "start": Position {
      "column": 4,
      "index": 186,
      "line": 11,
    },
  },
  "member": "Turtleneck",
  "memberOf": "shirtModule",
  "name": "Turtleneck",
  "params": Array [
    Object {
      "member": "size",
      "name": "size",
    },
  ],
  "path": Array [
    Object {
      "name": "shirtModule",
    },
    Object {
      "name": "Turtleneck",
    },
  ],
  "raw": "/** @constructor */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 186,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exportstag6.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A property of the class.",
  "end": 317,
  "filename": "jsdoc/exportstag6.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 25,
      "index": 317,
      "line": 14,
    },
    "start": Position {
      "column": 8,
      "index": 260,
      "line": 13,
    },
  },
  "member": "size",
  "memberOf": "this",
  "name": "size",
  "params": Array [
    Object {
      "member": "size",
      "name": "size",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "size",
    },
  ],
  "raw": "/** A property of the class. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 260,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exportstag7.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 62,
  "filename": "jsdoc/exportstag7.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 22,
      "index": 62,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 15,
      "line": 3,
    },
  },
  "member": "exports",
  "mutable": true,
  "name": "exports",
  "path": Array [
    Object {
      "name": "myShirt",
    },
  ],
  "raw": "/** @exports my/shirt */",
  "start": 15,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/exportstag7.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A property of the module.",
  "end": 121,
  "filename": "jsdoc/exportstag7.js",
  "ignore": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 24,
      "index": 121,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 64,
      "line": 6,
    },
  },
  "member": "color",
  "memberOf": "myShirt",
  "name": "color",
  "path": Array [
    Object {
      "name": "myShirt",
    },
    Object {
      "name": "color",
    },
  ],
  "raw": "/** A property of the module. */",
  "start": 64,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "black",
}
`;

exports[`./jsdoc/exportstag7.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 241,
  "filename": "jsdoc/exportstag7.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 241,
      "line": 13,
    },
    "start": Position {
      "column": 0,
      "index": 123,
      "line": 9,
    },
  },
  "member": "Turtleneck",
  "memberOf": "myShirt",
  "name": "Turtleneck",
  "params": Array [
    Object {
      "member": "size",
      "name": "size",
    },
  ],
  "path": Array [
    Object {
      "name": "myShirt",
    },
    Object {
      "name": "Turtleneck",
    },
  ],
  "raw": "/** @constructor */",
  "start": 123,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exportstag7.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A property of the class.",
  "end": 238,
  "filename": "jsdoc/exportstag7.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 21,
      "index": 238,
      "line": 12,
    },
    "start": Position {
      "column": 4,
      "index": 185,
      "line": 11,
    },
  },
  "member": "size",
  "memberOf": "this",
  "name": "size",
  "params": Array [
    Object {
      "member": "size",
      "name": "size",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "size",
    },
  ],
  "raw": "/** A property of the class. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 185,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exportstag7.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Iron the turtleneck.",
  "end": 321,
  "filename": "jsdoc/exportstag7.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 50,
      "index": 321,
      "line": 16,
    },
    "start": Position {
      "column": 0,
      "index": 243,
      "line": 15,
    },
  },
  "member": "iron",
  "memberOf": "myShirt.Turtleneck.prototype",
  "name": "iron",
  "params": Array [],
  "path": Array [
    Object {
      "name": "myShirt",
    },
    Object {
      "name": "Turtleneck",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "iron",
    },
  ],
  "raw": "/** Iron the turtleneck. */",
  "scope": "instance",
  "start": 243,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exportstag8.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 69,
  "filename": "jsdoc/exportstag8.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 22,
      "index": 69,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 15,
      "line": 3,
    },
  },
  "member": "exports",
  "mutable": true,
  "name": "exports",
  "path": Array [
    Object {
      "name": "myShirt",
    },
  ],
  "raw": "/** @exports module:my/shirt */",
  "start": 15,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/exporttag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "My class.",
  "end": 72,
  "filename": "jsdoc/exporttag.js",
  "fnName": "MyClass",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isExport": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 21,
      "index": 72,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "MyClass",
  "params": Array [],
  "path": Array [
    Object {
      "name": "MyClass",
    },
  ],
  "raw": "/**
 * My class.
 *
 * @constructor
 * @export
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/exporttag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "My public method.",
  "end": 166,
  "filename": "jsdoc/exporttag.js",
  "ignore": false,
  "isAsync": false,
  "isExport": true,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 49,
      "index": 166,
      "line": 14,
    },
    "start": Position {
      "column": 0,
      "index": 74,
      "line": 9,
    },
  },
  "member": "myPublicMethod",
  "memberOf": "MyClass.prototype",
  "name": "myPublicMethod",
  "params": Array [],
  "path": Array [
    Object {
      "name": "MyClass",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "myPublicMethod",
    },
  ],
  "raw": "/**
 * My public method.
 *
 * @export
 */",
  "scope": "instance",
  "start": 74,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/externaltag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The built in string object.",
  "end": 157,
  "filename": "jsdoc/externaltag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 157,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "raw": "/**
 * The built in string object.
 * @external String
 * @see {@link https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String String}
 */",
  "see": "",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/externaltag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Adds a new method to the built-in string.",
  "end": 354,
  "examples": Array [
    "
var greeting = new String('hello world');
console.log( greeting.rot13() ); // uryyb jbeyq",
  ],
  "filename": "jsdoc/externaltag.js",
  "ignore": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 354,
      "line": 13,
    },
    "start": Position {
      "column": 0,
      "index": 159,
      "line": 7,
    },
  },
  "memberOf": "external:String",
  "name": "rot13",
  "raw": "/**
 * Adds a new method to the built-in string.
 * @function external:String#rot13
 * @example
 * var greeting = new String('hello world');
 * console.log( greeting.rot13() ); // uryyb jbeyq
 */",
  "start": 159,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/externaltag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The jQuery plugin namespace.",
  "end": 501,
  "filename": "jsdoc/externaltag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 501,
      "line": 19,
    },
    "start": Position {
      "column": 0,
      "index": 356,
      "line": 15,
    },
  },
  "raw": "/**
 * The jQuery plugin namespace.
 * @external \\"jQuery.fn\\"
 * @see {@link http://docs.jquery.com/Plugins/Authoring The jQuery Plugin Guide}
 */",
  "see": "",
  "start": 356,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/externaltag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A jQuery plugin to make stars fly around your home page.",
  "end": 614,
  "filename": "jsdoc/externaltag.js",
  "ignore": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 614,
      "line": 24,
    },
    "start": Position {
      "column": 0,
      "index": 503,
      "line": 21,
    },
  },
  "memberOf": "external:\\"jQuery.fn\\"",
  "name": "starfairy",
  "raw": "/**
 * A jQuery plugin to make stars fly around your home page.
 * @function external:\\"jQuery.fn\\".starfairy
 */",
  "start": 503,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/externaltag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Namespace provided by the browser.",
  "end": 132,
  "filename": "jsdoc/externaltag2.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 132,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "raw": "/**
    Namespace provided by the browser.
    @external XMLHttpRequest
    @see https://developer.mozilla.org/en/xmlhttprequest
 */",
  "see": "https://developer.mozilla.org/en/xmlhttprequest",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/externaltag2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 285,
  "extends": Array [
    Object {
      "name": "external:XMLHttpRequest",
    },
  ],
  "filename": "jsdoc/externaltag2.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 285,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 134,
      "line": 7,
    },
  },
  "name": "EncryptedRequest",
  "raw": "/**
    Extends the built in XMLHttpRequest to send data encoded with a secret key.
    @class EncryptedRequest
    @extends external:XMLHttpRequest
*/",
  "start": 134,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/externaltag3.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The built in string object.",
  "end": 159,
  "filename": "jsdoc/externaltag3.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 159,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "raw": "/**
 * The built in string object.
 * @external {String}
 * @see {@link https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/String String}
 */",
  "see": "",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/externaltag3.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Adds a new method to the built-in string.",
  "end": 356,
  "examples": Array [
    "
var greeting = new String('hello world');
console.log( greeting.rot13() ); // uryyb jbeyq",
  ],
  "filename": "jsdoc/externaltag3.js",
  "ignore": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 356,
      "line": 13,
    },
    "start": Position {
      "column": 0,
      "index": 161,
      "line": 7,
    },
  },
  "memberOf": "external:String",
  "name": "rot13",
  "raw": "/**
 * Adds a new method to the built-in string.
 * @function external:String#rot13
 * @example
 * var greeting = new String('hello world');
 * console.log( greeting.rot13() ); // uryyb jbeyq
 */",
  "start": 161,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/externaltag3.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 394,
  "filename": "jsdoc/externaltag3.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 394,
      "line": 17,
    },
    "start": Position {
      "column": 0,
      "index": 358,
      "line": 15,
    },
  },
  "raw": "/**
 * @external {\\"foo.bar.baz\\"}
 */",
  "start": 358,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/externaltag3.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Blah blah",
  "end": 461,
  "filename": "jsdoc/externaltag3.js",
  "ignore": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 4,
      "index": 461,
      "line": 22,
    },
    "start": Position {
      "column": 1,
      "index": 397,
      "line": 19,
    },
  },
  "memberOf": "external:\\"foo.bar.baz\\"",
  "name": "blah",
  "raw": "/**
  * Blah blah
  * @function external:\\"foo.bar.baz\\"#blah
  */",
  "start": 397,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/externstag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "This is an externs file.",
  "end": 50,
  "filename": "jsdoc/externstag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 50,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "raw": "/**
 * This is an externs file.
 *
 * @externs
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/file.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 78,
  "filename": "jsdoc/file.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 78,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "path": Array [],
  "raw": "/**
 * @overview This is a file doclet.
 * @copyright Michael Mathews 2011
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/fileoverviewtag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "of this file.",
  "end": 47,
  "filename": "jsdoc/fileoverviewtag.js",
  "ignore": false,
  "isFile": true,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 47,
      "line": 3,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "raw": "/**
 * @fileoverview Overview of this file.
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/funcExpression.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 130,
  "filename": "jsdoc/funcExpression.js",
  "fnName": "Bar",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 130,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "Foo",
  "mutable": true,
  "name": "Foo",
  "params": Array [
    Object {
      "member": "a",
      "name": "a",
    },
  ],
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "raw": "/** @class */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/funcExpression.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 82,
  "filename": "jsdoc/funcExpression.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 82,
      "line": 4,
    },
    "start": Position {
      "column": 4,
      "index": 46,
      "line": 3,
    },
  },
  "member": "var1",
  "mutable": true,
  "name": "var1",
  "params": Array [
    Object {
      "member": "a",
      "name": "a",
    },
  ],
  "path": Array [
    Object {
      "name": "var1",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 46,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 1,
}
`;

exports[`./jsdoc/funcExpression.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 127,
  "filename": "jsdoc/funcExpression.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 21,
      "index": 127,
      "line": 6,
    },
    "start": Position {
      "column": 4,
      "index": 87,
      "line": 5,
    },
  },
  "member": "member1",
  "memberOf": "this",
  "mutable": true,
  "name": "member1",
  "params": Array [
    Object {
      "member": "a",
      "name": "a",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "member1",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 87,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 2,
}
`;

exports[`./jsdoc/funcExpression2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 126,
  "filename": "jsdoc/funcExpression2.js",
  "fnName": "Bar",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 126,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Foo",
  "params": Array [
    Object {
      "member": "a",
      "name": "a",
    },
  ],
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "raw": "/** @class */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/funcExpression2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 78,
  "filename": "jsdoc/funcExpression2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 78,
      "line": 4,
    },
    "start": Position {
      "column": 4,
      "index": 42,
      "line": 3,
    },
  },
  "member": "var1",
  "mutable": true,
  "name": "var1",
  "params": Array [
    Object {
      "member": "a",
      "name": "a",
    },
  ],
  "path": Array [
    Object {
      "name": "var1",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 42,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 1,
}
`;

exports[`./jsdoc/funcExpression2.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 123,
  "filename": "jsdoc/funcExpression2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 21,
      "index": 123,
      "line": 6,
    },
    "start": Position {
      "column": 4,
      "index": 83,
      "line": 5,
    },
  },
  "member": "member1",
  "memberOf": "this",
  "name": "member1",
  "params": Array [
    Object {
      "member": "a",
      "name": "a",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "member1",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 83,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 2,
}
`;

exports[`./jsdoc/funcExpression3.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 159,
  "filename": "jsdoc/funcExpression3.js",
  "fnName": "Bar",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 159,
      "line": 8,
    },
    "start": Position {
      "column": 4,
      "index": 11,
      "line": 2,
    },
  },
  "member": "Foo",
  "memberOf": "ns",
  "name": "Foo",
  "params": Array [
    Object {
      "member": "a",
      "name": "a",
    },
  ],
  "path": Array [
    Object {
      "name": "ns",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "kind": "class",
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @class */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "",
                  "tag": "@class",
                  "type": "",
                },
              },
            ],
            "tag": "class",
            "type": "",
          },
        ],
      },
      "code": "Foo: function Bar(a) {
  var var1 = 1;
  this.member1 = 2;
}",
      "ctx": Object {
        "fnName": "Bar",
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "Foo",
        "memberOf": undefined,
        "name": "Foo",
        "params": Array [
          Object {
            "member": "a",
            "name": "a",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 159,
      "fnName": "Bar",
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "class",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 159,
          "line": 8,
        },
        "start": Position {
          "column": 4,
          "index": 11,
          "line": 2,
        },
      },
      "member": "Foo",
      "memberOf": undefined,
      "name": "Foo",
      "params": Array [
        Object {
          "member": "a",
          "name": "a",
        },
      ],
      "path": Array [],
      "raw": "/** @class */",
      "start": 11,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @class */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@class",
                "type": "",
              },
            },
          ],
          "tag": "class",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "document me",
        "ignore": false,
        "tags": Array [],
      },
      "code": "var var1 = 1;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "function",
        "member": "var1",
        "memberOf": undefined,
        "mutable": true,
        "name": "var1",
        "params": Array [
          Object {
            "member": "a",
            "name": "a",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
        "value": 1,
      },
      "description": "document me",
      "end": 100,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "function",
      "loc": Object {
        "end": Position {
          "column": 21,
          "index": 100,
          "line": 5,
        },
        "start": Position {
          "column": 8,
          "index": 60,
          "line": 4,
        },
      },
      "member": "var1",
      "memberOf": undefined,
      "mutable": true,
      "name": "var1",
      "params": Array [
        Object {
          "member": "a",
          "name": "a",
        },
      ],
      "path": Array [
        Object {
          "name": "var1",
        },
      ],
      "raw": "/** document me */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 60,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 1,
    },
    Object {
      "cmt": Object {
        "description": "document me",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.member1 = 2;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "member1",
        "memberOf": "this",
        "name": "member1",
        "params": Array [
          Object {
            "member": "a",
            "name": "a",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
        "value": 2,
      },
      "description": "document me",
      "end": 153,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 25,
          "index": 153,
          "line": 7,
        },
        "start": Position {
          "column": 8,
          "index": 109,
          "line": 6,
        },
      },
      "member": "member1",
      "memberOf": "this",
      "name": "member1",
      "params": Array [
        Object {
          "member": "a",
          "name": "a",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "member1",
        },
      ],
      "raw": "/** document me */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 109,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 2,
    },
  ],
  "raw": "/** @class */",
  "start": 11,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/funcExpression3.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 100,
  "filename": "jsdoc/funcExpression3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 21,
      "index": 100,
      "line": 5,
    },
    "start": Position {
      "column": 8,
      "index": 60,
      "line": 4,
    },
  },
  "member": "var1",
  "memberOf": "ns",
  "mutable": true,
  "name": "var1",
  "params": Array [
    Object {
      "member": "a",
      "name": "a",
    },
  ],
  "path": Array [
    Object {
      "name": "var1",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "kind": "class",
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @class */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "",
                  "tag": "@class",
                  "type": "",
                },
              },
            ],
            "tag": "class",
            "type": "",
          },
        ],
      },
      "code": "Foo: function Bar(a) {
  var var1 = 1;
  this.member1 = 2;
}",
      "ctx": Object {
        "fnName": "Bar",
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "Foo",
        "memberOf": undefined,
        "name": "Foo",
        "params": Array [
          Object {
            "member": "a",
            "name": "a",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 159,
      "fnName": "Bar",
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "class",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 159,
          "line": 8,
        },
        "start": Position {
          "column": 4,
          "index": 11,
          "line": 2,
        },
      },
      "member": "Foo",
      "memberOf": undefined,
      "name": "Foo",
      "params": Array [
        Object {
          "member": "a",
          "name": "a",
        },
      ],
      "path": Array [],
      "raw": "/** @class */",
      "start": 11,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @class */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@class",
                "type": "",
              },
            },
          ],
          "tag": "class",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "document me",
        "ignore": false,
        "tags": Array [],
      },
      "code": "var var1 = 1;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "function",
        "member": "var1",
        "memberOf": undefined,
        "mutable": true,
        "name": "var1",
        "params": Array [
          Object {
            "member": "a",
            "name": "a",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
        "value": 1,
      },
      "description": "document me",
      "end": 100,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "function",
      "loc": Object {
        "end": Position {
          "column": 21,
          "index": 100,
          "line": 5,
        },
        "start": Position {
          "column": 8,
          "index": 60,
          "line": 4,
        },
      },
      "member": "var1",
      "memberOf": undefined,
      "mutable": true,
      "name": "var1",
      "params": Array [
        Object {
          "member": "a",
          "name": "a",
        },
      ],
      "path": Array [
        Object {
          "name": "var1",
        },
      ],
      "raw": "/** document me */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 60,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 1,
    },
    Object {
      "cmt": Object {
        "description": "document me",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.member1 = 2;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "member1",
        "memberOf": "this",
        "name": "member1",
        "params": Array [
          Object {
            "member": "a",
            "name": "a",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
        "value": 2,
      },
      "description": "document me",
      "end": 153,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 25,
          "index": 153,
          "line": 7,
        },
        "start": Position {
          "column": 8,
          "index": 109,
          "line": 6,
        },
      },
      "member": "member1",
      "memberOf": "this",
      "name": "member1",
      "params": Array [
        Object {
          "member": "a",
          "name": "a",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "member1",
        },
      ],
      "raw": "/** document me */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 109,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 2,
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 60,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 1,
}
`;

exports[`./jsdoc/funcExpression3.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 153,
  "filename": "jsdoc/funcExpression3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 25,
      "index": 153,
      "line": 7,
    },
    "start": Position {
      "column": 8,
      "index": 109,
      "line": 6,
    },
  },
  "member": "member1",
  "memberOf": "this",
  "name": "member1",
  "params": Array [
    Object {
      "member": "a",
      "name": "a",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "member1",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "kind": "class",
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @class */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "",
                  "tag": "@class",
                  "type": "",
                },
              },
            ],
            "tag": "class",
            "type": "",
          },
        ],
      },
      "code": "Foo: function Bar(a) {
  var var1 = 1;
  this.member1 = 2;
}",
      "ctx": Object {
        "fnName": "Bar",
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "Foo",
        "memberOf": undefined,
        "name": "Foo",
        "params": Array [
          Object {
            "member": "a",
            "name": "a",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 159,
      "fnName": "Bar",
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "class",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 159,
          "line": 8,
        },
        "start": Position {
          "column": 4,
          "index": 11,
          "line": 2,
        },
      },
      "member": "Foo",
      "memberOf": undefined,
      "name": "Foo",
      "params": Array [
        Object {
          "member": "a",
          "name": "a",
        },
      ],
      "path": Array [],
      "raw": "/** @class */",
      "start": 11,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @class */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@class",
                "type": "",
              },
            },
          ],
          "tag": "class",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "document me",
        "ignore": false,
        "tags": Array [],
      },
      "code": "var var1 = 1;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "function",
        "member": "var1",
        "memberOf": undefined,
        "mutable": true,
        "name": "var1",
        "params": Array [
          Object {
            "member": "a",
            "name": "a",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
        "value": 1,
      },
      "description": "document me",
      "end": 100,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "function",
      "loc": Object {
        "end": Position {
          "column": 21,
          "index": 100,
          "line": 5,
        },
        "start": Position {
          "column": 8,
          "index": 60,
          "line": 4,
        },
      },
      "member": "var1",
      "memberOf": undefined,
      "mutable": true,
      "name": "var1",
      "params": Array [
        Object {
          "member": "a",
          "name": "a",
        },
      ],
      "path": Array [
        Object {
          "name": "var1",
        },
      ],
      "raw": "/** document me */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 60,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 1,
    },
    Object {
      "cmt": Object {
        "description": "document me",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.member1 = 2;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "member1",
        "memberOf": "this",
        "name": "member1",
        "params": Array [
          Object {
            "member": "a",
            "name": "a",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
        "value": 2,
      },
      "description": "document me",
      "end": 153,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 25,
          "index": 153,
          "line": 7,
        },
        "start": Position {
          "column": 8,
          "index": 109,
          "line": 6,
        },
      },
      "member": "member1",
      "memberOf": "this",
      "name": "member1",
      "params": Array [
        Object {
          "member": "a",
          "name": "a",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "member1",
        },
      ],
      "raw": "/** document me */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 109,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 2,
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 109,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 2,
}
`;

exports[`./jsdoc/functiontag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 35,
  "filename": "jsdoc/functiontag.js",
  "fnName": "Foo",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 35,
      "line": 3,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "raw": "/** @func Foo */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/functiontag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 70,
  "filename": "jsdoc/functiontag.js",
  "fnName": "Bar",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 70,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 37,
      "line": 5,
    },
  },
  "name": "Bar",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Bar",
    },
  ],
  "raw": "/** @method */",
  "start": 37,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/generators.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Generate unique IDs starting at 0.",
  "end": 149,
  "filename": "jsdoc/generators.js",
  "fnName": "startsAt0",
  "ignore": false,
  "isAsync": false,
  "isGenerator": true,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 149,
      "line": 9,
    },
    "start": Position {
      "column": 0,
      "index": 15,
      "line": 3,
    },
  },
  "name": "startsAt0",
  "params": Array [],
  "path": Array [
    Object {
      "name": "startsAt0",
    },
  ],
  "raw": "/** Generate unique IDs starting at 0. */",
  "start": 15,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/generators.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Generate unique IDs starting at 1.",
  "end": 302,
  "filename": "jsdoc/generators.js",
  "fnName": "startsAt1",
  "ignore": false,
  "isAsync": false,
  "isGenerator": true,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 302,
      "line": 17,
    },
    "start": Position {
      "column": 0,
      "index": 151,
      "line": 11,
    },
  },
  "member": "startsAt1",
  "mutable": true,
  "name": "startsAt1",
  "params": Array [],
  "path": Array [
    Object {
      "name": "startsAt1",
    },
  ],
  "raw": "/** Generate unique IDs starting at 1. */",
  "start": 151,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/generators.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Generator class.",
  "end": 502,
  "filename": "jsdoc/generators.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 502,
      "line": 28,
    },
    "start": Position {
      "column": 0,
      "index": 304,
      "line": 19,
    },
  },
  "name": "Generator",
  "path": Array [
    Object {
      "name": "Generator",
    },
  ],
  "properties": Array [
    Object {
      "description": "Generate unique IDs starting at 2.",
      "filename": "jsdoc/generators.js",
      "ignore": false,
      "isAsync": false,
      "isGenerator": true,
      "kind": "method",
      "member": "startsAt2",
      "memberOf": "Generator.prototype",
      "name": "startsAt2",
      "params": Array [],
      "scope": "instance",
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Generator",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Generator",
          },
        ],
        "string": "Generator",
      },
    },
  ],
  "raw": "/** Generator class. */",
  "start": 304,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Generator",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Generator",
      },
    ],
    "string": "Generator",
  },
}
`;

exports[`./jsdoc/generators.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Generate unique IDs starting at 2.",
  "end": 500,
  "filename": "jsdoc/generators.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": true,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 500,
      "line": 27,
    },
    "start": Position {
      "column": 4,
      "index": 350,
      "line": 21,
    },
  },
  "member": "startsAt2",
  "memberOf": "Generator.prototype",
  "name": "startsAt2",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Generator",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "startsAt2",
    },
  ],
  "raw": "/** Generate unique IDs starting at 2. */",
  "scope": "instance",
  "start": 350,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Generator",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Generator",
      },
    ],
    "string": "Generator",
  },
}
`;

exports[`./jsdoc/generatortag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Sample generator function.",
  "end": 87,
  "filename": "jsdoc/generatortag.js",
  "ignore": false,
  "isGenerator": true,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 87,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 15,
      "line": 3,
    },
  },
  "name": "idMaker",
  "raw": "/**
 * Sample generator function.
 * @function idMaker
 * @generator
 */",
  "start": 15,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/getset.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 685,
  "filename": "jsdoc/getset.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 685,
      "line": 37,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "Person",
  "mutable": true,
  "name": "Person",
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "raw": "/** @class */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/getset.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 682,
  "filename": "jsdoc/getset.js",
  "ignore": false,
  "kind": "object",
  "lends": Array [],
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 682,
      "line": 36,
    },
    "start": Position {
      "column": 4,
      "index": 42,
      "line": 3,
    },
  },
  "member": "Person",
  "mutable": true,
  "name": "Person",
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "description": "Set up initial values.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Person",
        },
      ],
      "tags": Array [],
    },
    Object {
      "description": "Speak a message.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Person",
        },
      ],
      "tags": Array [],
    },
    Object {
      "description": "The name of the person.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Person",
        },
      ],
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "         * @type {string}",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@type",
                "type": "{string}",
              },
            },
            Object {
              "number": 3,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "type",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "description": "",
      "ignore": false,
      "params": Array [
        Object {
          "name": "val",
          "optional": false,
          "type": Array [],
        },
      ],
      "path": Array [
        Object {
          "name": "Person",
        },
      ],
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "         * @type {string}",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@type",
                "type": "{string}",
              },
            },
          ],
          "tag": "type",
          "type": "string",
        },
        Object {
          "description": "",
          "name": "val",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "         * @param val",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "val",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@param",
                "type": "",
              },
            },
            Object {
              "number": 3,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "description": "",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Person",
        },
      ],
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "         * @type {number}",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@type",
                "type": "{number}",
              },
            },
            Object {
              "number": 2,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "type",
          "type": "number",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "raw": "/** @lends Person# */",
  "start": 42,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/getset.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Set up initial values.",
  "end": 154,
  "filename": "jsdoc/getset.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 154,
      "line": 7,
    },
    "start": Position {
      "column": 8,
      "index": 78,
      "line": 5,
    },
  },
  "member": "initialize",
  "memberOf": "Person",
  "mutable": true,
  "name": "initialize",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Set up initial values.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "initialize: function (name) {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Set up initial values.",
      "end": 154,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 154,
          "line": 7,
        },
        "start": Position {
          "column": 8,
          "index": 78,
          "line": 5,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** Set up initial values. */",
      "start": 78,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Speak a message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "say: function (message) {
  return this.name + \\" says: \\" + message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message.",
      "end": 283,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 283,
          "line": 12,
        },
        "start": Position {
          "column": 8,
          "index": 165,
          "line": 9,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [],
      "raw": "/** Speak a message. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 165,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "         * @type {string}",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "         ",
                  "tag": "@type",
                  "type": "{string}",
                },
              },
              Object {
                "number": 3,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "type",
            "type": "string",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
      },
      "code": "get name() {
  return this._name;
}",
      "ctx": Object {
        "isGetter": true,
        "kind": "get",
        "member": "name",
        "memberOf": undefined,
        "name": "name",
      },
      "description": "The name of the person.",
      "end": 432,
      "ignore": false,
      "isGetter": true,
      "kind": "get",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 432,
          "line": 20,
        },
        "start": Position {
          "column": 8,
          "index": 294,
          "line": 14,
        },
      },
      "member": "name",
      "memberOf": undefined,
      "name": "name",
      "path": Array [],
      "raw": "/**
         * The name of the person.
         * @type {string}
         */",
      "start": 294,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "         * @type {string}",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@type",
                "type": "{string}",
              },
            },
            Object {
              "number": 3,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "type",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "params": Array [
          Object {
            "name": "val",
            "optional": false,
            "type": Array [],
          },
        ],
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "         * @type {string}",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "         ",
                  "tag": "@type",
                  "type": "{string}",
                },
              },
            ],
            "tag": "type",
            "type": "string",
          },
          Object {
            "description": "",
            "name": "val",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "         * @param val",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "val",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "         ",
                  "tag": "@param",
                  "type": "",
                },
              },
              Object {
                "number": 3,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
      },
      "code": "set name(val) {
  this._name = name;
}",
      "ctx": Object {
        "isSetter": true,
        "kind": "set",
        "member": "name",
        "memberOf": undefined,
        "name": "name",
      },
      "description": "",
      "end": 571,
      "ignore": false,
      "isSetter": true,
      "kind": "set",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 571,
          "line": 28,
        },
        "start": Position {
          "column": 8,
          "index": 443,
          "line": 22,
        },
      },
      "member": "name",
      "memberOf": undefined,
      "name": "name",
      "params": Array [
        Object {
          "name": "val",
          "optional": false,
          "type": Array [],
        },
      ],
      "path": Array [],
      "raw": "/**
         * @type {string}
         * @param val
         */",
      "start": 443,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "         * @type {string}",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@type",
                "type": "{string}",
              },
            },
          ],
          "tag": "type",
          "type": "string",
        },
        Object {
          "description": "",
          "name": "val",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "         * @param val",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "val",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@param",
                "type": "",
              },
            },
            Object {
              "number": 3,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "         * @type {number}",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "         ",
                  "tag": "@type",
                  "type": "{number}",
                },
              },
              Object {
                "number": 2,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "type",
            "type": "number",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
      },
      "code": "get age() {
  return 25;
}",
      "ctx": Object {
        "isGetter": true,
        "kind": "get",
        "member": "age",
        "memberOf": undefined,
        "name": "age",
      },
      "description": "",
      "end": 676,
      "ignore": false,
      "isGetter": true,
      "kind": "get",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 676,
          "line": 35,
        },
        "start": Position {
          "column": 8,
          "index": 582,
          "line": 30,
        },
      },
      "member": "age",
      "memberOf": undefined,
      "name": "age",
      "path": Array [],
      "raw": "/**
         * @type {number}
         */",
      "start": 582,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "         * @type {number}",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@type",
                "type": "{number}",
              },
            },
            Object {
              "number": 2,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "type",
          "type": "number",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "raw": "/** Set up initial values. */",
  "start": 78,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/getset.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Speak a message.",
  "end": 283,
  "filename": "jsdoc/getset.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 283,
      "line": 12,
    },
    "start": Position {
      "column": 8,
      "index": 165,
      "line": 9,
    },
  },
  "member": "say",
  "memberOf": "Person",
  "mutable": true,
  "name": "say",
  "params": Array [
    Object {
      "member": "message",
      "name": "message",
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Set up initial values.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "initialize: function (name) {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Set up initial values.",
      "end": 154,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 154,
          "line": 7,
        },
        "start": Position {
          "column": 8,
          "index": 78,
          "line": 5,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** Set up initial values. */",
      "start": 78,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Speak a message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "say: function (message) {
  return this.name + \\" says: \\" + message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message.",
      "end": 283,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 283,
          "line": 12,
        },
        "start": Position {
          "column": 8,
          "index": 165,
          "line": 9,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [],
      "raw": "/** Speak a message. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 165,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "         * @type {string}",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "         ",
                  "tag": "@type",
                  "type": "{string}",
                },
              },
              Object {
                "number": 3,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "type",
            "type": "string",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
      },
      "code": "get name() {
  return this._name;
}",
      "ctx": Object {
        "isGetter": true,
        "kind": "get",
        "member": "name",
        "memberOf": undefined,
        "name": "name",
      },
      "description": "The name of the person.",
      "end": 432,
      "ignore": false,
      "isGetter": true,
      "kind": "get",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 432,
          "line": 20,
        },
        "start": Position {
          "column": 8,
          "index": 294,
          "line": 14,
        },
      },
      "member": "name",
      "memberOf": undefined,
      "name": "name",
      "path": Array [],
      "raw": "/**
         * The name of the person.
         * @type {string}
         */",
      "start": 294,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "         * @type {string}",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@type",
                "type": "{string}",
              },
            },
            Object {
              "number": 3,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "type",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "params": Array [
          Object {
            "name": "val",
            "optional": false,
            "type": Array [],
          },
        ],
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "         * @type {string}",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "         ",
                  "tag": "@type",
                  "type": "{string}",
                },
              },
            ],
            "tag": "type",
            "type": "string",
          },
          Object {
            "description": "",
            "name": "val",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "         * @param val",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "val",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "         ",
                  "tag": "@param",
                  "type": "",
                },
              },
              Object {
                "number": 3,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
      },
      "code": "set name(val) {
  this._name = name;
}",
      "ctx": Object {
        "isSetter": true,
        "kind": "set",
        "member": "name",
        "memberOf": undefined,
        "name": "name",
      },
      "description": "",
      "end": 571,
      "ignore": false,
      "isSetter": true,
      "kind": "set",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 571,
          "line": 28,
        },
        "start": Position {
          "column": 8,
          "index": 443,
          "line": 22,
        },
      },
      "member": "name",
      "memberOf": undefined,
      "name": "name",
      "params": Array [
        Object {
          "name": "val",
          "optional": false,
          "type": Array [],
        },
      ],
      "path": Array [],
      "raw": "/**
         * @type {string}
         * @param val
         */",
      "start": 443,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "         * @type {string}",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@type",
                "type": "{string}",
              },
            },
          ],
          "tag": "type",
          "type": "string",
        },
        Object {
          "description": "",
          "name": "val",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "         * @param val",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "val",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@param",
                "type": "",
              },
            },
            Object {
              "number": 3,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "         * @type {number}",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "         ",
                  "tag": "@type",
                  "type": "{number}",
                },
              },
              Object {
                "number": 2,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "type",
            "type": "number",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
      },
      "code": "get age() {
  return 25;
}",
      "ctx": Object {
        "isGetter": true,
        "kind": "get",
        "member": "age",
        "memberOf": undefined,
        "name": "age",
      },
      "description": "",
      "end": 676,
      "ignore": false,
      "isGetter": true,
      "kind": "get",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 676,
          "line": 35,
        },
        "start": Position {
          "column": 8,
          "index": 582,
          "line": 30,
        },
      },
      "member": "age",
      "memberOf": undefined,
      "name": "age",
      "path": Array [],
      "raw": "/**
         * @type {number}
         */",
      "start": 582,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "         * @type {number}",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@type",
                "type": "{number}",
              },
            },
            Object {
              "number": 2,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "type",
          "type": "number",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "raw": "/** Speak a message. */",
  "returns": Object {
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "Number",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "Number",
        },
      ],
      "string": "Number",
    },
  },
  "start": 165,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/getset.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The name of the person.",
  "end": 432,
  "filename": "jsdoc/getset.js",
  "ignore": false,
  "isGetter": true,
  "kind": "get",
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 432,
      "line": 20,
    },
    "start": Position {
      "column": 8,
      "index": 294,
      "line": 14,
    },
  },
  "member": "name",
  "memberOf": "Person",
  "mutable": true,
  "name": "name",
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Set up initial values.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "initialize: function (name) {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Set up initial values.",
      "end": 154,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 154,
          "line": 7,
        },
        "start": Position {
          "column": 8,
          "index": 78,
          "line": 5,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** Set up initial values. */",
      "start": 78,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Speak a message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "say: function (message) {
  return this.name + \\" says: \\" + message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message.",
      "end": 283,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 283,
          "line": 12,
        },
        "start": Position {
          "column": 8,
          "index": 165,
          "line": 9,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [],
      "raw": "/** Speak a message. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 165,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "         * @type {string}",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "         ",
                  "tag": "@type",
                  "type": "{string}",
                },
              },
              Object {
                "number": 3,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "type",
            "type": "string",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
      },
      "code": "get name() {
  return this._name;
}",
      "ctx": Object {
        "isGetter": true,
        "kind": "get",
        "member": "name",
        "memberOf": undefined,
        "name": "name",
      },
      "description": "The name of the person.",
      "end": 432,
      "ignore": false,
      "isGetter": true,
      "kind": "get",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 432,
          "line": 20,
        },
        "start": Position {
          "column": 8,
          "index": 294,
          "line": 14,
        },
      },
      "member": "name",
      "memberOf": undefined,
      "name": "name",
      "path": Array [],
      "raw": "/**
         * The name of the person.
         * @type {string}
         */",
      "start": 294,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "         * @type {string}",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@type",
                "type": "{string}",
              },
            },
            Object {
              "number": 3,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "type",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "params": Array [
          Object {
            "name": "val",
            "optional": false,
            "type": Array [],
          },
        ],
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "         * @type {string}",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "         ",
                  "tag": "@type",
                  "type": "{string}",
                },
              },
            ],
            "tag": "type",
            "type": "string",
          },
          Object {
            "description": "",
            "name": "val",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "         * @param val",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "val",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "         ",
                  "tag": "@param",
                  "type": "",
                },
              },
              Object {
                "number": 3,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
      },
      "code": "set name(val) {
  this._name = name;
}",
      "ctx": Object {
        "isSetter": true,
        "kind": "set",
        "member": "name",
        "memberOf": undefined,
        "name": "name",
      },
      "description": "",
      "end": 571,
      "ignore": false,
      "isSetter": true,
      "kind": "set",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 571,
          "line": 28,
        },
        "start": Position {
          "column": 8,
          "index": 443,
          "line": 22,
        },
      },
      "member": "name",
      "memberOf": undefined,
      "name": "name",
      "params": Array [
        Object {
          "name": "val",
          "optional": false,
          "type": Array [],
        },
      ],
      "path": Array [],
      "raw": "/**
         * @type {string}
         * @param val
         */",
      "start": 443,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "         * @type {string}",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@type",
                "type": "{string}",
              },
            },
          ],
          "tag": "type",
          "type": "string",
        },
        Object {
          "description": "",
          "name": "val",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "         * @param val",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "val",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@param",
                "type": "",
              },
            },
            Object {
              "number": 3,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "         * @type {number}",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "         ",
                  "tag": "@type",
                  "type": "{number}",
                },
              },
              Object {
                "number": 2,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "type",
            "type": "number",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
      },
      "code": "get age() {
  return 25;
}",
      "ctx": Object {
        "isGetter": true,
        "kind": "get",
        "member": "age",
        "memberOf": undefined,
        "name": "age",
      },
      "description": "",
      "end": 676,
      "ignore": false,
      "isGetter": true,
      "kind": "get",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 676,
          "line": 35,
        },
        "start": Position {
          "column": 8,
          "index": 582,
          "line": 30,
        },
      },
      "member": "age",
      "memberOf": undefined,
      "name": "age",
      "path": Array [],
      "raw": "/**
         * @type {number}
         */",
      "start": 582,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "         * @type {number}",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@type",
                "type": "{number}",
              },
            },
            Object {
              "number": 2,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "type",
          "type": "number",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "raw": "/**
         * The name of the person.
         * @type {string}
         */",
  "start": 294,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
}
`;

exports[`./jsdoc/getset.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 571,
  "filename": "jsdoc/getset.js",
  "ignore": false,
  "isSetter": true,
  "kind": "set",
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 571,
      "line": 28,
    },
    "start": Position {
      "column": 8,
      "index": 443,
      "line": 22,
    },
  },
  "member": "name",
  "memberOf": "Person",
  "mutable": true,
  "name": "name",
  "params": Array [
    Object {
      "name": "val",
      "optional": false,
      "type": Array [],
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Set up initial values.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "initialize: function (name) {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Set up initial values.",
      "end": 154,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 154,
          "line": 7,
        },
        "start": Position {
          "column": 8,
          "index": 78,
          "line": 5,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** Set up initial values. */",
      "start": 78,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Speak a message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "say: function (message) {
  return this.name + \\" says: \\" + message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message.",
      "end": 283,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 283,
          "line": 12,
        },
        "start": Position {
          "column": 8,
          "index": 165,
          "line": 9,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [],
      "raw": "/** Speak a message. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 165,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "         * @type {string}",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "         ",
                  "tag": "@type",
                  "type": "{string}",
                },
              },
              Object {
                "number": 3,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "type",
            "type": "string",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
      },
      "code": "get name() {
  return this._name;
}",
      "ctx": Object {
        "isGetter": true,
        "kind": "get",
        "member": "name",
        "memberOf": undefined,
        "name": "name",
      },
      "description": "The name of the person.",
      "end": 432,
      "ignore": false,
      "isGetter": true,
      "kind": "get",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 432,
          "line": 20,
        },
        "start": Position {
          "column": 8,
          "index": 294,
          "line": 14,
        },
      },
      "member": "name",
      "memberOf": undefined,
      "name": "name",
      "path": Array [],
      "raw": "/**
         * The name of the person.
         * @type {string}
         */",
      "start": 294,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "         * @type {string}",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@type",
                "type": "{string}",
              },
            },
            Object {
              "number": 3,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "type",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "params": Array [
          Object {
            "name": "val",
            "optional": false,
            "type": Array [],
          },
        ],
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "         * @type {string}",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "         ",
                  "tag": "@type",
                  "type": "{string}",
                },
              },
            ],
            "tag": "type",
            "type": "string",
          },
          Object {
            "description": "",
            "name": "val",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "         * @param val",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "val",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "         ",
                  "tag": "@param",
                  "type": "",
                },
              },
              Object {
                "number": 3,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
      },
      "code": "set name(val) {
  this._name = name;
}",
      "ctx": Object {
        "isSetter": true,
        "kind": "set",
        "member": "name",
        "memberOf": undefined,
        "name": "name",
      },
      "description": "",
      "end": 571,
      "ignore": false,
      "isSetter": true,
      "kind": "set",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 571,
          "line": 28,
        },
        "start": Position {
          "column": 8,
          "index": 443,
          "line": 22,
        },
      },
      "member": "name",
      "memberOf": undefined,
      "name": "name",
      "params": Array [
        Object {
          "name": "val",
          "optional": false,
          "type": Array [],
        },
      ],
      "path": Array [],
      "raw": "/**
         * @type {string}
         * @param val
         */",
      "start": 443,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "         * @type {string}",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@type",
                "type": "{string}",
              },
            },
          ],
          "tag": "type",
          "type": "string",
        },
        Object {
          "description": "",
          "name": "val",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "         * @param val",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "val",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@param",
                "type": "",
              },
            },
            Object {
              "number": 3,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "         * @type {number}",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "         ",
                  "tag": "@type",
                  "type": "{number}",
                },
              },
              Object {
                "number": 2,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "type",
            "type": "number",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
      },
      "code": "get age() {
  return 25;
}",
      "ctx": Object {
        "isGetter": true,
        "kind": "get",
        "member": "age",
        "memberOf": undefined,
        "name": "age",
      },
      "description": "",
      "end": 676,
      "ignore": false,
      "isGetter": true,
      "kind": "get",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 676,
          "line": 35,
        },
        "start": Position {
          "column": 8,
          "index": 582,
          "line": 30,
        },
      },
      "member": "age",
      "memberOf": undefined,
      "name": "age",
      "path": Array [],
      "raw": "/**
         * @type {number}
         */",
      "start": 582,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "         * @type {number}",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@type",
                "type": "{number}",
              },
            },
            Object {
              "number": 2,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "type",
          "type": "number",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "raw": "/**
         * @type {string}
         * @param val
         */",
  "start": 443,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
}
`;

exports[`./jsdoc/getset.js snapshots: Item 7 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 676,
  "filename": "jsdoc/getset.js",
  "ignore": false,
  "isGetter": true,
  "kind": "get",
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 676,
      "line": 35,
    },
    "start": Position {
      "column": 8,
      "index": 582,
      "line": 30,
    },
  },
  "member": "age",
  "memberOf": "Person",
  "mutable": true,
  "name": "age",
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Set up initial values.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "initialize: function (name) {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Set up initial values.",
      "end": 154,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 154,
          "line": 7,
        },
        "start": Position {
          "column": 8,
          "index": 78,
          "line": 5,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** Set up initial values. */",
      "start": 78,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Speak a message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "say: function (message) {
  return this.name + \\" says: \\" + message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message.",
      "end": 283,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 283,
          "line": 12,
        },
        "start": Position {
          "column": 8,
          "index": 165,
          "line": 9,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [],
      "raw": "/** Speak a message. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 165,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "         * @type {string}",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "         ",
                  "tag": "@type",
                  "type": "{string}",
                },
              },
              Object {
                "number": 3,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "type",
            "type": "string",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
      },
      "code": "get name() {
  return this._name;
}",
      "ctx": Object {
        "isGetter": true,
        "kind": "get",
        "member": "name",
        "memberOf": undefined,
        "name": "name",
      },
      "description": "The name of the person.",
      "end": 432,
      "ignore": false,
      "isGetter": true,
      "kind": "get",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 432,
          "line": 20,
        },
        "start": Position {
          "column": 8,
          "index": 294,
          "line": 14,
        },
      },
      "member": "name",
      "memberOf": undefined,
      "name": "name",
      "path": Array [],
      "raw": "/**
         * The name of the person.
         * @type {string}
         */",
      "start": 294,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "         * @type {string}",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@type",
                "type": "{string}",
              },
            },
            Object {
              "number": 3,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "type",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "params": Array [
          Object {
            "name": "val",
            "optional": false,
            "type": Array [],
          },
        ],
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "         * @type {string}",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "         ",
                  "tag": "@type",
                  "type": "{string}",
                },
              },
            ],
            "tag": "type",
            "type": "string",
          },
          Object {
            "description": "",
            "name": "val",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "         * @param val",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "val",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "         ",
                  "tag": "@param",
                  "type": "",
                },
              },
              Object {
                "number": 3,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
      },
      "code": "set name(val) {
  this._name = name;
}",
      "ctx": Object {
        "isSetter": true,
        "kind": "set",
        "member": "name",
        "memberOf": undefined,
        "name": "name",
      },
      "description": "",
      "end": 571,
      "ignore": false,
      "isSetter": true,
      "kind": "set",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 571,
          "line": 28,
        },
        "start": Position {
          "column": 8,
          "index": 443,
          "line": 22,
        },
      },
      "member": "name",
      "memberOf": undefined,
      "name": "name",
      "params": Array [
        Object {
          "name": "val",
          "optional": false,
          "type": Array [],
        },
      ],
      "path": Array [],
      "raw": "/**
         * @type {string}
         * @param val
         */",
      "start": 443,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "         * @type {string}",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@type",
                "type": "{string}",
              },
            },
          ],
          "tag": "type",
          "type": "string",
        },
        Object {
          "description": "",
          "name": "val",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "         * @param val",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "val",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@param",
                "type": "",
              },
            },
            Object {
              "number": 3,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "         * @type {number}",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "         ",
                  "tag": "@type",
                  "type": "{number}",
                },
              },
              Object {
                "number": 2,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "type",
            "type": "number",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
      },
      "code": "get age() {
  return 25;
}",
      "ctx": Object {
        "isGetter": true,
        "kind": "get",
        "member": "age",
        "memberOf": undefined,
        "name": "age",
      },
      "description": "",
      "end": 676,
      "ignore": false,
      "isGetter": true,
      "kind": "get",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 676,
          "line": 35,
        },
        "start": Position {
          "column": 8,
          "index": 582,
          "line": 30,
        },
      },
      "member": "age",
      "memberOf": undefined,
      "name": "age",
      "path": Array [],
      "raw": "/**
         * @type {number}
         */",
      "start": 582,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "         * @type {number}",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "         ",
                "tag": "@type",
                "type": "{number}",
              },
            },
            Object {
              "number": 2,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "type",
          "type": "number",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "raw": "/**
         * @type {number}
         */",
  "start": 582,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
}
`;

exports[`./jsdoc/getset2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Employee class.",
  "end": 241,
  "filename": "jsdoc/getset2.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 241,
      "line": 15,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Employee",
  "path": Array [
    Object {
      "name": "Employee",
    },
  ],
  "properties": Array [
    Object {
      "description": "Location.",
      "filename": "jsdoc/getset2.js",
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "get",
      "member": "location",
      "memberOf": "Employee.prototype",
      "name": "location",
      "params": Array [],
      "scope": "instance",
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "     * @type {string}",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "     ",
                "tag": "@type",
                "type": "{string}",
              },
            },
            Object {
              "number": 3,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "type",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "description": "",
      "filename": "jsdoc/getset2.js",
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "set",
      "member": "location",
      "memberOf": "Employee.prototype",
      "name": "location",
      "params": Array [
        Object {
          "member": "loc",
          "name": "loc",
        },
      ],
      "scope": "instance",
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @type {string} */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "",
                "tag": "@type",
                "type": "{string}",
              },
            },
          ],
          "tag": "type",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "raw": "/** Employee class. */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Employee",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Employee",
      },
    ],
    "string": "Employee",
  },
}
`;

exports[`./jsdoc/getset2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Location.",
  "end": 152,
  "filename": "jsdoc/getset2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "get",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 152,
      "line": 9,
    },
    "start": Position {
      "column": 4,
      "index": 44,
      "line": 3,
    },
  },
  "member": "location",
  "memberOf": "Employee.prototype",
  "name": "location",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Employee",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "location",
    },
  ],
  "raw": "/**
     * Location.
     * @type {string}
     */",
  "scope": "instance",
  "start": 44,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
}
`;

exports[`./jsdoc/getset2.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 239,
  "filename": "jsdoc/getset2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "set",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 239,
      "line": 14,
    },
    "start": Position {
      "column": 4,
      "index": 158,
      "line": 11,
    },
  },
  "member": "location",
  "memberOf": "Employee.prototype",
  "name": "location",
  "params": Array [
    Object {
      "member": "loc",
      "name": "loc",
    },
  ],
  "path": Array [
    Object {
      "name": "Employee",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "location",
    },
  ],
  "raw": "/** @type {string} */",
  "scope": "instance",
  "start": 158,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
}
`;

exports[`./jsdoc/globaltag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 76,
  "filename": "jsdoc/globaltag.js",
  "ignore": false,
  "isConstructor": true,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 39,
      "index": 76,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "Bar",
  "memberOf": "window",
  "name": "Bar",
  "path": Array [
    Object {
      "name": "window",
    },
    Object {
      "name": "Bar",
    },
  ],
  "raw": "/**
    @global
    @constructor
 */",
  "scope": "global",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/globaltag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 124,
  "filename": "jsdoc/globaltag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 12,
      "index": 124,
      "line": 10,
    },
    "start": Position {
      "column": 4,
      "index": 97,
      "line": 9,
    },
  },
  "member": "foo",
  "mutable": true,
  "name": "foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "foo",
    },
  ],
  "raw": "/** @global */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "scope": "global",
  "start": 97,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/hideconstructortag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "classDescription": "singleton.",
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 809,
  "filename": "jsdoc/hideconstructortag.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 809,
      "line": 38,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "Toaster",
  "mutable": true,
  "name": "Toaster",
  "path": Array [
    Object {
      "name": "Toaster",
    },
  ],
  "raw": "/**
 * @classdesc Toaster singleton.
 * @class
 * @hideconstructor
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/hideconstructortag.js snapshots: Item 2 1`] = `
Object {
  "alias": "toast",
  "aliasOriginal": "toast",
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Toast an item.",
  "end": 408,
  "filename": "jsdoc/hideconstructortag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 48,
      "index": 408,
      "line": 20,
    },
    "start": Position {
      "column": 4,
      "index": 156,
      "line": 11,
    },
  },
  "member": "toast",
  "mutable": true,
  "name": "toast",
  "params": Array [
    Object {
      "description": "- The item to toast.",
      "name": "item",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "BreadyThing",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "BreadyThing",
          },
        ],
        "string": "BreadyThing",
      },
    },
  ],
  "parent": "Toaster",
  "path": Array [
    Object {
      "alias": "toast",
      "name": "toast",
      "original": "Toaster.prototype.toast",
    },
  ],
  "raw": "/**
     * Toast an item.
     *
     * @alias toast
     * @memberOf Toaster
     * @instance
     * @param {BreadyThing} item - The item to toast.
     * @return {Toast} A toasted bready thing.
     */",
  "returnPotentials": TypeInferance {
    "potentials": Array [
      "Object",
      "unknown",
    ],
  },
  "returns": Object {
    "description": "toasted bready thing.",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "Toast",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "Toast",
        },
      ],
      "string": "Toast",
    },
  },
  "scope": "instance",
  "start": 156,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/hideconstructortag.js snapshots: Item 3 1`] = `
Object {
  "alias": "Toaster.getInstance",
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Get the Toaster instance.",
  "end": 584,
  "filename": "jsdoc/hideconstructortag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 11,
      "index": 584,
      "line": 28,
    },
    "start": Position {
      "column": 8,
      "index": 431,
      "line": 23,
    },
  },
  "raw": "/**
         * Get the Toaster instance.
         *
         * @alias Toaster.getInstance
         * @returns {Toaster} The Toaster instance.
         */",
  "returns": Object {
    "description": "Toaster instance.",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "Toaster",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "Toaster",
        },
      ],
      "string": "Toaster",
    },
  },
  "start": 431,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/hideconstructortag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Waffle iron singleton.",
  "end": 1476,
  "filename": "jsdoc/hideconstructortag.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 1476,
      "line": 75,
    },
    "start": Position {
      "column": 0,
      "index": 811,
      "line": 40,
    },
  },
  "name": "WaffleIron",
  "path": Array [
    Object {
      "name": "WaffleIron",
    },
  ],
  "properties": Array [
    Object {
      "filename": "jsdoc/hideconstructortag.js",
      "kind": "class",
      "name": "WaffleIron",
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "WaffleIron",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "WaffleIron",
          },
        ],
        "string": "WaffleIron",
      },
    },
    Object {
      "description": "Create the waffle iron.",
      "filename": "jsdoc/hideconstructortag.js",
      "ignore": false,
      "isAsync": false,
      "isConstructor": true,
      "isGenerator": false,
      "kind": "constructor",
      "member": "constructor",
      "memberOf": "WaffleIron.prototype",
      "name": "constructor",
      "params": Array [],
      "scope": "instance",
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "     * @hideconstructor",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "@hideconstructor",
                "type": "",
              },
            },
            Object {
              "number": 4,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "hideconstructor",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "WaffleIron",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "WaffleIron",
          },
        ],
        "string": "WaffleIron",
      },
    },
    Object {
      "description": "Get the WaffleIron instance.",
      "filename": "jsdoc/hideconstructortag.js",
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "member": "getInstance",
      "memberOf": "WaffleIron.prototype",
      "name": "getInstance",
      "params": Array [],
      "returns": Object {
        "description": "WaffleIron instance.",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "WaffleIron",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "WaffleIron",
            },
          ],
          "string": "WaffleIron",
        },
      },
      "scope": "instance",
      "tags": Array [
        Object {
          "description": "WaffleIron instance.",
          "name": "The",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "     * @return {WaffleIron} The WaffleIron instance.",
              "tokens": Object {
                "delimiter": "*",
                "description": "WaffleIron instance.",
                "end": "",
                "lineEnd": "",
                "name": "The",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@return",
                "type": "{WaffleIron}",
              },
            },
            Object {
              "number": 4,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "return",
          "type": "WaffleIron",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "WaffleIron",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "WaffleIron",
          },
        ],
        "string": "WaffleIron",
      },
    },
  ],
  "raw": "/**
 * Waffle iron singleton.
 */",
  "start": 811,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "WaffleIron",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "WaffleIron",
      },
    ],
    "string": "WaffleIron",
  },
}
`;

exports[`./jsdoc/hideconstructortag.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Create the waffle iron.",
  "end": 1302,
  "filename": "jsdoc/hideconstructortag.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 1302,
      "line": 65,
    },
    "start": Position {
      "column": 4,
      "index": 891,
      "line": 46,
    },
  },
  "member": "constructor",
  "memberOf": "WaffleIron.prototype",
  "name": "constructor",
  "params": Array [],
  "path": Array [
    Object {
      "name": "WaffleIron",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "constructor",
    },
  ],
  "raw": "/**
     * Create the waffle iron.
     *
     * @hideconstructor
     */",
  "scope": "instance",
  "start": 891,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "WaffleIron",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "WaffleIron",
      },
    ],
    "string": "WaffleIron",
  },
}
`;

exports[`./jsdoc/hideconstructortag.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Cook a waffle.",
  "end": 1223,
  "filename": "jsdoc/hideconstructortag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 11,
      "index": 1223,
      "line": 61,
    },
    "start": Position {
      "column": 8,
      "index": 1069,
      "line": 56,
    },
  },
  "params": Array [
    Object {
      "description": "- The waffle batter.",
      "name": "batter",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Batter",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Batter",
          },
        ],
        "string": "Batter",
      },
    },
  ],
  "raw": "/**
         * Cook a waffle.
         *
         * @param {Batter} batter - The waffle batter.
         * @return {Waffle} The cooked waffle.
         */",
  "returns": Object {
    "description": "cooked waffle.",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "Waffle",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "Waffle",
        },
      ],
      "string": "Waffle",
    },
  },
  "start": 1069,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/hideconstructortag.js snapshots: Item 7 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Get the WaffleIron instance.",
  "end": 1474,
  "filename": "jsdoc/hideconstructortag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 1474,
      "line": 74,
    },
    "start": Position {
      "column": 4,
      "index": 1308,
      "line": 67,
    },
  },
  "member": "getInstance",
  "memberOf": "WaffleIron.prototype",
  "name": "getInstance",
  "params": Array [],
  "path": Array [
    Object {
      "name": "WaffleIron",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "getInstance",
    },
  ],
  "raw": "/**
     * Get the WaffleIron instance.
     *
     * @return {WaffleIron} The WaffleIron instance.
     */",
  "returns": Object {
    "description": "WaffleIron instance.",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "WaffleIron",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "WaffleIron",
        },
      ],
      "string": "WaffleIron",
    },
  },
  "scope": "instance",
  "start": 1308,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "WaffleIron",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "WaffleIron",
      },
    ],
    "string": "WaffleIron",
  },
}
`;

exports[`./jsdoc/ignoretag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 39,
  "filename": "jsdoc/ignoretag.js",
  "fnName": "foo",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 39,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "foo",
  "params": Array [
    Object {
      "member": "x",
      "name": "x",
    },
  ],
  "path": Array [
    Object {
      "name": "foo",
    },
  ],
  "raw": "/**
    @ignore
*/",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/ignoretag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 68,
  "filename": "jsdoc/ignoretag2.js",
  "fnName": "foo",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 68,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "foo",
  "params": Array [
    Object {
      "member": "x",
      "name": "x",
    },
  ],
  "path": Array [
    Object {
      "name": "foo",
    },
  ],
  "raw": "/**
    @ignore value that shouldn't be here
*/",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/implicitcasttag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 80,
  "filename": "jsdoc/implicitcasttag.js",
  "ignore": false,
  "isImplicitType": true,
  "loc": Object {
    "end": Position {
      "column": 18,
      "index": 80,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 19,
      "line": 3,
    },
  },
  "path": Array [],
  "raw": "/**
 * @type {string}
 * @implicitCast
 */",
  "start": 19,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
}
`;

exports[`./jsdoc/inheritdoctag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Parent class.",
  "end": 59,
  "filename": "jsdoc/inheritdoctag.js",
  "fnName": "Connection",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 24,
      "index": 59,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Connection",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Connection",
    },
  ],
  "raw": "/**
 * Parent class.
 * @class
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/inheritdoctag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Open the connection.",
  "end": 147,
  "filename": "jsdoc/inheritdoctag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 42,
      "index": 147,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 61,
      "line": 7,
    },
  },
  "member": "open",
  "memberOf": "Connection.prototype",
  "name": "open",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Connection",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "open",
    },
  ],
  "raw": "/**
 * Open the connection.
 * @virtual
 */",
  "scope": "instance",
  "start": 61,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/inheritdoctag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Close the connection.",
  "end": 225,
  "filename": "jsdoc/inheritdoctag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 43,
      "index": 225,
      "line": 16,
    },
    "start": Position {
      "column": 0,
      "index": 149,
      "line": 13,
    },
  },
  "member": "close",
  "memberOf": "Connection.prototype",
  "name": "close",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Connection",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "close",
    },
  ],
  "raw": "/**
 * Close the connection.
 */",
  "scope": "instance",
  "start": 149,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/inheritdoctag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Read the specified number of bytes from the connection.",
  "end": 475,
  "filename": "jsdoc/inheritdoctag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 47,
      "index": 475,
      "line": 25,
    },
    "start": Position {
      "column": 0,
      "index": 227,
      "line": 18,
    },
  },
  "member": "read",
  "memberOf": "Connection",
  "name": "read",
  "params": Array [
    Object {
      "description": "- The number of bytes to read.",
      "name": "bytes",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Connection",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "read",
    },
  ],
  "raw": "/**
 * Read the specified number of bytes from the connection.
 *
 * @function Connection#read
 * @param {number} bytes - The number of bytes to read.
 * @return {Buffer} The bytes that were read.
 */",
  "returns": Object {
    "description": "bytes that were read.",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "Buffer",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "Buffer",
        },
      ],
      "string": "Buffer",
    },
  },
  "scope": "instance",
  "start": 227,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/inheritdoctag.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Child class.",
  "end": 554,
  "extends": Array [
    Object {
      "name": "Connection",
    },
  ],
  "filename": "jsdoc/inheritdoctag.js",
  "fnName": "Socket",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 554,
      "line": 32,
    },
    "start": Position {
      "column": 0,
      "index": 477,
      "line": 27,
    },
  },
  "name": "Socket",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Socket",
    },
  ],
  "raw": "/**
 * Child class.
 * @class
 * @extends Connection
 */",
  "start": 477,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/inheritdoctag.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 613,
  "filename": "jsdoc/inheritdoctag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 38,
      "index": 613,
      "line": 35,
    },
    "start": Position {
      "column": 0,
      "index": 556,
      "line": 34,
    },
  },
  "member": "open",
  "memberOf": "Socket.prototype",
  "name": "open",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Socket",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "open",
    },
  ],
  "raw": "/** @inheritdoc */",
  "scope": "instance",
  "start": 556,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/inheritdoctag.js snapshots: Item 7 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Close the socket.",
  "end": 780,
  "filename": "jsdoc/inheritdoctag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 39,
      "index": 780,
      "line": 42,
    },
    "start": Position {
      "column": 0,
      "index": 615,
      "line": 37,
    },
  },
  "member": "close",
  "memberOf": "Socket.prototype",
  "name": "close",
  "params": Array [
    Object {
      "description": "- A message explaining why the socket is being closed.",
      "name": "message",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Socket",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "close",
    },
  ],
  "raw": "/**
 * Close the socket.
 * @param {string} message - A message explaining why the socket is being closed.
 * @inheritdoc
 */",
  "scope": "instance",
  "start": 615,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/inheritdoctag.js snapshots: Item 8 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 844,
  "filename": "jsdoc/inheritdoctag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 43,
      "index": 844,
      "line": 45,
    },
    "start": Position {
      "column": 0,
      "index": 782,
      "line": 44,
    },
  },
  "member": "read",
  "memberOf": "Socket.prototype",
  "name": "read",
  "params": Array [
    Object {
      "member": "bytes",
      "name": "bytes",
    },
  ],
  "path": Array [
    Object {
      "name": "Socket",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "read",
    },
  ],
  "raw": "/** @inheritdoc */",
  "scope": "instance",
  "start": 782,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/inlinecomment.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Inline Comment 1",
  "end": 48,
  "filename": "jsdoc/inlinecomment.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 48,
      "index": 48,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "test",
  "memberOf": "this",
  "name": "test",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "test",
    },
  ],
  "raw": "/** Inline Comment 1 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/inlinecomment.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Inline Comment 2",
  "end": 99,
  "filename": "jsdoc/inlinecomment.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 50,
      "index": 99,
      "line": 2,
    },
    "start": Position {
      "column": 0,
      "index": 49,
      "line": 2,
    },
  },
  "member": "test2",
  "memberOf": "this",
  "name": "test2",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "test2",
    },
  ],
  "raw": "/** Inline Comment 2 */",
  "start": 49,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/inlineparamcomment.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Number",
  "end": 44,
  "filename": "jsdoc/inlineparamcomment.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 33,
      "index": 44,
      "line": 2,
    },
    "start": Position {
      "column": 18,
      "index": 29,
      "line": 2,
    },
  },
  "member": "a",
  "memberOf": "ns",
  "mutable": true,
  "name": "a",
  "params": Array [],
  "path": Array [
    Object {
      "name": "ns",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Number",
        "ignore": false,
        "tags": Array [],
      },
      "code": "a",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "function",
        "member": "a",
        "memberOf": undefined,
        "name": "a",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Number",
      "end": 44,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "function",
      "loc": Object {
        "end": Position {
          "column": 33,
          "index": 44,
          "line": 2,
        },
        "start": Position {
          "column": 18,
          "index": 29,
          "line": 2,
        },
      },
      "member": "a",
      "memberOf": undefined,
      "name": "a",
      "params": Array [],
      "path": Array [],
      "raw": "/** Number */",
      "start": 29,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Number",
        "ignore": false,
        "tags": Array [],
      },
      "code": "b",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "function",
        "member": "b",
        "memberOf": undefined,
        "name": "b",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Number",
      "end": 61,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "function",
      "loc": Object {
        "end": Position {
          "column": 50,
          "index": 61,
          "line": 2,
        },
        "start": Position {
          "column": 35,
          "index": 46,
          "line": 2,
        },
      },
      "member": "b",
      "memberOf": undefined,
      "name": "b",
      "params": Array [],
      "path": Array [],
      "raw": "/** Number */",
      "start": 46,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Number */",
  "start": 29,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/inlineparamcomment.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Number",
  "end": 61,
  "filename": "jsdoc/inlineparamcomment.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 50,
      "index": 61,
      "line": 2,
    },
    "start": Position {
      "column": 35,
      "index": 46,
      "line": 2,
    },
  },
  "member": "b",
  "memberOf": "ns",
  "mutable": true,
  "name": "b",
  "params": Array [],
  "path": Array [
    Object {
      "name": "ns",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Number",
        "ignore": false,
        "tags": Array [],
      },
      "code": "a",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "function",
        "member": "a",
        "memberOf": undefined,
        "name": "a",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Number",
      "end": 44,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "function",
      "loc": Object {
        "end": Position {
          "column": 33,
          "index": 44,
          "line": 2,
        },
        "start": Position {
          "column": 18,
          "index": 29,
          "line": 2,
        },
      },
      "member": "a",
      "memberOf": undefined,
      "name": "a",
      "params": Array [],
      "path": Array [],
      "raw": "/** Number */",
      "start": 29,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Number",
        "ignore": false,
        "tags": Array [],
      },
      "code": "b",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "function",
        "member": "b",
        "memberOf": undefined,
        "name": "b",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Number",
      "end": 61,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "function",
      "loc": Object {
        "end": Position {
          "column": 50,
          "index": 61,
          "line": 2,
        },
        "start": Position {
          "column": 35,
          "index": 46,
          "line": 2,
        },
      },
      "member": "b",
      "memberOf": undefined,
      "name": "b",
      "params": Array [],
      "path": Array [],
      "raw": "/** Number */",
      "start": 46,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Number */",
  "start": 46,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/inlineparamcomment2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "default": "",
  "description": "",
  "end": 59,
  "filename": "jsdoc/inlineparamcomment2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 48,
      "index": 59,
      "line": 2,
    },
    "start": Position {
      "column": 18,
      "index": 29,
      "line": 2,
    },
  },
  "member": "foo",
  "memberOf": "ns",
  "mutable": true,
  "name": "bar",
  "optional": true,
  "params": Array [],
  "path": Array [
    Object {
      "name": "bar",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @type {string} */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "",
                  "tag": "@type",
                  "type": "{string}",
                },
              },
            ],
            "tag": "type",
            "type": "string",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
      },
      "code": "bar = ''",
      "ctx": Object {
        "default": "",
        "isAsync": false,
        "isGenerator": false,
        "kind": "function",
        "member": "foo",
        "memberOf": undefined,
        "name": "bar",
        "optional": true,
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
      },
      "default": "",
      "description": "",
      "end": 59,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "function",
      "loc": Object {
        "end": Position {
          "column": 48,
          "index": 59,
          "line": 2,
        },
        "start": Position {
          "column": 18,
          "index": 29,
          "line": 2,
        },
      },
      "member": "foo",
      "memberOf": undefined,
      "name": "bar",
      "optional": true,
      "params": Array [],
      "path": Array [
        Object {
          "name": "bar",
        },
      ],
      "raw": "/** @type {string} */",
      "start": 29,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @type {string} */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "",
                "tag": "@type",
                "type": "{string}",
              },
            },
          ],
          "tag": "type",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @type {number} */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "",
                  "tag": "@type",
                  "type": "{number}",
                },
              },
            ],
            "tag": "type",
            "type": "number",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
      },
      "code": "...baz",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "function",
        "member": "foo",
        "memberOf": undefined,
        "name": "foo",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 89,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "function",
      "loc": Object {
        "end": Position {
          "column": 78,
          "index": 89,
          "line": 2,
        },
        "start": Position {
          "column": 50,
          "index": 61,
          "line": 2,
        },
      },
      "member": "foo",
      "memberOf": undefined,
      "name": "foo",
      "params": Array [],
      "path": Array [],
      "raw": "/** @type {number} */",
      "start": 61,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @type {number} */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "",
                "tag": "@type",
                "type": "{number}",
              },
            },
          ],
          "tag": "type",
          "type": "number",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "raw": "/** @type {string} */",
  "start": 29,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
}
`;

exports[`./jsdoc/inlineparamcomment2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 89,
  "filename": "jsdoc/inlineparamcomment2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 78,
      "index": 89,
      "line": 2,
    },
    "start": Position {
      "column": 50,
      "index": 61,
      "line": 2,
    },
  },
  "member": "foo",
  "memberOf": "ns",
  "mutable": true,
  "name": "foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "ns",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @type {string} */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "",
                  "tag": "@type",
                  "type": "{string}",
                },
              },
            ],
            "tag": "type",
            "type": "string",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
      },
      "code": "bar = ''",
      "ctx": Object {
        "default": "",
        "isAsync": false,
        "isGenerator": false,
        "kind": "function",
        "member": "foo",
        "memberOf": undefined,
        "name": "bar",
        "optional": true,
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
      },
      "default": "",
      "description": "",
      "end": 59,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "function",
      "loc": Object {
        "end": Position {
          "column": 48,
          "index": 59,
          "line": 2,
        },
        "start": Position {
          "column": 18,
          "index": 29,
          "line": 2,
        },
      },
      "member": "foo",
      "memberOf": undefined,
      "name": "bar",
      "optional": true,
      "params": Array [],
      "path": Array [
        Object {
          "name": "bar",
        },
      ],
      "raw": "/** @type {string} */",
      "start": 29,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @type {string} */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "",
                "tag": "@type",
                "type": "{string}",
              },
            },
          ],
          "tag": "type",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @type {number} */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "",
                  "tag": "@type",
                  "type": "{number}",
                },
              },
            ],
            "tag": "type",
            "type": "number",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
      },
      "code": "...baz",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "function",
        "member": "foo",
        "memberOf": undefined,
        "name": "foo",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 89,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "function",
      "loc": Object {
        "end": Position {
          "column": 78,
          "index": 89,
          "line": 2,
        },
        "start": Position {
          "column": 50,
          "index": 61,
          "line": 2,
        },
      },
      "member": "foo",
      "memberOf": undefined,
      "name": "foo",
      "params": Array [],
      "path": Array [],
      "raw": "/** @type {number} */",
      "start": 61,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @type {number} */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "",
                "tag": "@type",
                "type": "{number}",
              },
            },
          ],
          "tag": "type",
          "type": "number",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "raw": "/** @type {number} */",
  "start": 61,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
}
`;

exports[`./jsdoc/inner.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 78,
  "filename": "jsdoc/inner.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 26,
      "index": 78,
      "line": 3,
    },
    "start": Position {
      "column": 4,
      "index": 33,
      "line": 2,
    },
  },
  "member": "encoding",
  "mutable": true,
  "name": "encoding",
  "params": Array [
    Object {
      "member": "text",
      "name": "text",
    },
  ],
  "path": Array [
    Object {
      "name": "encoding",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 33,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "utf8",
}
`;

exports[`./jsdoc/inner.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 127,
  "filename": "jsdoc/inner.js",
  "fnName": "encrypt",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 24,
      "index": 127,
      "line": 6,
    },
    "start": Position {
      "column": 4,
      "index": 84,
      "line": 5,
    },
  },
  "name": "encrypt",
  "params": Array [],
  "path": Array [
    Object {
      "name": "encrypt",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 84,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/innerscope.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 271,
  "filename": "jsdoc/innerscope.js",
  "fnName": "Message",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 271,
      "line": 17,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Message",
  "params": Array [
    Object {
      "member": "to",
      "name": "to",
    },
  ],
  "path": Array [
    Object {
      "name": "Message",
    },
  ],
  "raw": "/** @constructor */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/innerscope.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 128,
  "filename": "jsdoc/innerscope.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 128,
      "line": 8,
    },
    "start": Position {
      "column": 4,
      "index": 89,
      "line": 7,
    },
  },
  "member": "to",
  "memberOf": "headers",
  "name": "to",
  "params": Array [
    Object {
      "member": "to",
      "name": "to",
    },
  ],
  "path": Array [
    Object {
      "name": "headers",
    },
    Object {
      "name": "to",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 89,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/innerscope.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 205,
  "filename": "jsdoc/innerscope.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 30,
      "index": 205,
      "line": 12,
    },
    "start": Position {
      "column": 8,
      "index": 156,
      "line": 11,
    },
  },
  "member": "code",
  "memberOf": "response",
  "name": "code",
  "params": Array [],
  "path": Array [
    Object {
      "name": "response",
    },
    Object {
      "name": "code",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 156,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "200",
}
`;

exports[`./jsdoc/innerscope.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 260,
  "filename": "jsdoc/innerscope.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 26,
      "index": 260,
      "line": 15,
    },
    "start": Position {
      "column": 8,
      "index": 215,
      "line": 14,
    },
  },
  "member": "from",
  "memberOf": "headers",
  "name": "from",
  "params": Array [],
  "path": Array [
    Object {
      "name": "headers",
    },
    Object {
      "name": "from",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 215,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "",
}
`;

exports[`./jsdoc/innerscope2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 283,
  "filename": "jsdoc/innerscope2.js",
  "fnName": "Message",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 283,
      "line": 18,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Message",
  "params": Array [
    Object {
      "member": "to",
      "name": "to",
    },
  ],
  "path": Array [
    Object {
      "name": "Message",
    },
  ],
  "raw": "/** @constructor */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/innerscope2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 110,
  "filename": "jsdoc/innerscope2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 110,
      "line": 7,
    },
    "start": Position {
      "column": 4,
      "index": 71,
      "line": 6,
    },
  },
  "member": "to",
  "memberOf": "headers",
  "name": "to",
  "params": Array [
    Object {
      "member": "to",
      "name": "to",
    },
  ],
  "path": Array [
    Object {
      "name": "headers",
    },
    Object {
      "name": "to",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 71,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/innerscope2.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 206,
  "filename": "jsdoc/innerscope2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 21,
      "index": 206,
      "line": 12,
    },
    "start": Position {
      "column": 12,
      "index": 166,
      "line": 11,
    },
  },
  "member": "cache",
  "memberOf": "headers",
  "mutable": true,
  "name": "cache",
  "params": Array [],
  "path": Array [
    Object {
      "name": "headers",
    },
  ],
  "properties": Array [],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 166,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/innerscope2.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 272,
  "filename": "jsdoc/innerscope2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 26,
      "index": 272,
      "line": 16,
    },
    "start": Position {
      "column": 8,
      "index": 227,
      "line": 15,
    },
  },
  "member": "from",
  "memberOf": "headers",
  "name": "from",
  "params": Array [],
  "path": Array [
    Object {
      "name": "headers",
    },
    Object {
      "name": "from",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 227,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "",
}
`;

exports[`./jsdoc/instanceproperty.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 31,
  "filename": "jsdoc/instanceproperty.js",
  "fnName": "Foo",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 31,
      "line": 2,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "raw": "/** @class */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/instanceproperty.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Set the bar.",
  "end": 134,
  "filename": "jsdoc/instanceproperty.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 134,
      "line": 8,
    },
    "start": Position {
      "column": 0,
      "index": 33,
      "line": 4,
    },
  },
  "member": "setBar",
  "memberOf": "Foo.prototype",
  "name": "setBar",
  "params": Array [
    Object {
      "member": "bar",
      "name": "bar",
    },
  ],
  "path": Array [
    Object {
      "name": "Foo",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "setBar",
    },
  ],
  "raw": "/** Set the bar. */",
  "scope": "instance",
  "start": 33,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/instanceproperty.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The bar.",
  "end": 131,
  "filename": "jsdoc/instanceproperty.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 19,
      "index": 131,
      "line": 7,
    },
    "start": Position {
      "column": 4,
      "index": 96,
      "line": 6,
    },
  },
  "member": "bar",
  "memberOf": "this",
  "name": "bar",
  "params": Array [
    Object {
      "member": "bar",
      "name": "bar",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "bar",
    },
  ],
  "raw": "/** The bar. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "scope": "instance",
  "start": 96,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/interface-assignment.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 36,
  "filename": "jsdoc/interface-assignment.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 18,
      "index": 36,
      "line": 2,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "myCorp",
  "name": "myCorp",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "myCorp",
    },
  ],
  "properties": Array [],
  "raw": "/** @namespace */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/interface-assignment.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 261,
  "filename": "jsdoc/interface-assignment.js",
  "ignore": false,
  "isInterface": true,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 261,
      "line": 15,
    },
    "start": Position {
      "column": 0,
      "index": 38,
      "line": 4,
    },
  },
  "member": "IWorker",
  "memberOf": "myCorp",
  "name": "IWorker",
  "path": Array [
    Object {
      "name": "myCorp",
    },
    Object {
      "name": "IWorker",
    },
  ],
  "properties": Array [
    Object {
      "filename": "jsdoc/interface-assignment.js",
      "isAsync": false,
      "isConstructor": true,
      "isGenerator": false,
      "kind": "constructor",
      "member": "constructor",
      "memberOf": "IWorker.prototype",
      "name": "constructor",
      "params": Array [
        Object {
          "member": "workerName",
          "name": "workerName",
        },
      ],
      "scope": "instance",
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "IWorker",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "IWorker",
          },
        ],
        "string": "IWorker",
      },
    },
    Object {
      "description": "Interface for doing some work.",
      "filename": "jsdoc/interface-assignment.js",
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "member": "work",
      "memberOf": "IWorker.prototype",
      "name": "work",
      "params": Array [],
      "scope": "instance",
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "IWorker",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "IWorker",
          },
        ],
        "string": "IWorker",
      },
    },
  ],
  "raw": "/**
 * @interface
 */",
  "start": 38,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "IWorker",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "IWorker",
      },
    ],
    "string": "IWorker",
  },
}
`;

exports[`./jsdoc/interface-assignment.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Name of the worker.",
  "end": 157,
  "filename": "jsdoc/interface-assignment.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 34,
      "index": 157,
      "line": 9,
    },
    "start": Position {
      "column": 8,
      "index": 131,
      "line": 9,
    },
  },
  "raw": "/** Name of the worker. */",
  "start": 131,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/interface-assignment.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Interface for doing some work.",
  "end": 258,
  "filename": "jsdoc/interface-assignment.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 13,
      "index": 258,
      "line": 14,
    },
    "start": Position {
      "column": 4,
      "index": 207,
      "line": 13,
    },
  },
  "member": "work",
  "memberOf": "IWorker.prototype",
  "name": "work",
  "params": Array [],
  "path": Array [
    Object {
      "name": "IWorker",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "work",
    },
  ],
  "raw": "/** Interface for doing some work. */",
  "scope": "instance",
  "start": 207,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "IWorker",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "IWorker",
      },
    ],
    "string": "IWorker",
  },
}
`;

exports[`./jsdoc/interface-implements.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 58,
  "filename": "jsdoc/interface-implements.js",
  "fnName": "ITester",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "isInterface": true,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 21,
      "index": 58,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 15,
      "line": 3,
    },
  },
  "name": "ITester",
  "params": Array [],
  "path": Array [
    Object {
      "name": "ITester",
    },
  ],
  "raw": "/**
 * @interface
 */",
  "start": 15,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/interface-implements.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 118,
  "filename": "jsdoc/interface-implements.js",
  "ignore": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 32,
      "index": 118,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 60,
      "line": 8,
    },
  },
  "member": "hello",
  "memberOf": "ITester.prototype",
  "name": "hello",
  "path": Array [
    Object {
      "name": "ITester",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "hello",
    },
  ],
  "raw": "/**
 * @type {string}
 */",
  "scope": "instance",
  "start": 60,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "123",
}
`;

exports[`./jsdoc/interface-implements.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 186,
  "filename": "jsdoc/interface-implements.js",
  "ignore": false,
  "isEnum": true,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 186,
      "line": 19,
    },
    "start": Position {
      "column": 0,
      "index": 120,
      "line": 13,
    },
  },
  "member": "type",
  "memberOf": "ITester",
  "name": "type",
  "path": Array [
    Object {
      "name": "ITester",
    },
    Object {
      "name": "type",
    },
  ],
  "properties": Array [
    Object {
      "kind": "property",
      "member": "KEYDOWN",
      "memberOf": "type",
      "name": "KEYDOWN",
      "path": Array [
        Object {
          "name": "ITester",
        },
        Object {
          "name": "type",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 9,
    },
    Object {
      "kind": "property",
      "member": "KEYUP",
      "memberOf": "type",
      "name": "KEYUP",
      "path": Array [
        Object {
          "name": "ITester",
        },
        Object {
          "name": "type",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 11,
    },
  ],
  "raw": "/**
 * @enum
 */",
  "start": 120,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/interface-implements.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "before each method",
  "end": 263,
  "filename": "jsdoc/interface-implements.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 45,
      "index": 263,
      "line": 24,
    },
    "start": Position {
      "column": 0,
      "index": 188,
      "line": 21,
    },
  },
  "member": "beforeEach",
  "memberOf": "ITester.prototype",
  "name": "beforeEach",
  "params": Array [],
  "path": Array [
    Object {
      "name": "ITester",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "beforeEach",
    },
  ],
  "raw": "/**
 * before each method
 */",
  "scope": "instance",
  "start": 188,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/interface-implements.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "it method.",
  "end": 324,
  "filename": "jsdoc/interface-implements.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 37,
      "index": 324,
      "line": 29,
    },
    "start": Position {
      "column": 0,
      "index": 265,
      "line": 26,
    },
  },
  "member": "it",
  "memberOf": "ITester.prototype",
  "name": "it",
  "params": Array [],
  "path": Array [
    Object {
      "name": "ITester",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "it",
    },
  ],
  "raw": "/**
 * it method.
 */",
  "scope": "instance",
  "start": 265,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/interface-implements.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 397,
  "filename": "jsdoc/interface-implements.js",
  "fnName": "MyTester",
  "ignore": false,
  "implements": JSDocType {
    "parsed": Array [
      Object {
        "name": "ITester",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "ITester",
      },
    ],
    "string": "ITester",
  },
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 22,
      "index": 397,
      "line": 35,
    },
    "start": Position {
      "column": 0,
      "index": 326,
      "line": 31,
    },
  },
  "name": "MyTester",
  "params": Array [],
  "path": Array [
    Object {
      "name": "MyTester",
    },
  ],
  "raw": "/**
 * @constructor
 * @implements {ITester}
 */",
  "start": 326,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/interface-implements.js snapshots: Item 7 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 454,
  "filename": "jsdoc/interface-implements.js",
  "ignore": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 33,
      "index": 454,
      "line": 38,
    },
    "start": Position {
      "column": 0,
      "index": 399,
      "line": 37,
    },
  },
  "member": "hello",
  "memberOf": "MyTester.prototype",
  "name": "hello",
  "path": Array [
    Object {
      "name": "MyTester",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "hello",
    },
  ],
  "raw": "/** @type {string} */",
  "scope": "instance",
  "start": 399,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "234",
}
`;

exports[`./jsdoc/interface-implements.js snapshots: Item 8 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 559,
  "filename": "jsdoc/interface-implements.js",
  "ignore": false,
  "isEnum": true,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 559,
      "line": 46,
    },
    "start": Position {
      "column": 0,
      "index": 456,
      "line": 40,
    },
  },
  "member": "type",
  "memberOf": "MyTester",
  "name": "type",
  "path": Array [
    Object {
      "name": "MyTester",
    },
    Object {
      "name": "type",
    },
  ],
  "properties": Array [
    Object {
      "description": "keyboard up",
      "ignore": false,
      "path": Array [
        Object {
          "name": "MyTester",
        },
        Object {
          "name": "type",
        },
      ],
      "tags": Array [],
    },
    Object {
      "kind": "property",
      "member": "KEYUP",
      "memberOf": "type",
      "name": "KEYUP",
      "path": Array [
        Object {
          "name": "MyTester",
        },
        Object {
          "name": "type",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 11,
    },
    Object {
      "kind": "property",
      "member": "KEYLEFT",
      "memberOf": "type",
      "name": "KEYLEFT",
      "path": Array [
        Object {
          "name": "MyTester",
        },
        Object {
          "name": "type",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 10,
    },
  ],
  "raw": "/** @enum */",
  "start": 456,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/interface-implements.js snapshots: Item 9 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "keyboard up",
  "end": 524,
  "filename": "jsdoc/interface-implements.js",
  "ignore": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 14,
      "index": 524,
      "line": 43,
    },
    "start": Position {
      "column": 4,
      "index": 491,
      "line": 42,
    },
  },
  "member": "KEYDOWN",
  "memberOf": "type",
  "name": "KEYDOWN",
  "path": Array [
    Object {
      "name": "MyTester",
    },
    Object {
      "name": "type",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "keyboard up",
        "ignore": false,
        "tags": Array [],
      },
      "code": "KEYDOWN: 9",
      "ctx": Object {
        "kind": "property",
        "member": "KEYDOWN",
        "memberOf": undefined,
        "name": "KEYDOWN",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
        "value": 9,
      },
      "description": "keyboard up",
      "end": 524,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 14,
          "index": 524,
          "line": 43,
        },
        "start": Position {
          "column": 4,
          "index": 491,
          "line": 42,
        },
      },
      "member": "KEYDOWN",
      "memberOf": undefined,
      "name": "KEYDOWN",
      "path": Array [],
      "raw": "/** keyboard up */",
      "start": 491,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 9,
    },
  ],
  "raw": "/** keyboard up */",
  "start": 491,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 9,
}
`;

exports[`./jsdoc/interface-implements.js snapshots: Item 10 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "my tester's beforeEach method.",
  "end": 648,
  "filename": "jsdoc/interface-implements.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 46,
      "index": 648,
      "line": 50,
    },
    "start": Position {
      "column": 0,
      "index": 560,
      "line": 47,
    },
  },
  "member": "beforeEach",
  "memberOf": "MyTester.prototype",
  "name": "beforeEach",
  "params": Array [],
  "path": Array [
    Object {
      "name": "MyTester",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "beforeEach",
    },
  ],
  "raw": "/**
 * my tester's beforeEach method.
 */",
  "scope": "instance",
  "start": 560,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/interface-implements.js snapshots: Item 11 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 732,
  "filename": "jsdoc/interface-implements.js",
  "fnName": "IWorker",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "isInterface": true,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 21,
      "index": 732,
      "line": 56,
    },
    "start": Position {
      "column": 0,
      "index": 689,
      "line": 53,
    },
  },
  "name": "IWorker",
  "params": Array [],
  "path": Array [
    Object {
      "name": "IWorker",
    },
  ],
  "raw": "/**
 * @interface
 */",
  "start": 689,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/interface-implements.js snapshots: Item 12 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Interface for doing some work.",
  "end": 810,
  "filename": "jsdoc/interface-implements.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 39,
      "index": 810,
      "line": 58,
    },
    "start": Position {
      "column": 0,
      "index": 733,
      "line": 57,
    },
  },
  "member": "work",
  "memberOf": "IWorker.prototype",
  "name": "work",
  "params": Array [],
  "path": Array [
    Object {
      "name": "IWorker",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "work",
    },
  ],
  "raw": "/** Interface for doing some work. */",
  "scope": "instance",
  "start": 733,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/interface-implements.js snapshots: Item 13 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 883,
  "filename": "jsdoc/interface-implements.js",
  "fnName": "MyWorker",
  "ignore": false,
  "implements": JSDocType {
    "parsed": Array [
      Object {
        "name": "IWorker",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "IWorker",
      },
    ],
    "string": "IWorker",
  },
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 22,
      "index": 883,
      "line": 64,
    },
    "start": Position {
      "column": 0,
      "index": 812,
      "line": 60,
    },
  },
  "name": "MyWorker",
  "params": Array [],
  "path": Array [
    Object {
      "name": "MyWorker",
    },
  ],
  "raw": "/**
 * @constructor
 * @implements {IWorker}
 */",
  "start": 812,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/interface-implements.js snapshots: Item 14 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Do some work.",
  "end": 945,
  "filename": "jsdoc/interface-implements.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 40,
      "index": 945,
      "line": 66,
    },
    "start": Position {
      "column": 0,
      "index": 884,
      "line": 65,
    },
  },
  "member": "work",
  "memberOf": "MyWorker.prototype",
  "name": "work",
  "params": Array [],
  "path": Array [
    Object {
      "name": "MyWorker",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "work",
    },
  ],
  "raw": "/** Do some work. */",
  "scope": "instance",
  "start": 884,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/interface-implements.js snapshots: Item 15 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 1072,
  "filename": "jsdoc/interface-implements.js",
  "fnName": "MyIncompleteWorker",
  "ignore": false,
  "implements": JSDocType {
    "parsed": Array [
      Object {
        "name": "IWorker",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "IWorker",
      },
    ],
    "string": "IWorker",
  },
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 32,
      "index": 1072,
      "line": 73,
    },
    "start": Position {
      "column": 0,
      "index": 991,
      "line": 69,
    },
  },
  "name": "MyIncompleteWorker",
  "params": Array [],
  "path": Array [
    Object {
      "name": "MyIncompleteWorker",
    },
  ],
  "raw": "/**
 * @constructor
 * @implements {IWorker}
 */",
  "start": 991,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/interface-implements2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 95,
  "filename": "jsdoc/interface-implements2.js",
  "ignore": false,
  "isInterface": true,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 95,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "IWorker",
  "path": Array [
    Object {
      "name": "IWorker",
    },
  ],
  "properties": Array [
    Object {
      "description": "Interface for doing some work.",
      "filename": "jsdoc/interface-implements2.js",
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "member": "work",
      "memberOf": "IWorker.prototype",
      "name": "work",
      "params": Array [],
      "scope": "instance",
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "IWorker",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "IWorker",
          },
        ],
        "string": "IWorker",
      },
    },
  ],
  "raw": "/**
 * @interface
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "IWorker",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "IWorker",
      },
    ],
    "string": "IWorker",
  },
}
`;

exports[`./jsdoc/interface-implements2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Interface for doing some work.",
  "end": 93,
  "filename": "jsdoc/interface-implements2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 13,
      "index": 93,
      "line": 6,
    },
    "start": Position {
      "column": 4,
      "index": 42,
      "line": 5,
    },
  },
  "member": "work",
  "memberOf": "IWorker.prototype",
  "name": "work",
  "params": Array [],
  "path": Array [
    Object {
      "name": "IWorker",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "work",
    },
  ],
  "raw": "/** Interface for doing some work. */",
  "scope": "instance",
  "start": 42,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "IWorker",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "IWorker",
      },
    ],
    "string": "IWorker",
  },
}
`;

exports[`./jsdoc/interface-implements2.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 233,
  "filename": "jsdoc/interface-implements2.js",
  "ignore": false,
  "implements": JSDocType {
    "parsed": Array [
      Object {
        "name": "IWorker",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "IWorker",
      },
    ],
    "string": "IWorker",
  },
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 233,
      "line": 18,
    },
    "start": Position {
      "column": 0,
      "index": 97,
      "line": 9,
    },
  },
  "name": "MyWorker",
  "path": Array [
    Object {
      "name": "MyWorker",
    },
  ],
  "properties": Array [
    Object {
      "description": "Do some work.",
      "filename": "jsdoc/interface-implements2.js",
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "member": "work",
      "memberOf": "MyWorker.prototype",
      "name": "work",
      "params": Array [],
      "scope": "instance",
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "MyWorker",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "MyWorker",
          },
        ],
        "string": "MyWorker",
      },
    },
    Object {
      "description": "Process a thing.",
      "filename": "jsdoc/interface-implements2.js",
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "member": "process",
      "memberOf": "MyWorker.prototype",
      "name": "process",
      "params": Array [],
      "scope": "instance",
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "MyWorker",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "MyWorker",
          },
        ],
        "string": "MyWorker",
      },
    },
  ],
  "raw": "/**
 * @implements {IWorker}
 */",
  "start": 97,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "MyWorker",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "MyWorker",
      },
    ],
    "string": "MyWorker",
  },
}
`;

exports[`./jsdoc/interface-implements2.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Do some work.",
  "end": 185,
  "filename": "jsdoc/interface-implements2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 13,
      "index": 185,
      "line": 14,
    },
    "start": Position {
      "column": 4,
      "index": 151,
      "line": 13,
    },
  },
  "member": "work",
  "memberOf": "MyWorker.prototype",
  "name": "work",
  "params": Array [],
  "path": Array [
    Object {
      "name": "MyWorker",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "work",
    },
  ],
  "raw": "/** Do some work. */",
  "scope": "instance",
  "start": 151,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "MyWorker",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "MyWorker",
      },
    ],
    "string": "MyWorker",
  },
}
`;

exports[`./jsdoc/interface-implements2.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Process a thing.",
  "end": 231,
  "filename": "jsdoc/interface-implements2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 16,
      "index": 231,
      "line": 17,
    },
    "start": Position {
      "column": 4,
      "index": 191,
      "line": 16,
    },
  },
  "member": "process",
  "memberOf": "MyWorker.prototype",
  "name": "process",
  "params": Array [],
  "path": Array [
    Object {
      "name": "MyWorker",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "process",
    },
  ],
  "raw": "/** Process a thing. */",
  "scope": "instance",
  "start": 191,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "MyWorker",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "MyWorker",
      },
    ],
    "string": "MyWorker",
  },
}
`;

exports[`./jsdoc/interface-implements2.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 295,
  "filename": "jsdoc/interface-implements2.js",
  "ignore": false,
  "implements": JSDocType {
    "parsed": Array [
      Object {
        "name": "IWorker",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "IWorker",
      },
    ],
    "string": "IWorker",
  },
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 27,
      "index": 295,
      "line": 23,
    },
    "start": Position {
      "column": 0,
      "index": 235,
      "line": 20,
    },
  },
  "name": "MyIncompleteWorker",
  "path": Array [
    Object {
      "name": "MyIncompleteWorker",
    },
  ],
  "properties": Array [],
  "raw": "/**
 * @implements {IWorker}
 */",
  "start": 235,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "MyIncompleteWorker",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "MyIncompleteWorker",
      },
    ],
    "string": "MyIncompleteWorker",
  },
}
`;

exports[`./jsdoc/interfacetag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Virtual doclet for an interface.",
  "end": 77,
  "filename": "jsdoc/interfacetag2.js",
  "ignore": false,
  "isInterface": true,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 77,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "raw": "/**
 * Virtual doclet for an interface.
 *
 * @interface VirtualInterface
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/interfacetag3.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "My structural interface.",
  "end": 85,
  "filename": "jsdoc/interfacetag3.js",
  "fnName": "MyStructuralInterface",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "isRecord": true,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 35,
      "index": 85,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "MyStructuralInterface",
  "params": Array [],
  "path": Array [
    Object {
      "name": "MyStructuralInterface",
    },
  ],
  "raw": "/**
 * My structural interface.
 *
 * @record
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/kindtag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 28,
  "filename": "jsdoc/kindtag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 28,
      "line": 2,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "x",
  "mutable": true,
  "name": "x",
  "path": Array [
    Object {
      "name": "x",
    },
  ],
  "raw": "/** @kind function */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/lends.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 365,
  "filename": "jsdoc/lends.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 365,
      "line": 16,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "Person",
  "mutable": true,
  "name": "Person",
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "raw": "/** @class */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/lends.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 362,
  "filename": "jsdoc/lends.js",
  "ignore": false,
  "kind": "object",
  "lends": Array [],
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 362,
      "line": 15,
    },
    "start": Position {
      "column": 4,
      "index": 42,
      "line": 3,
    },
  },
  "member": "Person",
  "mutable": true,
  "name": "Person",
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "description": "Set up initial values.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Person",
        },
      ],
      "tags": Array [],
    },
    Object {
      "description": "Speak a message.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Person",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** @lends Person# */",
  "start": 42,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/lends.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Set up initial values.",
  "end": 227,
  "filename": "jsdoc/lends.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 227,
      "line": 9,
    },
    "start": Position {
      "column": 8,
      "index": 78,
      "line": 5,
    },
  },
  "member": "initialize",
  "memberOf": "Person",
  "mutable": true,
  "name": "initialize",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Set up initial values.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Set up initial values.",
      "end": 227,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 227,
          "line": 9,
        },
        "start": Position {
          "column": 8,
          "index": 78,
          "line": 5,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** Set up initial values. */",
      "start": 78,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.name = name;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "name",
        "memberOf": "this",
        "name": "name",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The name of the person.",
      "end": 217,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 29,
          "index": 217,
          "line": 8,
        },
        "start": Position {
          "column": 12,
          "index": 157,
          "line": 7,
        },
      },
      "member": "name",
      "memberOf": "this",
      "name": "name",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "name",
        },
      ],
      "raw": "/** The name of the person. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 157,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Speak a message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "say: function (message) {
  return this.name + \\" says: \\" + message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message.",
      "end": 356,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 356,
          "line": 14,
        },
        "start": Position {
          "column": 8,
          "index": 238,
          "line": 11,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [],
      "raw": "/** Speak a message. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 238,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Set up initial values. */",
  "start": 78,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/lends.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The name of the person.",
  "end": 217,
  "filename": "jsdoc/lends.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 29,
      "index": 217,
      "line": 8,
    },
    "start": Position {
      "column": 12,
      "index": 157,
      "line": 7,
    },
  },
  "member": "name",
  "memberOf": "this",
  "mutable": true,
  "name": "name",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "name",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Set up initial values.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Set up initial values.",
      "end": 227,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 227,
          "line": 9,
        },
        "start": Position {
          "column": 8,
          "index": 78,
          "line": 5,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** Set up initial values. */",
      "start": 78,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.name = name;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "name",
        "memberOf": "this",
        "name": "name",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The name of the person.",
      "end": 217,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 29,
          "index": 217,
          "line": 8,
        },
        "start": Position {
          "column": 12,
          "index": 157,
          "line": 7,
        },
      },
      "member": "name",
      "memberOf": "this",
      "name": "name",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "name",
        },
      ],
      "raw": "/** The name of the person. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 157,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Speak a message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "say: function (message) {
  return this.name + \\" says: \\" + message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message.",
      "end": 356,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 356,
          "line": 14,
        },
        "start": Position {
          "column": 8,
          "index": 238,
          "line": 11,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [],
      "raw": "/** Speak a message. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 238,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** The name of the person. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 157,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/lends.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Speak a message.",
  "end": 356,
  "filename": "jsdoc/lends.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 356,
      "line": 14,
    },
    "start": Position {
      "column": 8,
      "index": 238,
      "line": 11,
    },
  },
  "member": "say",
  "memberOf": "Person",
  "mutable": true,
  "name": "say",
  "params": Array [
    Object {
      "member": "message",
      "name": "message",
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Set up initial values.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Set up initial values.",
      "end": 227,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 227,
          "line": 9,
        },
        "start": Position {
          "column": 8,
          "index": 78,
          "line": 5,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** Set up initial values. */",
      "start": 78,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.name = name;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "name",
        "memberOf": "this",
        "name": "name",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The name of the person.",
      "end": 217,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 29,
          "index": 217,
          "line": 8,
        },
        "start": Position {
          "column": 12,
          "index": 157,
          "line": 7,
        },
      },
      "member": "name",
      "memberOf": "this",
      "name": "name",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "name",
        },
      ],
      "raw": "/** The name of the person. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 157,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Speak a message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "say: function (message) {
  return this.name + \\" says: \\" + message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message.",
      "end": 356,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 356,
          "line": 14,
        },
        "start": Position {
          "column": 8,
          "index": 238,
          "line": 11,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [],
      "raw": "/** Speak a message. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 238,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Speak a message. */",
  "returns": Object {
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "Number",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "Number",
        },
      ],
      "string": "Number",
    },
  },
  "start": 238,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/lends2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 386,
  "filename": "jsdoc/lends2.js",
  "ignore": false,
  "kind": "object",
  "lends": Array [],
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 386,
      "line": 17,
    },
    "start": Position {
      "column": 4,
      "index": 29,
      "line": 3,
    },
  },
  "member": "Person",
  "mutable": true,
  "name": "Person",
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "description": "Construct a Person.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Person",
        },
      ],
      "tags": Array [
        Object {
          "description": "            ",
          "name": "Person",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "            @constructs Person",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "Person",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "            ",
                "tag": "@constructs",
                "type": "",
              },
            },
            Object {
              "number": 2,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
      ],
    },
    Object {
      "description": "Speak a message.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Person",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** @lends Person# */",
  "start": 29,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/lends2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Construct a Person.",
  "end": 251,
  "filename": "jsdoc/lends2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 251,
      "line": 11,
    },
    "start": Position {
      "column": 8,
      "index": 65,
      "line": 5,
    },
  },
  "member": "initialize",
  "memberOf": "Person",
  "mutable": true,
  "name": "initialize",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Construct a Person.",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "            ",
            "name": "Person",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "            @constructs Person",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "Person",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "            ",
                  "tag": "@constructs",
                  "type": "",
                },
              },
              Object {
                "number": 2,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
        ],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Construct a Person.",
      "end": 251,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 251,
          "line": 11,
        },
        "start": Position {
          "column": 8,
          "index": 65,
          "line": 5,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** Construct a Person.
            @constructs Person
         */",
      "start": 65,
      "tags": Array [
        Object {
          "description": "            ",
          "name": "Person",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "            @constructs Person",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "Person",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "            ",
                "tag": "@constructs",
                "type": "",
              },
            },
            Object {
              "number": 2,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.name = name;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "name",
        "memberOf": "this",
        "name": "name",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The name of the person.",
      "end": 241,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 29,
          "index": 241,
          "line": 10,
        },
        "start": Position {
          "column": 12,
          "index": 181,
          "line": 9,
        },
      },
      "member": "name",
      "memberOf": "this",
      "name": "name",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "name",
        },
      ],
      "raw": "/** The name of the person. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 181,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Speak a message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "say: function (message) {
  return this.name + \\" says: \\" + message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message.",
      "end": 380,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 380,
          "line": 16,
        },
        "start": Position {
          "column": 8,
          "index": 262,
          "line": 13,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [],
      "raw": "/** Speak a message. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 262,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Construct a Person.
            @constructs Person
         */",
  "start": 65,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/lends2.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The name of the person.",
  "end": 241,
  "filename": "jsdoc/lends2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 29,
      "index": 241,
      "line": 10,
    },
    "start": Position {
      "column": 12,
      "index": 181,
      "line": 9,
    },
  },
  "member": "name",
  "memberOf": "this",
  "mutable": true,
  "name": "name",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "name",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Construct a Person.",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "            ",
            "name": "Person",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "            @constructs Person",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "Person",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "            ",
                  "tag": "@constructs",
                  "type": "",
                },
              },
              Object {
                "number": 2,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
        ],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Construct a Person.",
      "end": 251,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 251,
          "line": 11,
        },
        "start": Position {
          "column": 8,
          "index": 65,
          "line": 5,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** Construct a Person.
            @constructs Person
         */",
      "start": 65,
      "tags": Array [
        Object {
          "description": "            ",
          "name": "Person",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "            @constructs Person",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "Person",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "            ",
                "tag": "@constructs",
                "type": "",
              },
            },
            Object {
              "number": 2,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.name = name;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "name",
        "memberOf": "this",
        "name": "name",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The name of the person.",
      "end": 241,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 29,
          "index": 241,
          "line": 10,
        },
        "start": Position {
          "column": 12,
          "index": 181,
          "line": 9,
        },
      },
      "member": "name",
      "memberOf": "this",
      "name": "name",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "name",
        },
      ],
      "raw": "/** The name of the person. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 181,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Speak a message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "say: function (message) {
  return this.name + \\" says: \\" + message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message.",
      "end": 380,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 380,
          "line": 16,
        },
        "start": Position {
          "column": 8,
          "index": 262,
          "line": 13,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [],
      "raw": "/** Speak a message. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 262,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** The name of the person. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 181,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/lends2.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Speak a message.",
  "end": 380,
  "filename": "jsdoc/lends2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 380,
      "line": 16,
    },
    "start": Position {
      "column": 8,
      "index": 262,
      "line": 13,
    },
  },
  "member": "say",
  "memberOf": "Person",
  "mutable": true,
  "name": "say",
  "params": Array [
    Object {
      "member": "message",
      "name": "message",
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Construct a Person.",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "            ",
            "name": "Person",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 1,
                "source": "            @constructs Person",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "Person",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "            ",
                  "tag": "@constructs",
                  "type": "",
                },
              },
              Object {
                "number": 2,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
        ],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Construct a Person.",
      "end": 251,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 251,
          "line": 11,
        },
        "start": Position {
          "column": 8,
          "index": 65,
          "line": 5,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** Construct a Person.
            @constructs Person
         */",
      "start": 65,
      "tags": Array [
        Object {
          "description": "            ",
          "name": "Person",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 1,
              "source": "            @constructs Person",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "Person",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "            ",
                "tag": "@constructs",
                "type": "",
              },
            },
            Object {
              "number": 2,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.name = name;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "name",
        "memberOf": "this",
        "name": "name",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The name of the person.",
      "end": 241,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 29,
          "index": 241,
          "line": 10,
        },
        "start": Position {
          "column": 12,
          "index": 181,
          "line": 9,
        },
      },
      "member": "name",
      "memberOf": "this",
      "name": "name",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "name",
        },
      ],
      "raw": "/** The name of the person. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 181,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Speak a message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "say: function (message) {
  return this.name + \\" says: \\" + message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message.",
      "end": 380,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 380,
          "line": 16,
        },
        "start": Position {
          "column": 8,
          "index": 262,
          "line": 13,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [],
      "raw": "/** Speak a message. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 262,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Speak a message. */",
  "returns": Object {
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "Number",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "Number",
        },
      ],
      "string": "Number",
    },
  },
  "start": 262,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/lends3.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 377,
  "filename": "jsdoc/lends3.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 377,
      "line": 18,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "Person",
  "mutable": true,
  "name": "Person",
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "raw": "/** @class */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/lends3.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 374,
  "filename": "jsdoc/lends3.js",
  "ignore": false,
  "kind": "object",
  "lends": Array [],
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 374,
      "line": 17,
    },
    "start": Position {
      "column": 4,
      "index": 42,
      "line": 3,
    },
  },
  "member": "Person",
  "mutable": true,
  "name": "Person",
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "description": "Set up initial values.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Person",
        },
      ],
      "tags": Array [],
    },
    Object {
      "description": "Speak a message.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Person",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/**
     * @lends Person#
     */",
  "start": 42,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/lends3.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Set up initial values.",
  "end": 239,
  "filename": "jsdoc/lends3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 239,
      "line": 11,
    },
    "start": Position {
      "column": 8,
      "index": 90,
      "line": 7,
    },
  },
  "member": "initialize",
  "memberOf": "Person",
  "mutable": true,
  "name": "initialize",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Set up initial values.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Set up initial values.",
      "end": 239,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 239,
          "line": 11,
        },
        "start": Position {
          "column": 8,
          "index": 90,
          "line": 7,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** Set up initial values. */",
      "start": 90,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.name = name;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "name",
        "memberOf": "this",
        "name": "name",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The name of the person.",
      "end": 229,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 29,
          "index": 229,
          "line": 10,
        },
        "start": Position {
          "column": 12,
          "index": 169,
          "line": 9,
        },
      },
      "member": "name",
      "memberOf": "this",
      "name": "name",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "name",
        },
      ],
      "raw": "/** The name of the person. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 169,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Speak a message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "say: function (message) {
  return this.name + \\" says: \\" + message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message.",
      "end": 368,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 368,
          "line": 16,
        },
        "start": Position {
          "column": 8,
          "index": 250,
          "line": 13,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [],
      "raw": "/** Speak a message. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 250,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Set up initial values. */",
  "start": 90,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/lends3.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The name of the person.",
  "end": 229,
  "filename": "jsdoc/lends3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 29,
      "index": 229,
      "line": 10,
    },
    "start": Position {
      "column": 12,
      "index": 169,
      "line": 9,
    },
  },
  "member": "name",
  "memberOf": "this",
  "mutable": true,
  "name": "name",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "name",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Set up initial values.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Set up initial values.",
      "end": 239,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 239,
          "line": 11,
        },
        "start": Position {
          "column": 8,
          "index": 90,
          "line": 7,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** Set up initial values. */",
      "start": 90,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.name = name;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "name",
        "memberOf": "this",
        "name": "name",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The name of the person.",
      "end": 229,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 29,
          "index": 229,
          "line": 10,
        },
        "start": Position {
          "column": 12,
          "index": 169,
          "line": 9,
        },
      },
      "member": "name",
      "memberOf": "this",
      "name": "name",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "name",
        },
      ],
      "raw": "/** The name of the person. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 169,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Speak a message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "say: function (message) {
  return this.name + \\" says: \\" + message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message.",
      "end": 368,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 368,
          "line": 16,
        },
        "start": Position {
          "column": 8,
          "index": 250,
          "line": 13,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [],
      "raw": "/** Speak a message. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 250,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** The name of the person. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 169,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/lends3.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Speak a message.",
  "end": 368,
  "filename": "jsdoc/lends3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 368,
      "line": 16,
    },
    "start": Position {
      "column": 8,
      "index": 250,
      "line": 13,
    },
  },
  "member": "say",
  "memberOf": "Person",
  "mutable": true,
  "name": "say",
  "params": Array [
    Object {
      "member": "message",
      "name": "message",
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Set up initial values.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Set up initial values.",
      "end": 239,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 239,
          "line": 11,
        },
        "start": Position {
          "column": 8,
          "index": 90,
          "line": 7,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** Set up initial values. */",
      "start": 90,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "The name of the person.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "this.name = name;",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "property",
        "member": "name",
        "memberOf": "this",
        "name": "name",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "returnPotentials": TypeInferance {
          "potentials": Array [],
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "The name of the person.",
      "end": 229,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 29,
          "index": 229,
          "line": 10,
        },
        "start": Position {
          "column": 12,
          "index": 169,
          "line": 9,
        },
      },
      "member": "name",
      "memberOf": "this",
      "name": "name",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [
        Object {
          "name": "this",
        },
        Object {
          "name": "name",
        },
      ],
      "raw": "/** The name of the person. */",
      "returnPotentials": TypeInferance {
        "potentials": Array [],
      },
      "start": 169,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Speak a message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "say: function (message) {
  return this.name + \\" says: \\" + message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message.",
      "end": 368,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 368,
          "line": 16,
        },
        "start": Position {
          "column": 8,
          "index": 250,
          "line": 13,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [],
      "raw": "/** Speak a message. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 250,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Speak a message. */",
  "returns": Object {
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "Number",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "Number",
        },
      ],
      "string": "Number",
    },
  },
  "start": 250,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/lends4.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 375,
  "filename": "jsdoc/lends4.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "lends": Array [],
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 375,
      "line": 13,
    },
    "start": Position {
      "column": 8,
      "index": 61,
      "line": 3,
    },
  },
  "member": "Person",
  "mutable": true,
  "name": "Person",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "description": "",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Person",
        },
      ],
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @constructs */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
      ],
    },
    Object {
      "description": "Speak a message.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Person",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** @lends Person.prototype */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 61,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/lends4.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 221,
  "filename": "jsdoc/lends4.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 13,
      "index": 221,
      "line": 8,
    },
    "start": Position {
      "column": 12,
      "index": 114,
      "line": 5,
    },
  },
  "member": "initialize",
  "memberOf": "Person",
  "mutable": true,
  "name": "initialize",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @constructs */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "",
                  "tag": "@constructs",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
        ],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 221,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 13,
          "index": 221,
          "line": 8,
        },
        "start": Position {
          "column": 12,
          "index": 114,
          "line": 5,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** @constructs */",
      "start": 114,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @constructs */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Speak a message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "say: function (message) {
  return this.name + \\" says: \\" + message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message.",
      "end": 365,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 13,
          "index": 365,
          "line": 12,
        },
        "start": Position {
          "column": 12,
          "index": 235,
          "line": 9,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [],
      "raw": "/** Speak a message. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 235,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** @constructs */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 114,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/lends4.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Speak a message.",
  "end": 365,
  "filename": "jsdoc/lends4.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 13,
      "index": 365,
      "line": 12,
    },
    "start": Position {
      "column": 12,
      "index": 235,
      "line": 9,
    },
  },
  "member": "say",
  "memberOf": "Person",
  "mutable": true,
  "name": "say",
  "params": Array [
    Object {
      "member": "message",
      "name": "message",
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @constructs */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "",
                  "tag": "@constructs",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
        ],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 221,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 13,
          "index": 221,
          "line": 8,
        },
        "start": Position {
          "column": 12,
          "index": 114,
          "line": 5,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** @constructs */",
      "start": 114,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @constructs */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Speak a message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "say: function (message) {
  return this.name + \\" says: \\" + message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message.",
      "end": 365,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 13,
          "index": 365,
          "line": 12,
        },
        "start": Position {
          "column": 12,
          "index": 235,
          "line": 9,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [],
      "raw": "/** Speak a message. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 235,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Speak a message. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "returns": Object {
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "Number",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "Number",
        },
      ],
      "string": "Number",
    },
  },
  "start": 235,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/lends5.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 79,
  "filename": "jsdoc/lends5.js",
  "fnName": "Person",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 28,
      "index": 79,
      "line": 5,
    },
    "start": Position {
      "column": 4,
      "index": 18,
      "line": 2,
    },
  },
  "name": "Person",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "raw": "/**
     * @class Person
     */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 18,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/lends5.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 289,
  "filename": "jsdoc/lends5.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "prototype",
  "lends": Array [],
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 289,
      "line": 12,
    },
    "start": Position {
      "column": 43,
      "index": 124,
      "line": 7,
    },
  },
  "name": "prototype",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Person",
    },
    Object {
      "name": "prototype",
    },
  ],
  "properties": Array [
    Object {
      "description": "Speak a message.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Person",
        },
        Object {
          "name": "prototype",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** @lends Person.prototype */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 124,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/lends5.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Speak a message.",
  "end": 283,
  "filename": "jsdoc/lends5.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 283,
      "line": 11,
    },
    "start": Position {
      "column": 8,
      "index": 165,
      "line": 8,
    },
  },
  "member": "say",
  "memberOf": "prototype",
  "name": "say",
  "params": Array [
    Object {
      "member": "message",
      "name": "message",
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
    Object {
      "name": "prototype",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Speak a message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "say: function (message) {
  return this.name + \\" says: \\" + message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message.",
      "end": 283,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 283,
          "line": 11,
        },
        "start": Position {
          "column": 8,
          "index": 165,
          "line": 8,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [],
      "raw": "/** Speak a message. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 165,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Speak a message. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "returns": Object {
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "Number",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "Number",
        },
      ],
      "string": "Number",
    },
  },
  "start": 165,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/lends6.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 374,
  "filename": "jsdoc/lends6.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "lends": Array [],
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 374,
      "line": 13,
    },
    "start": Position {
      "column": 8,
      "index": 60,
      "line": 3,
    },
  },
  "member": "Person",
  "mutable": true,
  "name": "Person",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "description": "",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Person",
        },
      ],
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @constructs */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
      ],
    },
    Object {
      "description": "Speak a message.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Person",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** @lends Person.prototype */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 60,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/lends6.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 220,
  "filename": "jsdoc/lends6.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 13,
      "index": 220,
      "line": 8,
    },
    "start": Position {
      "column": 12,
      "index": 113,
      "line": 5,
    },
  },
  "member": "initialize",
  "memberOf": "Person",
  "mutable": true,
  "name": "initialize",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @constructs */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "",
                  "tag": "@constructs",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
        ],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 220,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 13,
          "index": 220,
          "line": 8,
        },
        "start": Position {
          "column": 12,
          "index": 113,
          "line": 5,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** @constructs */",
      "start": 113,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @constructs */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Speak a message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "say: function (message) {
  return this.name + \\" says: \\" + message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message.",
      "end": 364,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 13,
          "index": 364,
          "line": 12,
        },
        "start": Position {
          "column": 12,
          "index": 234,
          "line": 9,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [],
      "raw": "/** Speak a message. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 234,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** @constructs */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 113,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/lends6.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Speak a message.",
  "end": 364,
  "filename": "jsdoc/lends6.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 13,
      "index": 364,
      "line": 12,
    },
    "start": Position {
      "column": 12,
      "index": 234,
      "line": 9,
    },
  },
  "member": "say",
  "memberOf": "Person",
  "mutable": true,
  "name": "say",
  "params": Array [
    Object {
      "member": "message",
      "name": "message",
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @constructs */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "",
                  "tag": "@constructs",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
        ],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 220,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 13,
          "index": 220,
          "line": 8,
        },
        "start": Position {
          "column": 12,
          "index": 113,
          "line": 5,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** @constructs */",
      "start": 113,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @constructs */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Speak a message.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "say: function (message) {
  return this.name + \\" says: \\" + message;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
        ],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message.",
      "end": 364,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 13,
          "index": 364,
          "line": 12,
        },
        "start": Position {
          "column": 12,
          "index": 234,
          "line": 9,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "member": "message",
          "name": "message",
        },
      ],
      "path": Array [],
      "raw": "/** Speak a message. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 234,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Speak a message. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "returns": Object {
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "Number",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "Number",
        },
      ],
      "string": "Number",
    },
  },
  "start": 234,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/lends6.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 718,
  "filename": "jsdoc/lends6.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "lends": Array [],
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 718,
      "line": 27,
    },
    "start": Position {
      "column": 8,
      "index": 418,
      "line": 17,
    },
  },
  "member": "Robot",
  "mutable": true,
  "name": "Robot",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Robot",
    },
  ],
  "properties": Array [
    Object {
      "description": "",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Robot",
        },
      ],
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @constructs */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
      ],
    },
    Object {
      "description": "Feign emotion.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Robot",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** @lends Robot.prototype */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 418,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/lends6.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 577,
  "filename": "jsdoc/lends6.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 13,
      "index": 577,
      "line": 22,
    },
    "start": Position {
      "column": 12,
      "index": 470,
      "line": 19,
    },
  },
  "member": "initialize",
  "memberOf": "Robot",
  "mutable": true,
  "name": "initialize",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "Robot",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @constructs */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "",
                  "tag": "@constructs",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
        ],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 577,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 13,
          "index": 577,
          "line": 22,
        },
        "start": Position {
          "column": 12,
          "index": 470,
          "line": 19,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** @constructs */",
      "start": 470,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @constructs */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Feign emotion.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "emote: function () {
  return this.name + \\" loves you!\\";
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "emote",
        "memberOf": undefined,
        "name": "emote",
        "params": Array [],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Feign emotion.",
      "end": 708,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 13,
          "index": 708,
          "line": 26,
        },
        "start": Position {
          "column": 12,
          "index": 591,
          "line": 23,
        },
      },
      "member": "emote",
      "memberOf": undefined,
      "name": "emote",
      "params": Array [],
      "path": Array [],
      "raw": "/** Feign emotion. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 591,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** @constructs */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 470,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/lends6.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Feign emotion.",
  "end": 708,
  "filename": "jsdoc/lends6.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 13,
      "index": 708,
      "line": 26,
    },
    "start": Position {
      "column": 12,
      "index": 591,
      "line": 23,
    },
  },
  "member": "emote",
  "memberOf": "Robot",
  "mutable": true,
  "name": "emote",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Robot",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @constructs */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "",
                  "tag": "@constructs",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
        ],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 577,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 13,
          "index": 577,
          "line": 22,
        },
        "start": Position {
          "column": 12,
          "index": 470,
          "line": 19,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** @constructs */",
      "start": 470,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @constructs */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Feign emotion.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "emote: function () {
  return this.name + \\" loves you!\\";
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "emote",
        "memberOf": undefined,
        "name": "emote",
        "params": Array [],
        "returns": Object {
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Number",
              },
            ],
            "string": "Number",
          },
        },
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Feign emotion.",
      "end": 708,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 13,
          "index": 708,
          "line": 26,
        },
        "start": Position {
          "column": 12,
          "index": 591,
          "line": 23,
        },
      },
      "member": "emote",
      "memberOf": undefined,
      "name": "emote",
      "params": Array [],
      "path": Array [],
      "raw": "/** Feign emotion. */",
      "returns": Object {
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Number",
            },
          ],
          "string": "Number",
        },
      },
      "start": 591,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Feign emotion. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "returns": Object {
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "Number",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "Number",
        },
      ],
      "string": "Number",
    },
  },
  "start": 591,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/lendsglobal.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 229,
  "filename": "jsdoc/lendsglobal.js",
  "ignore": false,
  "kind": "object",
  "lends": Array [],
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 229,
      "line": 13,
    },
    "start": Position {
      "column": 13,
      "index": 23,
      "line": 2,
    },
  },
  "member": "globals",
  "memberOf": undefined,
  "name": "globals",
  "path": Array [],
  "properties": Array [
    Object {
      "description": "document me",
      "ignore": false,
      "path": Array [],
      "tags": Array [],
    },
    Object {
      "description": "",
      "ignore": false,
      "namespace": Object {},
      "path": Array [],
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @namespace */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@namespace",
                "type": "",
              },
            },
          ],
          "tag": "namespace",
          "type": "",
        },
      ],
    },
  ],
  "raw": "/** @lends */",
  "start": 23,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/lendsglobal.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 97,
  "filename": "jsdoc/lendsglobal.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 30,
      "index": 97,
      "line": 5,
    },
    "start": Position {
      "column": 8,
      "index": 48,
      "line": 4,
    },
  },
  "member": "'test'",
  "memberOf": "globals",
  "name": "'test'",
  "params": Array [],
  "path": Array [],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "document me",
        "ignore": false,
        "tags": Array [],
      },
      "code": "'test': function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "'test'",
        "memberOf": undefined,
        "name": "'test'",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "document me",
      "end": 97,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 30,
          "index": 97,
          "line": 5,
        },
        "start": Position {
          "column": 8,
          "index": 48,
          "line": 4,
        },
      },
      "member": "'test'",
      "memberOf": undefined,
      "name": "'test'",
      "params": Array [],
      "path": Array [],
      "raw": "/** document me */",
      "start": 48,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "namespace": Object {},
        "tags": Array [
          Object {
            "description": "",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @namespace */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "",
                  "tag": "@namespace",
                  "type": "",
                },
              },
            ],
            "tag": "namespace",
            "type": "",
          },
        ],
      },
      "code": "'test1': {
  'test2': function () {}
}",
      "ctx": Object {
        "kind": "property",
        "member": "'test1'",
        "memberOf": undefined,
        "name": "'test1'",
        "properties": Array [
          Object {
            "description": "document me",
            "ignore": false,
            "path": Array [],
            "tags": Array [],
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Object",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Object",
            },
          ],
          "string": "Object",
        },
      },
      "description": "",
      "end": 223,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 9,
          "index": 223,
          "line": 12,
        },
        "start": Position {
          "column": 8,
          "index": 108,
          "line": 7,
        },
      },
      "member": "'test1'",
      "memberOf": undefined,
      "name": "'test1'",
      "namespace": Object {},
      "path": Array [],
      "properties": Array [
        Object {
          "description": "document me",
          "ignore": false,
          "path": Array [],
          "tags": Array [],
        },
      ],
      "raw": "/** @namespace */",
      "start": 108,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @namespace */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@namespace",
                "type": "",
              },
            },
          ],
          "tag": "namespace",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Object",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Object",
          },
        ],
        "string": "Object",
      },
    },
    Object {
      "cmt": Object {
        "description": "document me",
        "ignore": false,
        "tags": Array [],
      },
      "code": "'test2': function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "'test2'",
        "memberOf": "'test1'",
        "name": "'test2'",
        "params": Array [],
        "properties": Array [
          Object {
            "cmt": Object {
              "description": "document me",
              "ignore": false,
              "tags": Array [],
            },
            "code": "'test2': function () {}",
            "ctx": Object {
              "isAsync": false,
              "isGenerator": false,
              "kind": "method",
              "member": "'test2'",
              "memberOf": undefined,
              "name": "'test2'",
              "params": Array [],
              "type": JSDocType {
                "parsed": Array [
                  Object {
                    "name": "Function",
                    "type": "NAME",
                  },
                ],
                "simple": Array [
                  Object {
                    "name": "Function",
                  },
                ],
                "string": "Function",
              },
            },
            "description": "document me",
            "end": 213,
            "ignore": false,
            "isAsync": false,
            "isGenerator": false,
            "kind": "method",
            "loc": Object {
              "end": Position {
                "column": 36,
                "index": 213,
                "line": 11,
              },
              "start": Position {
                "column": 12,
                "index": 158,
                "line": 10,
              },
            },
            "member": "'test2'",
            "memberOf": undefined,
            "name": "'test2'",
            "params": Array [],
            "path": Array [],
            "raw": "/** document me */",
            "start": 158,
            "tags": Array [],
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "name": "Function",
                  "type": "NAME",
                },
              ],
              "simple": Array [
                Object {
                  "name": "Function",
                },
              ],
              "string": "Function",
            },
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "document me",
      "end": 213,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 36,
          "index": 213,
          "line": 11,
        },
        "start": Position {
          "column": 12,
          "index": 158,
          "line": 10,
        },
      },
      "member": "'test2'",
      "memberOf": "'test1'",
      "name": "'test2'",
      "params": Array [],
      "path": Array [],
      "properties": Array [
        Object {
          "cmt": Object {
            "description": "document me",
            "ignore": false,
            "tags": Array [],
          },
          "code": "'test2': function () {}",
          "ctx": Object {
            "isAsync": false,
            "isGenerator": false,
            "kind": "method",
            "member": "'test2'",
            "memberOf": undefined,
            "name": "'test2'",
            "params": Array [],
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "name": "Function",
                  "type": "NAME",
                },
              ],
              "simple": Array [
                Object {
                  "name": "Function",
                },
              ],
              "string": "Function",
            },
          },
          "description": "document me",
          "end": 213,
          "ignore": false,
          "isAsync": false,
          "isGenerator": false,
          "kind": "method",
          "loc": Object {
            "end": Position {
              "column": 36,
              "index": 213,
              "line": 11,
            },
            "start": Position {
              "column": 12,
              "index": 158,
              "line": 10,
            },
          },
          "member": "'test2'",
          "memberOf": undefined,
          "name": "'test2'",
          "params": Array [],
          "path": Array [],
          "raw": "/** document me */",
          "start": 158,
          "tags": Array [],
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "Function",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "Function",
              },
            ],
            "string": "Function",
          },
        },
      ],
      "raw": "/** document me */",
      "start": 158,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** document me */",
  "start": 48,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/lendsglobal.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 223,
  "filename": "jsdoc/lendsglobal.js",
  "ignore": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 223,
      "line": 12,
    },
    "start": Position {
      "column": 8,
      "index": 108,
      "line": 7,
    },
  },
  "member": "'test1'",
  "memberOf": "globals",
  "name": "'test1'",
  "namespace": Object {},
  "path": Array [],
  "properties": Array [
    Object {
      "description": "document me",
      "ignore": false,
      "path": Array [],
      "tags": Array [],
    },
  ],
  "raw": "/** @namespace */",
  "start": 108,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/lendsglobal.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 213,
  "filename": "jsdoc/lendsglobal.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 36,
      "index": 213,
      "line": 11,
    },
    "start": Position {
      "column": 12,
      "index": 158,
      "line": 10,
    },
  },
  "member": "'test2'",
  "memberOf": "'test1'",
  "name": "'test2'",
  "params": Array [],
  "path": Array [],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "document me",
        "ignore": false,
        "tags": Array [],
      },
      "code": "'test2': function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "'test2'",
        "memberOf": undefined,
        "name": "'test2'",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "document me",
      "end": 213,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 36,
          "index": 213,
          "line": 11,
        },
        "start": Position {
          "column": 12,
          "index": 158,
          "line": 10,
        },
      },
      "member": "'test2'",
      "memberOf": undefined,
      "name": "'test2'",
      "params": Array [],
      "path": Array [],
      "raw": "/** document me */",
      "start": 158,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** document me */",
  "start": 158,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/letkeyword.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "My example module.",
  "end": 259,
  "filename": "jsdoc/letkeyword.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 259,
      "line": 14,
    },
    "start": Position {
      "column": 4,
      "index": 73,
      "line": 5,
    },
  },
  "member": "myModule",
  "mutable": true,
  "name": "myModule",
  "params": Array [],
  "path": Array [
    Object {
      "name": "myModule",
    },
  ],
  "properties": Array [
    Object {
      "description": "My example method.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "myModule",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/**
     * My example module.
     * @exports exampleModule
     */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 73,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/letkeyword.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "My example method.",
  "end": 252,
  "filename": "jsdoc/letkeyword.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 36,
      "index": 252,
      "line": 13,
    },
    "start": Position {
      "column": 8,
      "index": 170,
      "line": 10,
    },
  },
  "member": "exampleMethod",
  "memberOf": "myModule",
  "mutable": true,
  "name": "exampleMethod",
  "params": Array [],
  "path": Array [
    Object {
      "name": "myModule",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "My example method.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "exampleMethod: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "exampleMethod",
        "memberOf": undefined,
        "name": "exampleMethod",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "My example method.",
      "end": 252,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 36,
          "index": 252,
          "line": 13,
        },
        "start": Position {
          "column": 8,
          "index": 170,
          "line": 10,
        },
      },
      "member": "exampleMethod",
      "memberOf": undefined,
      "name": "exampleMethod",
      "params": Array [],
      "path": Array [],
      "raw": "/**
         * My example method.
         */",
      "start": 170,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/**
         * My example method.
         */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 170,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/licensetag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 29,
  "filename": "jsdoc/licensetag.js",
  "ignore": false,
  "license": "v2",
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 29,
      "line": 2,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "x",
  "mutable": true,
  "name": "x",
  "path": Array [
    Object {
      "name": "x",
    },
  ],
  "raw": "/** @license GPL v2 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/linktag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 33,
  "filename": "jsdoc/linktag.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 12,
      "index": 33,
      "line": 2,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "ns",
  "mutable": true,
  "name": "ns",
  "namespace": Object {
    "name": "ns",
  },
  "path": Array [
    Object {
      "name": "ns",
    },
  ],
  "properties": Array [],
  "raw": "/** @namespace ns */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/linktag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Similar to [the bar function]{@link bar}.",
  "end": 131,
  "filename": "jsdoc/linktag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 131,
      "line": 9,
    },
    "start": Position {
      "column": 0,
      "index": 35,
      "line": 4,
    },
  },
  "member": "foo",
  "memberOf": "ns",
  "name": "foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "ns",
    },
    Object {
      "name": "foo",
    },
  ],
  "raw": "/**
*  Similar to [the bar function]{@link bar}.
*  @see {@link bar}
*/",
  "see": "",
  "start": 35,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/linktag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 181,
  "filename": "jsdoc/linktag.js",
  "fnName": "bar",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 181,
      "line": 15,
    },
    "start": Position {
      "column": 0,
      "index": 133,
      "line": 11,
    },
  },
  "name": "bar",
  "params": Array [],
  "path": Array [
    Object {
      "name": "bar",
    },
  ],
  "raw": "/**
*  @see {@link ns.foo}
*/",
  "see": "",
  "start": 133,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/listenstag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 23,
  "filename": "jsdoc/listenstag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 23,
      "index": 23,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:myModule",
  },
  "path": Array [],
  "raw": "/** @module myModule */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/listenstag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "An event (has listeners).",
  "end": 135,
  "filename": "jsdoc/listenstag.js",
  "ignore": false,
  "kind": "event",
  "loc": Object {
    "end": Position {
      "column": 33,
      "index": 135,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 25,
      "line": 3,
    },
  },
  "name": "MyEvent",
  "params": Array [
    Object {
      "description": "- asdf.",
      "name": "foo",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "parent": "module:myModule",
  "path": Array [],
  "raw": "/** An event (has listeners).
 * @event MyEvent
 * @memberOf module:myModule
 * @param {number} foo - asdf. */",
  "start": 25,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/listenstag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A handler.",
  "end": 286,
  "filename": "jsdoc/listenstag.js",
  "fnName": "MyHandler",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 286,
      "line": 14,
    },
    "start": Position {
      "column": 0,
      "index": 137,
      "line": 8,
    },
  },
  "name": "MyHandler",
  "params": Array [],
  "path": Array [
    Object {
      "name": "MyHandler",
    },
  ],
  "raw": "/** A handler.
 * @listens module:myModule.MyEvent
 * @listens module:myModule~Events.event:Event2
 * @listens fakeEvent
 */",
  "start": 137,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/listenstag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Another handler.",
  "end": 378,
  "filename": "jsdoc/listenstag.js",
  "fnName": "AnotherHandler",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 378,
      "line": 20,
    },
    "start": Position {
      "column": 0,
      "index": 288,
      "line": 16,
    },
  },
  "name": "AnotherHandler",
  "params": Array [],
  "path": Array [
    Object {
      "name": "AnotherHandler",
    },
  ],
  "raw": "/** Another handler.
 * @listens module:myModule.MyEvent
 */",
  "start": 288,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/listenstag.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "a namespace.",
  "end": 431,
  "filename": "jsdoc/listenstag.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 431,
      "line": 25,
    },
    "start": Position {
      "column": 0,
      "index": 380,
      "line": 22,
    },
  },
  "member": "Events",
  "mutable": true,
  "name": "Events",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "Events",
    },
  ],
  "properties": Array [],
  "raw": "/** a namespace.
 * @namespace */",
  "start": 380,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/listenstag.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Another event (has listeners).",
  "end": 524,
  "filename": "jsdoc/listenstag.js",
  "ignore": false,
  "kind": "event",
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 524,
      "line": 30,
    },
    "start": Position {
      "column": 0,
      "index": 433,
      "line": 27,
    },
  },
  "name": "Event2",
  "parent": "module:myModule~Events",
  "raw": "/** Another event (has listeners).
 * @event Event2
 * @memberOf module:myModule~Events
 */",
  "start": 433,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/listenstag.js snapshots: Item 7 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "An event with no listeners.",
  "end": 593,
  "filename": "jsdoc/listenstag.js",
  "ignore": false,
  "kind": "event",
  "loc": Object {
    "end": Position {
      "column": 35,
      "index": 593,
      "line": 33,
    },
    "start": Position {
      "column": 0,
      "index": 526,
      "line": 32,
    },
  },
  "memberOf": "module:myModule",
  "name": "Event3",
  "raw": "/** An event with no listeners.
 * @event module:myModule#Event3 */",
  "start": 526,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/memberoftag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 103,
  "filename": "jsdoc/memberoftag.js",
  "fnName": "Data",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 103,
      "line": 8,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Data",
  "params": Array [],
  "parent": "mathlib",
  "path": Array [
    Object {
      "name": "Data",
    },
  ],
  "raw": "/** @constructor
    @memberOf mathlib
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/memberoftag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 101,
  "filename": "jsdoc/memberoftag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 101,
      "line": 7,
    },
    "start": Position {
      "column": 4,
      "index": 66,
      "line": 6,
    },
  },
  "member": "point",
  "memberOf": "this",
  "name": "point",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "point",
    },
  ],
  "properties": Array [],
  "raw": "/** @member */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 66,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/memberoftag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 146,
  "filename": "jsdoc/memberoftag.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 23,
      "index": 146,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 105,
      "line": 10,
    },
  },
  "name": "mathlib",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "mathlib",
    },
  ],
  "properties": Array [
    Object {
      "member": "Data",
      "memberOf": "mathlib",
      "name": "Data",
      "path": Array [
        Object {
          "name": "mathlib",
        },
      ],
    },
  ],
  "raw": "/** @namespace */",
  "start": 105,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/memberoftag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 85,
  "filename": "jsdoc/memberoftag2.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 85,
      "line": 5,
    },
    "start": Position {
      "column": 8,
      "index": 40,
      "line": 4,
    },
  },
  "member": "cache",
  "memberOf": undefined,
  "name": "cache",
  "parent": "Observable",
  "path": Array [],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "parent": "Observable",
        "tags": Array [
          Object {
            "description": "",
            "name": "Observable",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @memberOf Observable */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "Observable",
                  "postDelimiter": " ",
                  "postName": " ",
                  "postTag": " ",
                  "postType": "",
                  "start": "",
                  "tag": "@memberOf",
                  "type": "",
                },
              },
            ],
            "tag": "memberOf",
            "type": "",
          },
        ],
      },
      "code": "cache: []",
      "ctx": Object {
        "kind": "property",
        "member": "cache",
        "memberOf": undefined,
        "name": "cache",
      },
      "description": "",
      "end": 85,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 17,
          "index": 85,
          "line": 5,
        },
        "start": Position {
          "column": 8,
          "index": 40,
          "line": 4,
        },
      },
      "member": "cache",
      "memberOf": undefined,
      "name": "cache",
      "parent": "Observable",
      "path": Array [],
      "raw": "/** @memberOf Observable */",
      "start": 40,
      "tags": Array [
        Object {
          "description": "",
          "name": "Observable",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @memberOf Observable */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "Observable",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@memberOf",
                "type": "",
              },
            },
          ],
          "tag": "memberOf",
          "type": "",
        },
      ],
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "parent": "Observable.prototype",
        "tags": Array [
          Object {
            "description": "",
            "name": "Observable.prototype",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @memberOf Observable.prototype */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "Observable.prototype",
                  "postDelimiter": " ",
                  "postName": " ",
                  "postTag": " ",
                  "postType": "",
                  "start": "",
                  "tag": "@memberOf",
                  "type": "",
                },
              },
            ],
            "tag": "memberOf",
            "type": "",
          },
        ],
      },
      "code": "publish: function (msg) {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "publish",
        "memberOf": undefined,
        "name": "publish",
        "params": Array [
          Object {
            "member": "msg",
            "name": "msg",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 167,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 33,
          "index": 167,
          "line": 8,
        },
        "start": Position {
          "column": 8,
          "index": 96,
          "line": 7,
        },
      },
      "member": "publish",
      "memberOf": undefined,
      "name": "publish",
      "params": Array [
        Object {
          "member": "msg",
          "name": "msg",
        },
      ],
      "parent": "Observable.prototype",
      "path": Array [],
      "raw": "/** @memberOf Observable.prototype */",
      "start": 96,
      "tags": Array [
        Object {
          "description": "",
          "name": "Observable.prototype",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @memberOf Observable.prototype */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "Observable.prototype",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@memberOf",
                "type": "",
              },
            },
          ],
          "tag": "memberOf",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** @memberOf Observable */",
  "start": 40,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/memberoftag2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 167,
  "filename": "jsdoc/memberoftag2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 33,
      "index": 167,
      "line": 8,
    },
    "start": Position {
      "column": 8,
      "index": 96,
      "line": 7,
    },
  },
  "member": "publish",
  "memberOf": undefined,
  "name": "publish",
  "params": Array [
    Object {
      "member": "msg",
      "name": "msg",
    },
  ],
  "parent": "Observable.prototype",
  "path": Array [],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "parent": "Observable",
        "tags": Array [
          Object {
            "description": "",
            "name": "Observable",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @memberOf Observable */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "Observable",
                  "postDelimiter": " ",
                  "postName": " ",
                  "postTag": " ",
                  "postType": "",
                  "start": "",
                  "tag": "@memberOf",
                  "type": "",
                },
              },
            ],
            "tag": "memberOf",
            "type": "",
          },
        ],
      },
      "code": "cache: []",
      "ctx": Object {
        "kind": "property",
        "member": "cache",
        "memberOf": undefined,
        "name": "cache",
      },
      "description": "",
      "end": 85,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 17,
          "index": 85,
          "line": 5,
        },
        "start": Position {
          "column": 8,
          "index": 40,
          "line": 4,
        },
      },
      "member": "cache",
      "memberOf": undefined,
      "name": "cache",
      "parent": "Observable",
      "path": Array [],
      "raw": "/** @memberOf Observable */",
      "start": 40,
      "tags": Array [
        Object {
          "description": "",
          "name": "Observable",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @memberOf Observable */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "Observable",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@memberOf",
                "type": "",
              },
            },
          ],
          "tag": "memberOf",
          "type": "",
        },
      ],
    },
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "parent": "Observable.prototype",
        "tags": Array [
          Object {
            "description": "",
            "name": "Observable.prototype",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @memberOf Observable.prototype */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "Observable.prototype",
                  "postDelimiter": " ",
                  "postName": " ",
                  "postTag": " ",
                  "postType": "",
                  "start": "",
                  "tag": "@memberOf",
                  "type": "",
                },
              },
            ],
            "tag": "memberOf",
            "type": "",
          },
        ],
      },
      "code": "publish: function (msg) {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "publish",
        "memberOf": undefined,
        "name": "publish",
        "params": Array [
          Object {
            "member": "msg",
            "name": "msg",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 167,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 33,
          "index": 167,
          "line": 8,
        },
        "start": Position {
          "column": 8,
          "index": 96,
          "line": 7,
        },
      },
      "member": "publish",
      "memberOf": undefined,
      "name": "publish",
      "params": Array [
        Object {
          "member": "msg",
          "name": "msg",
        },
      ],
      "parent": "Observable.prototype",
      "path": Array [],
      "raw": "/** @memberOf Observable.prototype */",
      "start": 96,
      "tags": Array [
        Object {
          "description": "",
          "name": "Observable.prototype",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @memberOf Observable.prototype */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "Observable.prototype",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@memberOf",
                "type": "",
              },
            },
          ],
          "tag": "memberOf",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** @memberOf Observable.prototype */",
  "start": 96,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/memberoftag3.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 158,
  "examples": Array [
    "    
        var terrain = require('terrain'),
            forest = new terrain.Forest(),
            tree = new forest.Tree();",
  ],
  "filename": "jsdoc/memberoftag3.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 158,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:terrain",
  },
  "path": Array [],
  "raw": "/** @module terrain
    @example
        var terrain = require('terrain'),
            forest = new terrain.Forest(),
            tree = new forest.Tree();
*/",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/memberoftag3.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 203,
  "export": "Forest",
  "filename": "jsdoc/memberoftag3.js",
  "ignore": false,
  "isAsync": false,
  "isExport": true,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 29,
      "index": 203,
      "line": 9,
    },
    "start": Position {
      "column": 0,
      "index": 160,
      "line": 8,
    },
  },
  "member": "Forest",
  "memberOf": "exports",
  "name": "Forest",
  "params": Array [],
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "Forest",
    },
  ],
  "raw": "/** @class */",
  "start": 160,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/memberoftag3.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 356,
  "filename": "jsdoc/memberoftag3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 356,
      "line": 19,
    },
    "start": Position {
      "column": 0,
      "index": 234,
      "line": 12,
    },
  },
  "member": "Tree",
  "memberOf": "Forest.prototype",
  "name": "Tree",
  "params": Array [],
  "parent": "module:terrain",
  "path": Array [
    Object {
      "name": "Forest",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "Tree",
    },
  ],
  "raw": "/**
    @class
    @memberOf module:terrain
*/",
  "scope": "instance",
  "start": 234,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/memberoftag3.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A leaf",
  "end": 354,
  "filename": "jsdoc/memberoftag3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 18,
      "index": 354,
      "line": 18,
    },
    "start": Position {
      "column": 4,
      "index": 322,
      "line": 17,
    },
  },
  "member": "leaf",
  "memberOf": "this",
  "name": "leaf",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "leaf",
    },
  ],
  "raw": "/** A leaf */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "scope": "instance",
  "start": 322,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 1,
}
`;

exports[`./jsdoc/memberoftag4.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Namespace doStuff.",
  "end": 51,
  "filename": "jsdoc/memberoftag4.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 51,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "namespace": Object {
    "name": "doStuff",
  },
  "path": Array [],
  "raw": "/**
 * Namespace doStuff.
 * @namespace doStuff
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/memberoftag4.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Function with the same name as its namespace.",
  "end": 152,
  "filename": "jsdoc/memberoftag4.js",
  "fnName": "doStuff",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 21,
      "index": 152,
      "line": 10,
    },
    "start": Position {
      "column": 0,
      "index": 53,
      "line": 6,
    },
  },
  "name": "doStuff",
  "params": Array [],
  "parent": "doStuff",
  "path": Array [
    Object {
      "name": "doStuff",
    },
  ],
  "raw": "/**
 * Function with the same name as its namespace.
 * @memberOf doStuff
 */",
  "start": 53,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/memberoftag4.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Function with a different name than the namespace.",
  "end": 263,
  "filename": "jsdoc/memberoftag4.js",
  "fnName": "doOtherStuff",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 26,
      "index": 263,
      "line": 16,
    },
    "start": Position {
      "column": 0,
      "index": 154,
      "line": 12,
    },
  },
  "name": "doOtherStuff",
  "params": Array [],
  "parent": "doStuff",
  "path": Array [
    Object {
      "name": "doOtherStuff",
    },
  ],
  "raw": "/**
 * Function with a different name than the namespace.
 * @memberOf doStuff
 */",
  "start": 154,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/memberoftag5.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Socket class.",
  "end": 98,
  "filename": "jsdoc/memberoftag5.js",
  "fnName": "Socket",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 98,
      "line": 8,
    },
    "start": Position {
      "column": 0,
      "index": 15,
      "line": 3,
    },
  },
  "name": "Socket",
  "params": Array [],
  "parent": "module:network",
  "path": Array [
    Object {
      "name": "Socket",
    },
  ],
  "raw": "/**
 * Socket class.
 * @class
 * @memberOf module:network
 */",
  "start": 15,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/memberoftag5.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Open the socket.",
  "end": 166,
  "filename": "jsdoc/memberoftag5.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 38,
      "index": 166,
      "line": 13,
    },
    "start": Position {
      "column": 0,
      "index": 100,
      "line": 10,
    },
  },
  "member": "open",
  "memberOf": "Socket.prototype",
  "name": "open",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Socket",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "open",
    },
  ],
  "raw": "/**
 * Open the socket.
 */",
  "scope": "instance",
  "start": 100,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/memberoftag5.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Unique identifier for \`Socket\` class.",
  "end": 238,
  "filename": "jsdoc/memberoftag5.js",
  "ignore": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 21,
      "index": 238,
      "line": 18,
    },
    "start": Position {
      "column": 0,
      "index": 168,
      "line": 15,
    },
  },
  "member": "uid",
  "memberOf": "Socket",
  "name": "uid",
  "path": Array [
    Object {
      "name": "Socket",
    },
    Object {
      "name": "uid",
    },
  ],
  "raw": "/**
 * Unique identifier for \`Socket\` class.
 */",
  "start": 168,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "12345",
}
`;

exports[`./jsdoc/memberoftagforced.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 617,
  "filename": "jsdoc/memberoftagforced.js",
  "fnName": "Data",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 617,
      "line": 31,
    },
    "start": Position {
      "column": 0,
      "index": 1,
      "line": 2,
    },
  },
  "name": "Data",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Data",
    },
  ],
  "raw": "/** @constructor
*/",
  "start": 1,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/memberoftagforced.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The current position.",
  "end": 615,
  "filename": "jsdoc/memberoftagforced.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 615,
      "line": 30,
    },
    "start": Position {
      "column": 4,
      "index": 44,
      "line": 6,
    },
  },
  "member": "point",
  "memberOf": "this",
  "name": "point",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "point",
    },
  ],
  "properties": Array [
    Object {
      "description": "        Does this point need to be revalidated?",
    },
  ],
  "raw": "/**
        The current position.
        @type {object}
        @property {boolean} needsRevalidate Does this point need to be revalidated?
     */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 44,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "object",
      },
    ],
    "string": "object",
  },
}
`;

exports[`./jsdoc/memberoftagforced.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The x coordinate of the point.",
  "end": 373,
  "filename": "jsdoc/memberoftagforced.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 12,
      "index": 373,
      "line": 18,
    },
    "start": Position {
      "column": 8,
      "index": 220,
      "line": 12,
    },
  },
  "member": "x",
  "memberOf": "point",
  "name": "x",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "point",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "The x coordinate of the point.",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "            ",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "            @type {number}",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "            ",
                  "tag": "@type",
                  "type": "{number}",
                },
              },
            ],
            "tag": "type",
            "type": "number",
          },
          Object {
            "description": "            ",
            "name": "point.x",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 3,
                "source": "            @name point.x",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "point.x",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "            ",
                  "tag": "@name",
                  "type": "",
                },
              },
            ],
            "tag": "name",
            "type": "",
          },
          Object {
            "description": "            ",
            "name": "Data#",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 4,
                "source": "            @memberOf! Data#",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "Data#",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "            ",
                  "tag": "@memberOf!",
                  "type": "",
                },
              },
              Object {
                "number": 5,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "memberOf!",
            "type": "",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
      },
      "code": "x: 0",
      "ctx": Object {
        "kind": "property",
        "member": "x",
        "memberOf": undefined,
        "name": "x",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
        "value": 0,
      },
      "description": "The x coordinate of the point.",
      "end": 373,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 12,
          "index": 373,
          "line": 18,
        },
        "start": Position {
          "column": 8,
          "index": 220,
          "line": 12,
        },
      },
      "member": "x",
      "memberOf": undefined,
      "name": "x",
      "path": Array [],
      "raw": "/**
            The x coordinate of the point.
            @type {number}
            @name point.x
            @memberOf! Data#
         */",
      "start": 220,
      "tags": Array [
        Object {
          "description": "            ",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "            @type {number}",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "            ",
                "tag": "@type",
                "type": "{number}",
              },
            },
          ],
          "tag": "type",
          "type": "number",
        },
        Object {
          "description": "            ",
          "name": "point.x",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "            @name point.x",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "point.x",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "            ",
                "tag": "@name",
                "type": "",
              },
            },
          ],
          "tag": "name",
          "type": "",
        },
        Object {
          "description": "            ",
          "name": "Data#",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 4,
              "source": "            @memberOf! Data#",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "Data#",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "            ",
                "tag": "@memberOf!",
                "type": "",
              },
            },
            Object {
              "number": 5,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "memberOf!",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 0,
    },
    Object {
      "cmt": Object {
        "description": "The y coordinate of the point.",
        "ignore": false,
        "see": "",
        "tags": Array [
          Object {
            "description": "            ",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "            @type {number}",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "            ",
                  "tag": "@type",
                  "type": "{number}",
                },
              },
            ],
            "tag": "type",
            "type": "number",
          },
          Object {
            "description": "            ",
            "name": "point.y",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 3,
                "source": "            @name point.y",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "point.y",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "            ",
                  "tag": "@name",
                  "type": "",
                },
              },
            ],
            "tag": "name",
            "type": "",
          },
          Object {
            "description": "            ",
            "name": "Data#",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 4,
                "source": "            @memberOf! Data#",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "Data#",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "            ",
                  "tag": "@memberOf!",
                  "type": "",
                },
              },
            ],
            "tag": "memberOf!",
            "type": "",
          },
          Object {
            "description": "            ",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 5,
                "source": "            @see {@link Data#point.x}",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "            ",
                  "tag": "@see",
                  "type": "{@link Data#point.x}",
                },
              },
              Object {
                "number": 6,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "see",
            "type": "@link Data#point.x",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
      },
      "code": "y: 0",
      "ctx": Object {
        "kind": "property",
        "member": "y",
        "memberOf": undefined,
        "name": "y",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
        "value": 0,
      },
      "description": "The y coordinate of the point.",
      "end": 575,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 12,
          "index": 575,
          "line": 27,
        },
        "start": Position {
          "column": 8,
          "index": 384,
          "line": 20,
        },
      },
      "member": "y",
      "memberOf": undefined,
      "name": "y",
      "path": Array [],
      "raw": "/**
            The y coordinate of the point.
            @type {number}
            @name point.y
            @memberOf! Data#
            @see {@link Data#point.x}
         */",
      "see": "",
      "start": 384,
      "tags": Array [
        Object {
          "description": "            ",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "            @type {number}",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "            ",
                "tag": "@type",
                "type": "{number}",
              },
            },
          ],
          "tag": "type",
          "type": "number",
        },
        Object {
          "description": "            ",
          "name": "point.y",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "            @name point.y",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "point.y",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "            ",
                "tag": "@name",
                "type": "",
              },
            },
          ],
          "tag": "name",
          "type": "",
        },
        Object {
          "description": "            ",
          "name": "Data#",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 4,
              "source": "            @memberOf! Data#",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "Data#",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "            ",
                "tag": "@memberOf!",
                "type": "",
              },
            },
          ],
          "tag": "memberOf!",
          "type": "",
        },
        Object {
          "description": "            ",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 5,
              "source": "            @see {@link Data#point.x}",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "            ",
                "tag": "@see",
                "type": "{@link Data#point.x}",
              },
            },
            Object {
              "number": 6,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "see",
          "type": "@link Data#point.x",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 0,
    },
  ],
  "raw": "/**
            The x coordinate of the point.
            @type {number}
            @name point.x
            @memberOf! Data#
         */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 220,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 0,
}
`;

exports[`./jsdoc/memberoftagforced.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The y coordinate of the point.",
  "end": 575,
  "filename": "jsdoc/memberoftagforced.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 12,
      "index": 575,
      "line": 27,
    },
    "start": Position {
      "column": 8,
      "index": 384,
      "line": 20,
    },
  },
  "member": "y",
  "memberOf": "point",
  "name": "y",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "point",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "The x coordinate of the point.",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "            ",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "            @type {number}",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "            ",
                  "tag": "@type",
                  "type": "{number}",
                },
              },
            ],
            "tag": "type",
            "type": "number",
          },
          Object {
            "description": "            ",
            "name": "point.x",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 3,
                "source": "            @name point.x",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "point.x",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "            ",
                  "tag": "@name",
                  "type": "",
                },
              },
            ],
            "tag": "name",
            "type": "",
          },
          Object {
            "description": "            ",
            "name": "Data#",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 4,
                "source": "            @memberOf! Data#",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "Data#",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "            ",
                  "tag": "@memberOf!",
                  "type": "",
                },
              },
              Object {
                "number": 5,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "memberOf!",
            "type": "",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
      },
      "code": "x: 0",
      "ctx": Object {
        "kind": "property",
        "member": "x",
        "memberOf": undefined,
        "name": "x",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
        "value": 0,
      },
      "description": "The x coordinate of the point.",
      "end": 373,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 12,
          "index": 373,
          "line": 18,
        },
        "start": Position {
          "column": 8,
          "index": 220,
          "line": 12,
        },
      },
      "member": "x",
      "memberOf": undefined,
      "name": "x",
      "path": Array [],
      "raw": "/**
            The x coordinate of the point.
            @type {number}
            @name point.x
            @memberOf! Data#
         */",
      "start": 220,
      "tags": Array [
        Object {
          "description": "            ",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "            @type {number}",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "            ",
                "tag": "@type",
                "type": "{number}",
              },
            },
          ],
          "tag": "type",
          "type": "number",
        },
        Object {
          "description": "            ",
          "name": "point.x",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "            @name point.x",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "point.x",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "            ",
                "tag": "@name",
                "type": "",
              },
            },
          ],
          "tag": "name",
          "type": "",
        },
        Object {
          "description": "            ",
          "name": "Data#",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 4,
              "source": "            @memberOf! Data#",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "Data#",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "            ",
                "tag": "@memberOf!",
                "type": "",
              },
            },
            Object {
              "number": 5,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "memberOf!",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 0,
    },
    Object {
      "cmt": Object {
        "description": "The y coordinate of the point.",
        "ignore": false,
        "see": "",
        "tags": Array [
          Object {
            "description": "            ",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "            @type {number}",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "            ",
                  "tag": "@type",
                  "type": "{number}",
                },
              },
            ],
            "tag": "type",
            "type": "number",
          },
          Object {
            "description": "            ",
            "name": "point.y",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 3,
                "source": "            @name point.y",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "point.y",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "            ",
                  "tag": "@name",
                  "type": "",
                },
              },
            ],
            "tag": "name",
            "type": "",
          },
          Object {
            "description": "            ",
            "name": "Data#",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 4,
                "source": "            @memberOf! Data#",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "Data#",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "            ",
                  "tag": "@memberOf!",
                  "type": "",
                },
              },
            ],
            "tag": "memberOf!",
            "type": "",
          },
          Object {
            "description": "            ",
            "name": "",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 5,
                "source": "            @see {@link Data#point.x}",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "            ",
                  "tag": "@see",
                  "type": "{@link Data#point.x}",
                },
              },
              Object {
                "number": 6,
                "source": "         */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "         ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "see",
            "type": "@link Data#point.x",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
      },
      "code": "y: 0",
      "ctx": Object {
        "kind": "property",
        "member": "y",
        "memberOf": undefined,
        "name": "y",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
        "value": 0,
      },
      "description": "The y coordinate of the point.",
      "end": 575,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 12,
          "index": 575,
          "line": 27,
        },
        "start": Position {
          "column": 8,
          "index": 384,
          "line": 20,
        },
      },
      "member": "y",
      "memberOf": undefined,
      "name": "y",
      "path": Array [],
      "raw": "/**
            The y coordinate of the point.
            @type {number}
            @name point.y
            @memberOf! Data#
            @see {@link Data#point.x}
         */",
      "see": "",
      "start": 384,
      "tags": Array [
        Object {
          "description": "            ",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "            @type {number}",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "            ",
                "tag": "@type",
                "type": "{number}",
              },
            },
          ],
          "tag": "type",
          "type": "number",
        },
        Object {
          "description": "            ",
          "name": "point.y",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "            @name point.y",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "point.y",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "            ",
                "tag": "@name",
                "type": "",
              },
            },
          ],
          "tag": "name",
          "type": "",
        },
        Object {
          "description": "            ",
          "name": "Data#",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 4,
              "source": "            @memberOf! Data#",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "Data#",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "            ",
                "tag": "@memberOf!",
                "type": "",
              },
            },
          ],
          "tag": "memberOf!",
          "type": "",
        },
        Object {
          "description": "            ",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 5,
              "source": "            @see {@link Data#point.x}",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "            ",
                "tag": "@see",
                "type": "{@link Data#point.x}",
              },
            },
            Object {
              "number": 6,
              "source": "         */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "         ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "see",
          "type": "@link Data#point.x",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 0,
    },
  ],
  "raw": "/**
            The y coordinate of the point.
            @type {number}
            @name point.y
            @memberOf! Data#
            @see {@link Data#point.x}
         */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "see": "",
  "start": 384,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 0,
}
`;

exports[`./jsdoc/memberoftagforced.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 773,
  "filename": "jsdoc/memberoftagforced.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 14,
      "index": 773,
      "line": 40,
    },
    "start": Position {
      "column": 4,
      "index": 635,
      "line": 34,
    },
  },
  "member": "routes",
  "memberOf": "map",
  "mutable": true,
  "name": "routes",
  "path": Array [
    Object {
      "name": "map",
    },
  ],
  "properties": Array [
    Object {
      "description": "        ",
    },
  ],
  "raw": "/**
        @type {Array}
        @name map.routes
        @memberOf! <global>
        @property {Data#point} point
     */",
  "start": 635,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Array",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Array",
      },
    ],
    "string": "Array",
  },
}
`;

exports[`./jsdoc/memberoftagforced.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The current cursor.",
  "end": 820,
  "filename": "jsdoc/memberoftagforced.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 16,
      "index": 820,
      "line": 44,
    },
    "start": Position {
      "column": 0,
      "index": 777,
      "line": 43,
    },
  },
  "member": "cursor",
  "mutable": true,
  "name": "cursor",
  "path": Array [
    Object {
      "name": "cursor",
    },
  ],
  "properties": Array [],
  "raw": "/** The current cursor. */",
  "start": 777,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/membertag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 21,
  "filename": "jsdoc/membertag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 21,
      "line": 2,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "x",
  "mutable": true,
  "name": "x",
  "path": Array [
    Object {
      "name": "x",
    },
  ],
  "raw": "/** @member */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/membertag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 41,
  "filename": "jsdoc/membertag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 18,
      "index": 41,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 23,
      "line": 4,
    },
  },
  "path": Array [],
  "raw": "/** @var foobar */",
  "start": 23,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/membertag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 66,
  "filename": "jsdoc/membertag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 24,
      "index": 66,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 42,
      "line": 5,
    },
  },
  "path": Array [],
  "raw": "/** @var {string} baz */",
  "start": 42,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/membertag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 98,
  "filename": "jsdoc/membertag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 98,
      "line": 8,
    },
    "start": Position {
      "column": 0,
      "index": 68,
      "line": 7,
    },
  },
  "member": "y",
  "mutable": true,
  "name": "y",
  "path": Array [
    Object {
      "name": "y",
    },
  ],
  "raw": "/** @member {Object} */",
  "start": 68,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/methoddefinition.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Document me.",
  "end": 54,
  "filename": "jsdoc/methoddefinition.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 54,
      "line": 4,
    },
    "start": Position {
      "column": 4,
      "index": 17,
      "line": 2,
    },
  },
  "member": "run",
  "memberOf": "Test.prototype",
  "name": "run",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Test",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "run",
    },
  ],
  "raw": "/** Document me. */",
  "scope": "instance",
  "start": 17,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Test",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Test",
      },
    ],
    "string": "Test",
  },
}
`;

exports[`./jsdoc/methoddefinition.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Static document me.",
  "end": 111,
  "filename": "jsdoc/methoddefinition.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 111,
      "line": 8,
    },
    "start": Position {
      "column": 4,
      "index": 60,
      "line": 6,
    },
  },
  "member": "run",
  "memberOf": "Test.prototype",
  "name": "run",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Test",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "run",
    },
  ],
  "raw": "/** Static document me. */",
  "scope": "static",
  "start": 60,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Test",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Test",
      },
    ],
    "string": "Test",
  },
}
`;

exports[`./jsdoc/mixintag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "This provides methods used for event handling. It's not meant to
be used directly, except as a provider of related methods.",
  "end": 277,
  "filename": "jsdoc/mixintag.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 277,
      "line": 12,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "Eventful",
  "mutable": true,
  "name": "Eventful",
  "path": Array [
    Object {
      "name": "Eventful",
    },
  ],
  "properties": Array [
    Object {
      "description": "fires something.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Eventful",
        },
      ],
      "tags": Array [],
    },
    Object {
      "description": "handles a signal.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Eventful",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/**
 * This provides methods used for event handling. It's not meant to
 * be used directly, except as a provider of related methods.
 *
 * @mixin
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/mixintag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "fires something.",
  "end": 221,
  "filename": "jsdoc/mixintag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 25,
      "index": 221,
      "line": 9,
    },
    "start": Position {
      "column": 4,
      "index": 172,
      "line": 8,
    },
  },
  "member": "fires",
  "memberOf": "Eventful",
  "mutable": true,
  "name": "fires",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Eventful",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "fires something.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "fires: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "fires",
        "memberOf": undefined,
        "name": "fires",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "fires something.",
      "end": 221,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 25,
          "index": 221,
          "line": 9,
        },
        "start": Position {
          "column": 4,
          "index": 172,
          "line": 8,
        },
      },
      "member": "fires",
      "memberOf": undefined,
      "name": "fires",
      "params": Array [],
      "path": Array [],
      "raw": "/** fires something. */",
      "start": 172,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "handles a signal.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "on: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "on",
        "memberOf": undefined,
        "name": "on",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "handles a signal.",
      "end": 274,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 22,
          "index": 274,
          "line": 11,
        },
        "start": Position {
          "column": 4,
          "index": 227,
          "line": 10,
        },
      },
      "member": "on",
      "memberOf": undefined,
      "name": "on",
      "params": Array [],
      "path": Array [],
      "raw": "/** handles a signal. */",
      "start": 227,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** fires something. */",
  "start": 172,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/mixintag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "handles a signal.",
  "end": 274,
  "filename": "jsdoc/mixintag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 22,
      "index": 274,
      "line": 11,
    },
    "start": Position {
      "column": 4,
      "index": 227,
      "line": 10,
    },
  },
  "member": "on",
  "memberOf": "Eventful",
  "mutable": true,
  "name": "on",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Eventful",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "fires something.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "fires: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "fires",
        "memberOf": undefined,
        "name": "fires",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "fires something.",
      "end": 221,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 25,
          "index": 221,
          "line": 9,
        },
        "start": Position {
          "column": 4,
          "index": 172,
          "line": 8,
        },
      },
      "member": "fires",
      "memberOf": undefined,
      "name": "fires",
      "params": Array [],
      "path": Array [],
      "raw": "/** fires something. */",
      "start": 172,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "handles a signal.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "on: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "on",
        "memberOf": undefined,
        "name": "on",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "handles a signal.",
      "end": 274,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 22,
          "index": 274,
          "line": 11,
        },
        "start": Position {
          "column": 4,
          "index": 227,
          "line": 10,
        },
      },
      "member": "on",
      "memberOf": undefined,
      "name": "on",
      "params": Array [],
      "path": Array [],
      "raw": "/** handles a signal. */",
      "start": 227,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** handles a signal. */",
  "start": 227,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/mixintag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 354,
  "filename": "jsdoc/mixintag.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 354,
      "line": 19,
    },
    "start": Position {
      "column": 0,
      "index": 279,
      "line": 14,
    },
  },
  "member": "FormButton",
  "mutable": true,
  "name": "FormButton",
  "params": Array [],
  "path": Array [
    Object {
      "name": "FormButton",
    },
  ],
  "raw": "/**
 * @constructor
 * @mixes Eventful
 */",
  "start": 279,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/mixintag.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 381,
  "filename": "jsdoc/mixintag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 25,
      "index": 381,
      "line": 21,
    },
    "start": Position {
      "column": 0,
      "index": 356,
      "line": 21,
    },
  },
  "raw": "/** @mixin AnotherMixin*/",
  "start": 356,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/mixintag.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "I mix in multiple things",
  "end": 480,
  "filename": "jsdoc/mixintag.js",
  "ignore": false,
  "isConstructor": true,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 25,
      "index": 480,
      "line": 26,
    },
    "start": Position {
      "column": 0,
      "index": 383,
      "line": 23,
    },
  },
  "raw": "/** I mix in multiple things
 * @constructor MyClass
 * @mixes Eventful
 * @mixes AnotherMixin */",
  "start": 383,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/mixintag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 19,
  "filename": "jsdoc/mixintag2.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 19,
      "index": 19,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:mixy",
  },
  "raw": "/** @module mixy */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/mixintag2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Object A.",
  "end": 138,
  "export": "ObjectA",
  "filename": "jsdoc/mixintag2.js",
  "ignore": false,
  "isExport": true,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 138,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 35,
      "line": 4,
    },
  },
  "member": "ObjectA",
  "memberOf": "exports",
  "name": "ObjectA",
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "ObjectA",
    },
  ],
  "properties": Array [
    Object {
      "description": "Some method.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "exports",
        },
        Object {
          "name": "ObjectA",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/**
 * Object A.
 * @mixin
 */",
  "start": 35,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/mixintag2.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Some method.",
  "end": 135,
  "filename": "jsdoc/mixintag2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 25,
      "index": 135,
      "line": 10,
    },
    "start": Position {
      "column": 4,
      "index": 90,
      "line": 9,
    },
  },
  "member": "method",
  "memberOf": "ObjectA",
  "name": "method",
  "params": Array [],
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "ObjectA",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Some method.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "method: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "method",
        "memberOf": undefined,
        "name": "method",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Some method.",
      "end": 135,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 25,
          "index": 135,
          "line": 10,
        },
        "start": Position {
          "column": 4,
          "index": 90,
          "line": 9,
        },
      },
      "member": "method",
      "memberOf": undefined,
      "name": "method",
      "params": Array [],
      "path": Array [],
      "raw": "/** Some method. */",
      "start": 90,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Some method. */",
  "start": 90,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/mixintag2.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Object B. Mixes Object A.",
  "end": 238,
  "export": "ObjectB",
  "filename": "jsdoc/mixintag2.js",
  "ignore": false,
  "isExport": true,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 21,
      "index": 238,
      "line": 18,
    },
    "start": Position {
      "column": 0,
      "index": 140,
      "line": 13,
    },
  },
  "member": "ObjectB",
  "memberOf": "exports",
  "name": "ObjectB",
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "ObjectB",
    },
  ],
  "properties": Array [],
  "raw": "/**
 * Object B. Mixes Object A.
 * @mixin
 * @mixes module:mixy.ObjectA
 */",
  "start": 140,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/mixintag2.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Object C. Mixes Object B and adds its own method.",
  "end": 543,
  "export": "ObjectC",
  "filename": "jsdoc/mixintag2.js",
  "ignore": false,
  "isExport": true,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 543,
      "line": 31,
    },
    "start": Position {
      "column": 0,
      "index": 240,
      "line": 20,
    },
  },
  "member": "ObjectC",
  "memberOf": "exports",
  "name": "ObjectC",
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "ObjectC",
    },
  ],
  "properties": Array [
    Object {
      "description": "Super-sweet method that's named in the comment, making this a virtual comment.",
      "ignore": false,
      "kind": "function",
      "memberOf": "module:mixy.ObjectC",
      "name": "superSweet",
      "path": Array [
        Object {
          "name": "exports",
        },
        Object {
          "name": "ObjectC",
        },
      ],
      "tags": Array [
        Object {
          "description": "",
          "name": "module:mixy.ObjectC.superSweet",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "     * @function module:mixy.ObjectC.superSweet",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "module:mixy.ObjectC.superSweet",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "     ",
                "tag": "@function",
                "type": "",
              },
            },
            Object {
              "number": 3,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "function",
          "type": "",
        },
      ],
    },
  ],
  "raw": "/**
 * Object C. Mixes Object B and adds its own method.
 * @mixin
 * @mixes module:mixy.ObjectB
 */",
  "start": 240,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/mixintag2.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Super-sweet method that's named in the comment, making this a virtual comment.",
  "end": 540,
  "filename": "jsdoc/mixintag2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 29,
      "index": 540,
      "line": 30,
    },
    "start": Position {
      "column": 4,
      "index": 365,
      "line": 26,
    },
  },
  "member": "superSweet",
  "memberOf": "module:mixy.ObjectC",
  "name": "superSweet",
  "params": Array [],
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "ObjectC",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Super-sweet method that's named in the comment, making this a virtual comment.",
        "ignore": false,
        "kind": "function",
        "memberOf": "module:mixy.ObjectC",
        "name": "superSweet",
        "tags": Array [
          Object {
            "description": "",
            "name": "module:mixy.ObjectC.superSweet",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 2,
                "source": "     * @function module:mixy.ObjectC.superSweet",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "module:mixy.ObjectC.superSweet",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "     ",
                  "tag": "@function",
                  "type": "",
                },
              },
              Object {
                "number": 3,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "function",
            "type": "",
          },
        ],
      },
      "code": "superSweet: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "superSweet",
        "memberOf": undefined,
        "name": "superSweet",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Super-sweet method that's named in the comment, making this a virtual comment.",
      "end": 540,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "function",
      "loc": Object {
        "end": Position {
          "column": 29,
          "index": 540,
          "line": 30,
        },
        "start": Position {
          "column": 4,
          "index": 365,
          "line": 26,
        },
      },
      "member": "superSweet",
      "memberOf": "module:mixy.ObjectC",
      "name": "superSweet",
      "params": Array [],
      "path": Array [],
      "raw": "/**
     * Super-sweet method that's named in the comment, making this a virtual comment.
     * @function module:mixy.ObjectC.superSweet
     */",
      "start": 365,
      "tags": Array [
        Object {
          "description": "",
          "name": "module:mixy.ObjectC.superSweet",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "     * @function module:mixy.ObjectC.superSweet",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "module:mixy.ObjectC.superSweet",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "     ",
                "tag": "@function",
                "type": "",
              },
            },
            Object {
              "number": 3,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "function",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/**
     * Super-sweet method that's named in the comment, making this a virtual comment.
     * @function module:mixy.ObjectC.superSweet
     */",
  "start": 365,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/mixintag2.js snapshots: Item 7 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Class that mixes Object A, so it gets {@link module:mixy.ClassA#method}.",
  "end": 700,
  "export": "ClassA",
  "filename": "jsdoc/mixintag2.js",
  "ignore": false,
  "isAsync": false,
  "isExport": true,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 31,
      "index": 700,
      "line": 38,
    },
    "start": Position {
      "column": 0,
      "index": 545,
      "line": 33,
    },
  },
  "member": "ClassA",
  "memberOf": "exports",
  "name": "ClassA",
  "params": Array [],
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "ClassA",
    },
  ],
  "raw": "/**
 * Class that mixes Object A, so it gets {@link module:mixy.ClassA#method}.
 * @class
 * @mixes module:mixy.ObjectA
 */",
  "start": 545,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/mixintag2.js snapshots: Item 8 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Do a thing.",
  "end": 774,
  "filename": "jsdoc/mixintag2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 53,
      "index": 774,
      "line": 41,
    },
    "start": Position {
      "column": 0,
      "index": 702,
      "line": 40,
    },
  },
  "member": "doSomething",
  "memberOf": "exports.ClassA.prototype",
  "name": "doSomething",
  "params": Array [],
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "ClassA",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "doSomething",
    },
  ],
  "raw": "/** Do a thing. */",
  "scope": "instance",
  "start": 702,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/mixintag2.js snapshots: Item 9 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Class that mixes Object C, so it gets {@link module:mixy.ClassB#method} and
{@link module:mixy.ClassB#superSweet}.",
  "end": 976,
  "export": "ClassB",
  "filename": "jsdoc/mixintag2.js",
  "ignore": false,
  "isAsync": false,
  "isExport": true,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 31,
      "index": 976,
      "line": 49,
    },
    "start": Position {
      "column": 0,
      "index": 776,
      "line": 43,
    },
  },
  "member": "ClassB",
  "memberOf": "exports",
  "name": "ClassB",
  "params": Array [],
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "ClassB",
    },
  ],
  "raw": "/**
 * Class that mixes Object C, so it gets {@link module:mixy.ClassB#method} and
 * {@link module:mixy.ClassB#superSweet}.
 * @class
 * @mixes module:mixy.ObjectC
 */",
  "start": 776,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/modifiestag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "My mutator function.",
  "end": 86,
  "filename": "jsdoc/modifiestag.js",
  "fnName": "mutator",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 29,
      "index": 86,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "mutator",
  "params": Array [
    Object {
      "member": "foo",
      "name": "foo",
    },
    Object {
      "member": "bar",
      "name": "bar",
    },
  ],
  "path": Array [
    Object {
      "name": "mutator",
    },
  ],
  "raw": "/**
 * My mutator function.
 * @modifies {(foo|bar)}
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/moduleclasses.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 18,
  "filename": "jsdoc/moduleclasses.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 18,
      "index": 18,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:foo",
  },
  "path": Array [],
  "raw": "/** @module foo */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduleclasses.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Bar class.",
  "end": 155,
  "filename": "jsdoc/moduleclasses.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 155,
      "line": 10,
    },
    "start": Position {
      "column": 0,
      "index": 20,
      "line": 3,
    },
  },
  "name": "Bar",
  "path": Array [
    Object {
      "name": "Bar",
    },
  ],
  "properties": Array [
    Object {
      "description": "Construct a Bar.",
      "filename": "jsdoc/moduleclasses.js",
      "ignore": false,
      "isAsync": false,
      "isConstructor": true,
      "isGenerator": false,
      "kind": "constructor",
      "member": "constructor",
      "memberOf": "Bar.prototype",
      "name": "constructor",
      "params": Array [],
      "scope": "instance",
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Bar",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Bar",
          },
        ],
        "string": "Bar",
      },
    },
  ],
  "raw": "/** Bar class. */",
  "start": 20,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Bar",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Bar",
      },
    ],
    "string": "Bar",
  },
}
`;

exports[`./jsdoc/moduleclasses.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Construct a Bar.",
  "end": 153,
  "filename": "jsdoc/moduleclasses.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 153,
      "line": 9,
    },
    "start": Position {
      "column": 4,
      "index": 54,
      "line": 5,
    },
  },
  "member": "constructor",
  "memberOf": "Bar.prototype",
  "name": "constructor",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Bar",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "constructor",
    },
  ],
  "raw": "/** Construct a Bar. */",
  "scope": "instance",
  "start": 54,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Bar",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Bar",
      },
    ],
    "string": "Bar",
  },
}
`;

exports[`./jsdoc/moduleclasses.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "bar property",
  "end": 125,
  "filename": "jsdoc/moduleclasses.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 27,
      "index": 125,
      "line": 7,
    },
    "start": Position {
      "column": 8,
      "index": 106,
      "line": 7,
    },
  },
  "raw": "/** bar property */",
  "start": 106,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduleclasses.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Baz class.",
  "end": 299,
  "export": "Baz",
  "filename": "jsdoc/moduleclasses.js",
  "ignore": false,
  "isExport": true,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 299,
      "line": 19,
    },
    "start": Position {
      "column": 0,
      "index": 157,
      "line": 12,
    },
  },
  "name": "Baz",
  "path": Array [
    Object {
      "name": "Baz",
    },
  ],
  "properties": Array [
    Object {
      "description": "Construct a Baz.",
      "filename": "jsdoc/moduleclasses.js",
      "ignore": false,
      "isAsync": false,
      "isConstructor": true,
      "isExport": true,
      "isGenerator": false,
      "kind": "constructor",
      "member": "constructor",
      "memberOf": "Baz.prototype",
      "name": "constructor",
      "params": Array [],
      "scope": "instance",
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Baz",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Baz",
          },
        ],
        "string": "Baz",
      },
    },
  ],
  "raw": "/** Baz class. */",
  "start": 157,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Baz",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Baz",
      },
    ],
    "string": "Baz",
  },
}
`;

exports[`./jsdoc/moduleclasses.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Construct a Baz.",
  "end": 297,
  "filename": "jsdoc/moduleclasses.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isExport": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 297,
      "line": 18,
    },
    "start": Position {
      "column": 4,
      "index": 198,
      "line": 14,
    },
  },
  "member": "constructor",
  "memberOf": "Baz.prototype",
  "name": "constructor",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Baz",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "constructor",
    },
  ],
  "raw": "/** Construct a Baz. */",
  "scope": "instance",
  "start": 198,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Baz",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Baz",
      },
    ],
    "string": "Baz",
  },
}
`;

exports[`./jsdoc/moduleclasses.js snapshots: Item 7 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "baz property",
  "end": 269,
  "filename": "jsdoc/moduleclasses.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 27,
      "index": 269,
      "line": 16,
    },
    "start": Position {
      "column": 8,
      "index": 250,
      "line": 16,
    },
  },
  "raw": "/** baz property */",
  "start": 250,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduleinner.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 290,
  "filename": "jsdoc/moduleinner.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 290,
      "line": 23,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:my/module",
  },
  "path": Array [],
  "raw": "/**
* @module my/module
*/",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduleinner.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document fooIn",
  "end": 87,
  "filename": "jsdoc/moduleinner.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 87,
      "line": 8,
    },
    "start": Position {
      "column": 0,
      "index": 42,
      "line": 6,
    },
  },
  "name": "fooIn",
  "params": Array [],
  "path": Array [
    Object {
      "name": "fooIn",
    },
  ],
  "raw": "/** document fooIn */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 42,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/moduleinner.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 172,
  "filename": "jsdoc/moduleinner.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 172,
      "line": 15,
    },
    "start": Position {
      "column": 0,
      "index": 89,
      "line": 10,
    },
  },
  "name": "bar",
  "namespace": Object {},
  "params": Array [],
  "path": Array [
    Object {
      "name": "bar",
    },
  ],
  "properties": Array [
    Object {
      "description": "document bar.Zop",
      "ignore": false,
      "path": Array [
        Object {
          "name": "bar",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** @namespace */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 89,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/moduleinner.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document bar.Zop",
  "end": 170,
  "filename": "jsdoc/moduleinner.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 170,
      "line": 14,
    },
    "start": Position {
      "column": 4,
      "index": 119,
      "line": 12,
    },
  },
  "member": "zop",
  "memberOf": "bar",
  "name": "zop",
  "params": Array [],
  "path": Array [
    Object {
      "name": "bar",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "document bar.Zop",
        "ignore": false,
        "tags": Array [],
      },
      "code": "zop: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "zop",
        "memberOf": undefined,
        "name": "zop",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "document bar.Zop",
      "end": 170,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 170,
          "line": 14,
        },
        "start": Position {
          "column": 4,
          "index": 119,
          "line": 12,
        },
      },
      "member": "zop",
      "memberOf": undefined,
      "name": "zop",
      "params": Array [],
      "path": Array [],
      "raw": "/** document bar.Zop */",
      "start": 119,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** document bar.Zop */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 119,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/moduleinner.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 282,
  "export": "Frotz",
  "filename": "jsdoc/moduleinner.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isExport": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 282,
      "line": 21,
    },
    "start": Position {
      "column": 0,
      "index": 174,
      "line": 17,
    },
  },
  "member": "Frotz",
  "memberOf": "exports",
  "name": "Frotz",
  "params": Array [],
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "Frotz",
    },
  ],
  "raw": "/** @constructor */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 174,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/moduleinner.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document exports.Frotz#quaz",
  "end": 280,
  "filename": "jsdoc/moduleinner.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 18,
      "index": 280,
      "line": 20,
    },
    "start": Position {
      "column": 4,
      "index": 227,
      "line": 19,
    },
  },
  "member": "quaz",
  "memberOf": "this",
  "name": "quaz",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "quaz",
    },
  ],
  "raw": "/** document exports.Frotz#quaz */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 227,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 1,
}
`;

exports[`./jsdoc/moduleinner.js snapshots: Item 7 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document fooOut",
  "end": 339,
  "filename": "jsdoc/moduleinner.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 339,
      "line": 28,
    },
    "start": Position {
      "column": 0,
      "index": 292,
      "line": 25,
    },
  },
  "name": "fooOut",
  "params": Array [],
  "path": Array [
    Object {
      "name": "fooOut",
    },
  ],
  "raw": "/** document fooOut
*/",
  "start": 292,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/moduleisconstructor.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Describe the module here.",
  "end": 63,
  "filename": "jsdoc/moduleisconstructor.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 63,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:mymodule/config",
  },
  "path": Array [],
  "raw": "/**
 * Describe the module here.
 * @module mymodule/config
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduleisconstructor.js snapshots: Item 2 1`] = `
Object {
  "alias": "module:mymodule/config",
  "aliasOriginal": "Config",
  "ast": Any<Object>,
  "classDescription": "the class here.",
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Create a new configuration.",
  "end": 274,
  "filename": "jsdoc/moduleisconstructor.js",
  "fnName": "Config",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 274,
      "line": 17,
    },
    "start": Position {
      "column": 0,
      "index": 65,
      "line": 6,
    },
  },
  "name": "module:mymodule/config",
  "params": Array [
    Object {
      "name": "id",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "alias": "module:mymodule/config",
      "name": "module:mymodule/config",
      "original": "Config",
    },
  ],
  "raw": "/**
 * Create a new configuration.
 *
 * @classdesc Describe the class here.
 * @class
 * @alias module:mymodule/config
 * @param {string} id
 */",
  "start": 65,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/moduleisconstructor.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Document me.",
  "end": 272,
  "filename": "jsdoc/moduleisconstructor.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 16,
      "index": 272,
      "line": 16,
    },
    "start": Position {
      "column": 3,
      "index": 236,
      "line": 15,
    },
  },
  "member": "id",
  "memberOf": "this",
  "name": "id",
  "params": Array [
    Object {
      "member": "id",
      "name": "id",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "id",
    },
  ],
  "raw": "/** Document me. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 236,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/moduleisconstructor.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Get the configuration ID.",
  "end": 417,
  "filename": "jsdoc/moduleisconstructor.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 417,
      "line": 26,
    },
    "start": Position {
      "column": 0,
      "index": 276,
      "line": 19,
    },
  },
  "member": "getId",
  "memberOf": "Config.prototype",
  "name": "getId",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Config",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "getId",
    },
  ],
  "raw": "/**
 * Get the configuration ID.
 *
 * @return {string} The configuration ID.
 */",
  "returns": Object {
    "description": "configuration ID.",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "string",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "string",
        },
      ],
      "string": "string",
    },
  },
  "scope": "instance",
  "start": 276,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/moduleisconstructor2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Describe the module here.",
  "end": 63,
  "filename": "jsdoc/moduleisconstructor2.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 63,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:mymodule/config",
  },
  "path": Array [],
  "raw": "/**
 * Describe the module here.
 * @module mymodule/config
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduleisconstructor2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Describe the class here.",
  "end": 430,
  "export": "default",
  "filename": "jsdoc/moduleisconstructor2.js",
  "ignore": false,
  "isDefaultExport": true,
  "isExport": true,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 430,
      "line": 25,
    },
    "start": Position {
      "column": 0,
      "index": 65,
      "line": 6,
    },
  },
  "name": "Config",
  "path": Array [
    Object {
      "name": "Config",
    },
  ],
  "properties": Array [
    Object {
      "description": "Create a new configuration.",
      "export": "default",
      "filename": "jsdoc/moduleisconstructor2.js",
      "ignore": false,
      "isAsync": false,
      "isConstructor": true,
      "isDefaultExport": true,
      "isExport": true,
      "isGenerator": false,
      "kind": "constructor",
      "member": "constructor",
      "memberOf": "Config.prototype",
      "name": "constructor",
      "params": Array [
        Object {
          "name": "id",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "string",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
              },
            ],
            "string": "string",
          },
        },
      ],
      "scope": "instance",
      "tags": Array [
        Object {
          "description": "",
          "name": "id",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 2,
              "source": "     * @param {string} id",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "id",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@param",
                "type": "{string}",
              },
            },
            Object {
              "number": 3,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Config",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Config",
          },
        ],
        "string": "Config",
      },
    },
    Object {
      "description": "Get the configuration ID.",
      "export": "default",
      "filename": "jsdoc/moduleisconstructor2.js",
      "ignore": false,
      "isAsync": false,
      "isDefaultExport": true,
      "isExport": true,
      "isGenerator": false,
      "kind": "method",
      "member": "getId",
      "memberOf": "Config.prototype",
      "name": "getId",
      "params": Array [],
      "returns": Object {
        "description": "configuration ID.",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
      },
      "scope": "instance",
      "tags": Array [
        Object {
          "description": "configuration ID.",
          "name": "The",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "     * @return {string} The configuration ID.",
              "tokens": Object {
                "delimiter": "*",
                "description": "configuration ID.",
                "end": "",
                "lineEnd": "",
                "name": "The",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@return",
                "type": "{string}",
              },
            },
            Object {
              "number": 4,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "return",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Config",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Config",
          },
        ],
        "string": "Config",
      },
    },
  ],
  "raw": "/** Describe the class here. */",
  "start": 65,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Config",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Config",
      },
    ],
    "string": "Config",
  },
}
`;

exports[`./jsdoc/moduleisconstructor2.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Create a new configuration.",
  "end": 281,
  "export": "default",
  "filename": "jsdoc/moduleisconstructor2.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isDefaultExport": true,
  "isExport": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 281,
      "line": 15,
    },
    "start": Position {
      "column": 4,
      "index": 131,
      "line": 8,
    },
  },
  "member": "constructor",
  "memberOf": "Config.prototype",
  "name": "constructor",
  "params": Array [
    Object {
      "name": "id",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Config",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "constructor",
    },
  ],
  "raw": "/**
     * Create a new configuration.
     * @param {string} id
     */",
  "scope": "instance",
  "start": 131,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Config",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Config",
      },
    ],
    "string": "Config",
  },
}
`;

exports[`./jsdoc/moduleisconstructor2.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Document me.",
  "end": 253,
  "filename": "jsdoc/moduleisconstructor2.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 27,
      "index": 253,
      "line": 13,
    },
    "start": Position {
      "column": 8,
      "index": 234,
      "line": 13,
    },
  },
  "raw": "/** Document me. */",
  "start": 234,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduleisconstructor2.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Get the configuration ID.",
  "end": 428,
  "export": "default",
  "filename": "jsdoc/moduleisconstructor2.js",
  "ignore": false,
  "isAsync": false,
  "isDefaultExport": true,
  "isExport": true,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 428,
      "line": 24,
    },
    "start": Position {
      "column": 4,
      "index": 287,
      "line": 17,
    },
  },
  "member": "getId",
  "memberOf": "Config.prototype",
  "name": "getId",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Config",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "getId",
    },
  ],
  "raw": "/**
     * Get the configuration ID.
     *
     * @return {string} The configuration ID.
     */",
  "returns": Object {
    "description": "configuration ID.",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "string",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "string",
        },
      ],
      "string": "string",
    },
  },
  "scope": "instance",
  "start": 287,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Config",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Config",
      },
    ],
    "string": "Config",
  },
}
`;

exports[`./jsdoc/moduleisfunction.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "This is a module called foo.",
  "end": 54,
  "filename": "jsdoc/moduleisfunction.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 54,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:foo",
  },
  "path": Array [],
  "raw": "/**
 * This is a module called foo.
 * @module foo
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduleisfunction.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The module exports a single function.",
  "end": 162,
  "export": "default",
  "filename": "jsdoc/moduleisfunction.js",
  "ignore": false,
  "isAsync": false,
  "isDefaultExport": true,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 34,
      "index": 162,
      "line": 10,
    },
    "start": Position {
      "column": 0,
      "index": 56,
      "line": 6,
    },
  },
  "member": "exports",
  "memberOf": "module",
  "name": "exports",
  "params": Array [
    Object {
      "name": "bar",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "module",
    },
    Object {
      "name": "exports",
    },
  ],
  "raw": "/**
 * The module exports a single function.
 * @param {string} bar
 */",
  "start": 56,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/modules/data/mod-1.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 74,
  "filename": "jsdoc/modules/data/mod-1.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 74,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {},
  "path": Array [],
  "raw": "/** @module */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/modules/data/mod-2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 89,
  "filename": "jsdoc/modules/data/mod-2.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 89,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:my/module/name",
  },
  "path": Array [],
  "raw": "/** @module my/module/name */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/modules/data/mod-3.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "My test module.",
  "end": 315,
  "filename": "jsdoc/modules/data/mod-3.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 315,
      "line": 21,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:my/module",
  },
  "path": Array [],
  "raw": "/**
    My test module.
    @module my/module
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/modules/data/mod-3.js snapshots: Item 2 1`] = `
Object {
  "alias": "module:my/module",
  "aliasOriginal": "mod",
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 294,
  "filename": "jsdoc/modules/data/mod-3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 294,
      "line": 18,
    },
    "start": Position {
      "column": 4,
      "index": 75,
      "line": 7,
    },
  },
  "member": "mod",
  "mutable": true,
  "name": "module:my/module",
  "params": Array [],
  "path": Array [
    Object {
      "alias": "module:my/module",
      "name": "module:my/module",
      "original": "mod",
    },
  ],
  "properties": Array [
    Object {
      "description": "Document a property.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "mod",
        },
      ],
      "tags": Array [],
    },
    Object {
      "description": "Document a method.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "mod",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/**
        @undocumented
        @alias module:my/module
     */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 75,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/modules/data/mod-3.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Document a property.",
  "end": 219,
  "filename": "jsdoc/modules/data/mod-3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 25,
      "index": 219,
      "line": 14,
    },
    "start": Position {
      "column": 8,
      "index": 166,
      "line": 13,
    },
  },
  "member": "myProperty",
  "memberOf": "mod",
  "mutable": true,
  "name": "myProperty",
  "params": Array [],
  "path": Array [
    Object {
      "name": "mod",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Document a property.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "myProperty: \\"foo\\"",
      "ctx": Object {
        "kind": "property",
        "member": "myProperty",
        "memberOf": undefined,
        "name": "myProperty",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
        "value": "foo",
      },
      "description": "Document a property.",
      "end": 219,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 25,
          "index": 219,
          "line": 14,
        },
        "start": Position {
          "column": 8,
          "index": 166,
          "line": 13,
        },
      },
      "member": "myProperty",
      "memberOf": undefined,
      "name": "myProperty",
      "path": Array [],
      "raw": "/** Document a property. */",
      "start": 166,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
      "value": "foo",
    },
    Object {
      "cmt": Object {
        "description": "Document a method.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "myMethod: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "myMethod",
        "memberOf": undefined,
        "name": "myMethod",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Document a method.",
      "end": 287,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 31,
          "index": 287,
          "line": 17,
        },
        "start": Position {
          "column": 8,
          "index": 230,
          "line": 16,
        },
      },
      "member": "myMethod",
      "memberOf": undefined,
      "name": "myMethod",
      "params": Array [],
      "path": Array [],
      "raw": "/** Document a method. */",
      "start": 230,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Document a property. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 166,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "foo",
}
`;

exports[`./jsdoc/modules/data/mod-3.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Document a method.",
  "end": 287,
  "filename": "jsdoc/modules/data/mod-3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 31,
      "index": 287,
      "line": 17,
    },
    "start": Position {
      "column": 8,
      "index": 230,
      "line": 16,
    },
  },
  "member": "myMethod",
  "memberOf": "mod",
  "mutable": true,
  "name": "myMethod",
  "params": Array [],
  "path": Array [
    Object {
      "name": "mod",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Document a property.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "myProperty: \\"foo\\"",
      "ctx": Object {
        "kind": "property",
        "member": "myProperty",
        "memberOf": undefined,
        "name": "myProperty",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
        "value": "foo",
      },
      "description": "Document a property.",
      "end": 219,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 25,
          "index": 219,
          "line": 14,
        },
        "start": Position {
          "column": 8,
          "index": 166,
          "line": 13,
        },
      },
      "member": "myProperty",
      "memberOf": undefined,
      "name": "myProperty",
      "path": Array [],
      "raw": "/** Document a property. */",
      "start": 166,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
      "value": "foo",
    },
    Object {
      "cmt": Object {
        "description": "Document a method.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "myMethod: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "myMethod",
        "memberOf": undefined,
        "name": "myMethod",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Document a method.",
      "end": 287,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 31,
          "index": 287,
          "line": 17,
        },
        "start": Position {
          "column": 8,
          "index": 230,
          "line": 16,
        },
      },
      "member": "myMethod",
      "memberOf": undefined,
      "name": "myMethod",
      "params": Array [],
      "path": Array [],
      "raw": "/** Document a method. */",
      "start": 230,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Document a method. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 230,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/moduletag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 28,
  "filename": "jsdoc/moduletag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 28,
      "line": 3,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:bookshelf",
  },
  "path": Array [],
  "raw": "/**
 * @module bookshelf
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduletag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 126,
  "filename": "jsdoc/moduletag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 126,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 30,
      "line": 5,
    },
  },
  "member": "Book",
  "memberOf": "this",
  "name": "Book",
  "params": Array [
    Object {
      "member": "title",
      "name": "title",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "Book",
    },
  ],
  "raw": "/**
 * @class
 */",
  "start": 30,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/moduletag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 124,
  "filename": "jsdoc/moduletag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 23,
      "index": 124,
      "line": 10,
    },
    "start": Position {
      "column": 4,
      "index": 82,
      "line": 9,
    },
  },
  "member": "title",
  "memberOf": "this",
  "name": "title",
  "params": Array [
    Object {
      "member": "title",
      "name": "title",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "title",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 82,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/moduletag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 26,
  "filename": "jsdoc/moduletag2.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 26,
      "index": 26,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:color/mixer",
  },
  "path": Array [],
  "raw": "/** @module color/mixer */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduletag2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Blend two colors together.",
  "end": 124,
  "filename": "jsdoc/moduletag2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 39,
      "index": 124,
      "line": 5,
    },
    "start": Position {
      "column": 4,
      "index": 51,
      "line": 4,
    },
  },
  "member": "blend",
  "memberOf": "exports",
  "name": "blend",
  "params": Array [
    Object {
      "member": "color1",
      "name": "color1",
    },
    Object {
      "member": "color2",
      "name": "color2",
    },
  ],
  "path": Array [
    Object {
      "name": "module",
    },
    Object {
      "name": "exports",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Blend two colors together.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "blend: function (color1, color2) {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "blend",
        "memberOf": undefined,
        "name": "blend",
        "params": Array [
          Object {
            "member": "color1",
            "name": "color1",
          },
          Object {
            "member": "color2",
            "name": "color2",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Blend two colors together.",
      "end": 124,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 39,
          "index": 124,
          "line": 5,
        },
        "start": Position {
          "column": 4,
          "index": 51,
          "line": 4,
        },
      },
      "member": "blend",
      "memberOf": undefined,
      "name": "blend",
      "params": Array [
        Object {
          "member": "color1",
          "name": "color1",
        },
        Object {
          "member": "color2",
          "name": "color2",
        },
      ],
      "path": Array [],
      "raw": "/** Blend two colors together. */",
      "start": 51,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Blend two colors together. */",
  "start": 51,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/moduletag2.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Darken a color by the given shade.",
  "end": 213,
  "export": "darken",
  "filename": "jsdoc/moduletag2.js",
  "ignore": false,
  "isAsync": false,
  "isExport": true,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 43,
      "index": 213,
      "line": 9,
    },
    "start": Position {
      "column": 0,
      "index": 128,
      "line": 8,
    },
  },
  "member": "darken",
  "memberOf": "exports",
  "name": "darken",
  "params": Array [
    Object {
      "member": "color",
      "name": "color",
    },
    Object {
      "member": "shade",
      "name": "shade",
    },
  ],
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "darken",
    },
  ],
  "raw": "/** Darken a color by the given shade. */",
  "start": 128,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/moduletag3.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "a collection of photos.",
  "end": 69,
  "filename": "jsdoc/moduletag3.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 69,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:foo/Photo/manager",
  },
  "path": Array [],
  "raw": "/**
@module foo/Photo/manager
@desc Manage a collection of photos.
*/",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduletag3.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Construct a new Photo manager",
  "end": 389,
  "export": "default",
  "filename": "jsdoc/moduletag3.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isDefaultExport": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 389,
      "line": 19,
    },
    "start": Position {
      "column": 0,
      "index": 71,
      "line": 6,
    },
  },
  "member": "exports",
  "memberOf": "module",
  "name": "exports",
  "params": Array [
    Object {
      "description": "The identifier of the managed collection.",
      "name": "collectionId",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "String",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "String",
          },
        ],
        "string": "String",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "module",
    },
    Object {
      "name": "exports",
    },
  ],
  "raw": "/**
Construct a new Photo manager
@constructor module:foo/Photo/manager
@param {String} collectionId The identifier of the managed collection.
*/",
  "start": 71,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/moduletag3.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 386,
  "filename": "jsdoc/moduletag3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 33,
      "index": 386,
      "line": 17,
    },
    "start": Position {
      "column": 4,
      "index": 264,
      "line": 13,
    },
  },
  "member": "getPhoto",
  "memberOf": "module:foo/Photo/manager",
  "name": "getPhoto",
  "params": Array [
    Object {
      "description": "",
      "name": "photoName",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "String",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "String",
          },
        ],
        "string": "String",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "getPhoto",
    },
  ],
  "raw": "/**
    @function module:foo/Photo/manager#getPhoto
    @param {String} photoName
    */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 264,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/moduletag4.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 17,
  "filename": "jsdoc/moduletag4.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 17,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:M1",
  },
  "path": Array [],
  "raw": "/** @module M1 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduletag4.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The differnet kind of mouse buttons.",
  "end": 201,
  "export": "MouseButtons",
  "filename": "jsdoc/moduletag4.js",
  "ignore": false,
  "isEnum": true,
  "isExport": true,
  "isReadOnly": true,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 201,
      "line": 14,
    },
    "start": Position {
      "column": 0,
      "index": 19,
      "line": 3,
    },
  },
  "member": "MouseButtons",
  "memberOf": "exports",
  "name": "MouseButtons",
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "MouseButtons",
    },
  ],
  "properties": Array [
    Object {
      "kind": "constant",
      "member": "Left",
      "memberOf": "MouseButtons",
      "name": "Left",
      "path": Array [
        Object {
          "name": "exports",
        },
        Object {
          "name": "MouseButtons",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
      "value": "Left",
    },
    Object {
      "kind": "constant",
      "member": "Middle",
      "memberOf": "MouseButtons",
      "name": "Middle",
      "path": Array [
        Object {
          "name": "exports",
        },
        Object {
          "name": "MouseButtons",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
      "value": "Middle",
    },
    Object {
      "kind": "constant",
      "member": "Right",
      "memberOf": "MouseButtons",
      "name": "Right",
      "path": Array [
        Object {
          "name": "exports",
        },
        Object {
          "name": "MouseButtons",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
      "value": "Right",
    },
  ],
  "raw": "/**
 * The differnet kind of mouse buttons.
 *
 * @summary Blah blah
 * @readonly
 * @enum {string} 
 */",
  "start": 19,
  "summary": "blah",
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
}
`;

exports[`./jsdoc/moduletag4.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 329,
  "filename": "jsdoc/moduletag4.js",
  "ignore": false,
  "isTypedef": true,
  "loc": Object {
    "end": Position {
      "column": 4,
      "index": 329,
      "line": 20,
    },
    "start": Position {
      "column": 0,
      "index": 203,
      "line": 16,
    },
  },
  "properties": Array [
    Object {
      "description": "- Which mouse button is clicking.",
    },
  ],
  "raw": "/**
  * @typedef ClickProperties
  * @type {object}
  * @property {MouseButtons} Button - Which mouse button is clicking.
  */",
  "start": 203,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "object",
      },
    ],
    "string": "object",
  },
  "typedef": "ClickProperties",
}
`;

exports[`./jsdoc/moduletag4.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Virtual comment function",
  "end": 456,
  "filename": "jsdoc/moduletag4.js",
  "ignore": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 4,
      "index": 456,
      "line": 29,
    },
    "start": Position {
      "column": 0,
      "index": 331,
      "line": 22,
    },
  },
  "name": "VirtualComment",
  "params": Array [
    Object {
      "description": "- comment",
      "name": "comment",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "raw": "/**
  * Virtual comment function
  *
  * @function VirtualComment
  * @static
  * @param {string} comment - comment
  * 
  */",
  "scope": "static",
  "start": 331,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduletag4.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Virtual comment function 2",
  "end": 575,
  "filename": "jsdoc/moduletag4.js",
  "ignore": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 575,
      "line": 36,
    },
    "start": Position {
      "column": 0,
      "index": 458,
      "line": 31,
    },
  },
  "name": "VirtualComment2",
  "params": Array [
    Object {
      "description": "- comment",
      "name": "comment",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "raw": "/**
 * Virtual comment function 2
 * @function VirtualComment2
 * @instance 
 * @param {string} comment - comment
 */",
  "scope": "instance",
  "start": 458,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduletag5.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 35,
  "filename": "jsdoc/moduletag5.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 35,
      "line": 3,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:bookshelf",
  },
  "raw": "/**
 * @module module:bookshelf
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduletag6.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 22,
  "filename": "jsdoc/moduletag6.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 22,
      "index": 22,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:appname",
  },
  "path": Array [],
  "raw": "/** @module appname */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduletag6.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The name of the application.",
  "end": 105,
  "export": "default",
  "filename": "jsdoc/moduletag6.js",
  "ignore": false,
  "isDefaultExport": true,
  "isExport": true,
  "loc": Object {
    "end": Position {
      "column": 23,
      "index": 105,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 24,
      "line": 3,
    },
  },
  "path": Array [],
  "raw": "/**
 * The name of the application.
 * @type {string}
 */",
  "start": 24,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "mixer",
}
`;

exports[`./jsdoc/moduletag7.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 26,
  "filename": "jsdoc/moduletag7.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 26,
      "index": 26,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:color/mixer",
  },
  "path": Array [],
  "raw": "/** @module color/mixer */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduletag7.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Blend two colors together.",
  "end": 121,
  "export": "default",
  "filename": "jsdoc/moduletag7.js",
  "ignore": false,
  "isAsync": false,
  "isDefaultExport": true,
  "isExport": true,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 38,
      "index": 121,
      "line": 5,
    },
    "start": Position {
      "column": 4,
      "index": 49,
      "line": 4,
    },
  },
  "member": "blend",
  "memberOf": undefined,
  "name": "blend",
  "params": Array [
    Object {
      "member": "color1",
      "name": "color1",
    },
    Object {
      "member": "color2",
      "name": "color2",
    },
  ],
  "path": Array [],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Blend two colors together.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "blend: function (color1, color2) {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "blend",
        "memberOf": undefined,
        "name": "blend",
        "params": Array [
          Object {
            "member": "color1",
            "name": "color1",
          },
          Object {
            "member": "color2",
            "name": "color2",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Blend two colors together.",
      "end": 121,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 38,
          "index": 121,
          "line": 5,
        },
        "start": Position {
          "column": 4,
          "index": 49,
          "line": 4,
        },
      },
      "member": "blend",
      "memberOf": undefined,
      "name": "blend",
      "params": Array [
        Object {
          "member": "color1",
          "name": "color1",
        },
        Object {
          "member": "color2",
          "name": "color2",
        },
      ],
      "path": Array [],
      "raw": "/** Blend two colors together. */",
      "start": 49,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Blend two colors together. */",
  "start": 49,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/moduletag8.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 26,
  "filename": "jsdoc/moduletag8.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 26,
      "index": 26,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:color/mixer",
  },
  "path": Array [],
  "raw": "/** @module color/mixer */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduletag8.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The name of the module.",
  "end": 87,
  "export": "name",
  "filename": "jsdoc/moduletag8.js",
  "ignore": false,
  "isConstant": true,
  "isExport": true,
  "isReadOnly": true,
  "kind": "constant",
  "loc": Object {
    "end": Position {
      "column": 28,
      "index": 87,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 28,
      "line": 3,
    },
  },
  "member": "name",
  "name": "name",
  "path": Array [
    Object {
      "name": "name",
    },
  ],
  "raw": "/** The name of the module. */",
  "start": 28,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "mixer",
}
`;

exports[`./jsdoc/moduletag8.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "The most recent blended color.",
  "end": 155,
  "export": "lastColor",
  "filename": "jsdoc/moduletag8.js",
  "ignore": false,
  "isExport": true,
  "loc": Object {
    "end": Position {
      "column": 28,
      "index": 155,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 89,
      "line": 6,
    },
  },
  "member": "lastColor",
  "mutable": true,
  "name": "lastColor",
  "path": Array [
    Object {
      "name": "lastColor",
    },
  ],
  "raw": "/** The most recent blended color. */",
  "start": 89,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduletag8.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Blend two colors together.",
  "end": 231,
  "export": "blend",
  "filename": "jsdoc/moduletag8.js",
  "fnName": "blend",
  "ignore": false,
  "isAsync": false,
  "isExport": true,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 40,
      "index": 231,
      "line": 10,
    },
    "start": Position {
      "column": 0,
      "index": 157,
      "line": 9,
    },
  },
  "name": "blend",
  "params": Array [
    Object {
      "member": "color1",
      "name": "color1",
    },
    Object {
      "member": "color2",
      "name": "color2",
    },
  ],
  "path": Array [
    Object {
      "name": "blend",
    },
  ],
  "raw": "/** Blend two colors together. */",
  "start": 157,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/moduletag8.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Get the red, green, and blue values of a color.",
  "end": 424,
  "export": "rgbify",
  "filename": "jsdoc/moduletag8.js",
  "ignore": false,
  "isExport": true,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 19,
      "index": 424,
      "line": 20,
    },
    "start": Position {
      "column": 4,
      "index": 321,
      "line": 16,
    },
  },
  "path": Array [],
  "raw": "/**
     * Get the red, green, and blue values of a color.
     * @function
     */",
  "source": "/Users/twipped/Projects/dox2/packages/parser/tests/jsdoc/moduletag8.js",
  "start": 321,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduletag9.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 18,
  "filename": "jsdoc/moduletag9.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 18,
      "index": 18,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:foo",
  },
  "path": Array [],
  "raw": "/** @module foo */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduletag10.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 18,
  "filename": "jsdoc/moduletag10.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 18,
      "index": 18,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:foo",
  },
  "path": Array [],
  "raw": "/** @module foo */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduletag11.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Test module.",
  "end": 38,
  "filename": "jsdoc/moduletag11.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 38,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:foo",
  },
  "path": Array [],
  "raw": "/**
 * Test module.
 * @module foo
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/moduletag11.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Test class.",
  "end": 180,
  "export": "Foo",
  "filename": "jsdoc/moduletag11.js",
  "ignore": false,
  "isExport": true,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 180,
      "line": 13,
    },
    "start": Position {
      "column": 0,
      "index": 40,
      "line": 6,
    },
  },
  "name": "Foo",
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "properties": Array [
    Object {
      "description": "Test class constructor.",
      "filename": "jsdoc/moduletag11.js",
      "ignore": false,
      "isAsync": false,
      "isConstructor": true,
      "isExport": true,
      "isGenerator": false,
      "kind": "constructor",
      "member": "constructor",
      "memberOf": "Foo.prototype",
      "name": "constructor",
      "params": Array [],
      "scope": "instance",
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Foo",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Foo",
          },
        ],
        "string": "Foo",
      },
    },
    Object {
      "description": "Test method.",
      "filename": "jsdoc/moduletag11.js",
      "ignore": false,
      "isAsync": false,
      "isExport": true,
      "isGenerator": false,
      "kind": "method",
      "member": "testMethod",
      "memberOf": "Foo.prototype",
      "name": "testMethod",
      "params": Array [],
      "scope": "instance",
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Foo",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Foo",
          },
        ],
        "string": "Foo",
      },
    },
  ],
  "raw": "/** Test class. */",
  "start": 40,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Foo",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Foo",
      },
    ],
    "string": "Foo",
  },
}
`;

exports[`./jsdoc/moduletag11.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Test class constructor.",
  "end": 133,
  "filename": "jsdoc/moduletag11.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isExport": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 133,
      "line": 9,
    },
    "start": Position {
      "column": 4,
      "index": 82,
      "line": 8,
    },
  },
  "member": "constructor",
  "memberOf": "Foo.prototype",
  "name": "constructor",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "constructor",
    },
  ],
  "raw": "/** Test class constructor. */",
  "scope": "instance",
  "start": 82,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Foo",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Foo",
      },
    ],
    "string": "Foo",
  },
}
`;

exports[`./jsdoc/moduletag11.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Test method.",
  "end": 178,
  "filename": "jsdoc/moduletag11.js",
  "ignore": false,
  "isAsync": false,
  "isExport": true,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 19,
      "index": 178,
      "line": 12,
    },
    "start": Position {
      "column": 4,
      "index": 139,
      "line": 11,
    },
  },
  "member": "testMethod",
  "memberOf": "Foo.prototype",
  "name": "testMethod",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "testMethod",
    },
  ],
  "raw": "/** Test method. */",
  "scope": "instance",
  "start": 139,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Foo",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Foo",
      },
    ],
    "string": "Foo",
  },
}
`;

exports[`./jsdoc/namespacetag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 30,
  "filename": "jsdoc/namespacetag.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 30,
      "line": 3,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "x",
  "mutable": true,
  "name": "x",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "x",
    },
  ],
  "properties": Array [],
  "raw": "/** @namespace */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/namespacetag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 52,
  "filename": "jsdoc/namespacetag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 21,
      "index": 52,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 31,
      "line": 4,
    },
  },
  "namespace": Object {
    "name": "Foo",
  },
  "path": Array [],
  "raw": "/** @namespace Foo */",
  "start": 31,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/namespacetag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 85,
  "filename": "jsdoc/namespacetag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 32,
      "index": 85,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 53,
      "line": 5,
    },
  },
  "namespace": Object {
    "name": "Bar",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "function",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "function",
        },
      ],
      "string": "function",
    },
  },
  "path": Array [],
  "raw": "/** @namespace {function} Bar */",
  "start": 53,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/namespacetag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 175,
  "filename": "jsdoc/namespacetag.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 175,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 87,
      "line": 7,
    },
  },
  "member": "S",
  "mutable": true,
  "name": "S",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "S",
    },
  ],
  "properties": Array [
    Object {
      "description": "Member of the namespace S.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "S",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** @namespace */",
  "start": 87,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/namespacetag.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Member of the namespace S.",
  "end": 172,
  "filename": "jsdoc/namespacetag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 22,
      "index": 172,
      "line": 10,
    },
    "start": Position {
      "column": 1,
      "index": 116,
      "line": 9,
    },
  },
  "member": "Socket",
  "memberOf": "S",
  "mutable": true,
  "name": "Socket",
  "params": Array [],
  "path": Array [
    Object {
      "name": "S",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Member of the namespace S.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "Socket: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "Socket",
        "memberOf": undefined,
        "name": "Socket",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Member of the namespace S.",
      "end": 172,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 22,
          "index": 172,
          "line": 10,
        },
        "start": Position {
          "column": 1,
          "index": 116,
          "line": 9,
        },
      },
      "member": "Socket",
      "memberOf": undefined,
      "name": "Socket",
      "params": Array [],
      "path": Array [],
      "raw": "/** Member of the namespace S. */",
      "start": 116,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Member of the namespace S. */",
  "start": 116,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/nametag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A view.",
  "end": 32,
  "filename": "jsdoc/nametag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 32,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "path": Array [],
  "raw": "/**
 * A view.
 * @name View
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/nametag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A controller.",
  "end": 116,
  "filename": "jsdoc/nametag.js",
  "fnName": "someOtherName",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 27,
      "index": 116,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 34,
      "line": 6,
    },
  },
  "name": "someOtherName",
  "params": Array [],
  "path": Array [
    Object {
      "name": "someOtherName",
    },
  ],
  "raw": "/**
 * A controller.
 * @name Controller
 * @class
 */",
  "start": 34,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/nametag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Helper methods for models, views, and controllers.",
  "end": 213,
  "filename": "jsdoc/nametag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 213,
      "line": 17,
    },
    "start": Position {
      "column": 0,
      "index": 118,
      "line": 13,
    },
  },
  "namespace": Object {},
  "raw": "/**
 * Helper methods for models, views, and controllers.
 * @name MvcHelpers
 * @namespace
 */",
  "start": 118,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/nametag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Add the item to its parent.",
  "end": 308,
  "filename": "jsdoc/nametag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 308,
      "line": 24,
    },
    "start": Position {
      "column": 0,
      "index": 215,
      "line": 19,
    },
  },
  "parent": "MvcHelpers",
  "raw": "/**
 * Add the item to its parent.
 * @name addToParent
 * @memberOf MvcHelpers
 * @inner
 */",
  "scope": "inner",
  "start": 215,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/noaliastag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 33,
  "filename": "jsdoc/noaliastag.js",
  "fnName": "Foo",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 33,
      "line": 2,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "raw": "/** @noalias */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/nocollapsetag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A namespace.",
  "end": 47,
  "filename": "jsdoc/nocollapsetag.js",
  "ignore": false,
  "isConstant": true,
  "isReadOnly": true,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 13,
      "index": 47,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "foo",
  "mutable": true,
  "name": "foo",
  "path": Array [
    Object {
      "name": "foo",
    },
  ],
  "properties": Array [],
  "raw": "/**
 * A namespace.
 * @const
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/nocollapsetag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 83,
  "filename": "jsdoc/nocollapsetag.js",
  "ignore": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 15,
      "index": 83,
      "line": 8,
    },
    "start": Position {
      "column": 0,
      "index": 49,
      "line": 7,
    },
  },
  "member": "bar",
  "memberOf": "foo",
  "name": "bar",
  "path": Array [
    Object {
      "name": "foo",
    },
    Object {
      "name": "bar",
    },
  ],
  "raw": "/** @nocollapse */",
  "start": 49,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "boolean",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "boolean",
      },
    ],
    "string": "boolean",
  },
  "value": true,
}
`;

exports[`./jsdoc/nocompiletag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 17,
  "filename": "jsdoc/nocompiletag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 17,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "raw": "/** @nocompile */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/nosideeffectstag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A function that does nothing.",
  "end": 82,
  "filename": "jsdoc/nosideeffectstag.js",
  "fnName": "doNothing",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 23,
      "index": 82,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "doNothing",
  "params": Array [],
  "path": Array [
    Object {
      "name": "doNothing",
    },
  ],
  "raw": "/**
 * A function that does nothing.
 * @nosideeffects
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/numericpropertytag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 203,
  "filename": "jsdoc/numericpropertytag.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 203,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "numericObject",
  "mutable": true,
  "name": "numericObject",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "numericObject",
    },
  ],
  "properties": Array [
    Object {
      "description": "The number one.",
    },
    Object {
      "description": "The number two.",
    },
    Object {
      "description": "The number three.",
    },
  ],
  "raw": "/**
 * @namespace
 * @property {String} 1 The number one.
 * @property {String} 2 The number two.
 * @property {String} 3 The number three.
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/objectlit.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 127,
  "filename": "jsdoc/objectlit.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 127,
      "line": 8,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "tools",
  "mutable": true,
  "name": "tools",
  "path": Array [
    Object {
      "name": "tools",
    },
  ],
  "properties": Array [
    Object {
      "description": "document me",
      "ignore": false,
      "path": Array [
        Object {
          "name": "tools",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** document me */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/objectlit.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 124,
  "filename": "jsdoc/objectlit.js",
  "ignore": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 124,
      "line": 7,
    },
    "start": Position {
      "column": 4,
      "index": 37,
      "line": 3,
    },
  },
  "member": "serialiser",
  "memberOf": "tools",
  "mutable": true,
  "name": "serialiser",
  "path": Array [
    Object {
      "name": "tools",
    },
  ],
  "properties": Array [
    Object {
      "description": "document me",
      "ignore": false,
      "path": Array [
        Object {
          "name": "tools",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** document me */",
  "start": 37,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/objectlit.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 118,
  "filename": "jsdoc/objectlit.js",
  "ignore": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 118,
      "line": 6,
    },
    "start": Position {
      "column": 8,
      "index": 82,
      "line": 5,
    },
  },
  "member": "value",
  "memberOf": "serialiser",
  "mutable": true,
  "name": "value",
  "path": Array [
    Object {
      "name": "tools",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "document me",
        "ignore": false,
        "tags": Array [],
      },
      "code": "value: ''",
      "ctx": Object {
        "kind": "property",
        "member": "value",
        "memberOf": undefined,
        "name": "value",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
        "value": "",
      },
      "description": "document me",
      "end": 118,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 17,
          "index": 118,
          "line": 6,
        },
        "start": Position {
          "column": 8,
          "index": 82,
          "line": 5,
        },
      },
      "member": "value",
      "memberOf": undefined,
      "name": "value",
      "path": Array [],
      "raw": "/** document me */",
      "start": 82,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
      "value": "",
    },
  ],
  "raw": "/** document me */",
  "start": 82,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "",
}
`;

exports[`./jsdoc/objectlit2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 110,
  "filename": "jsdoc/objectlit2.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 110,
      "line": 8,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "position",
  "mutable": true,
  "name": "position",
  "path": Array [
    Object {
      "name": "position",
    },
  ],
  "properties": Array [
    Object {
      "kind": "property",
      "member": "axis",
      "memberOf": "position",
      "name": "axis",
      "path": Array [
        Object {
          "name": "position",
        },
      ],
      "properties": Array [
        Object {
          "description": "document me",
          "ignore": false,
          "path": Array [
            Object {
              "name": "position",
            },
          ],
          "tags": Array [],
        },
        Object {
          "kind": "property",
          "member": "y",
          "memberOf": "axis",
          "name": "y",
          "path": Array [
            Object {
              "name": "position",
            },
          ],
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "number",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "number",
              },
            ],
            "string": "number",
          },
          "value": 0,
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Object",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Object",
          },
        ],
        "string": "Object",
      },
    },
  ],
  "raw": "/** document me */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/objectlit2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 87,
  "filename": "jsdoc/objectlit2.js",
  "ignore": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 12,
      "index": 87,
      "line": 5,
    },
    "start": Position {
      "column": 8,
      "index": 56,
      "line": 4,
    },
  },
  "member": "x",
  "memberOf": "axis",
  "mutable": true,
  "name": "x",
  "path": Array [
    Object {
      "name": "position",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "document me",
        "ignore": false,
        "tags": Array [],
      },
      "code": "x: 0",
      "ctx": Object {
        "kind": "property",
        "member": "x",
        "memberOf": undefined,
        "name": "x",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "number",
            },
          ],
          "string": "number",
        },
        "value": 0,
      },
      "description": "document me",
      "end": 87,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 12,
          "index": 87,
          "line": 5,
        },
        "start": Position {
          "column": 8,
          "index": 56,
          "line": 4,
        },
      },
      "member": "x",
      "memberOf": undefined,
      "name": "x",
      "path": Array [],
      "raw": "/** document me */",
      "start": 56,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 0,
    },
  ],
  "raw": "/** document me */",
  "start": 56,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 0,
}
`;

exports[`./jsdoc/objectlit3.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Tokens that can appear in the stream.",
  "end": 254,
  "filename": "jsdoc/objectlit3.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 254,
      "line": 10,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "tokens",
  "mutable": true,
  "name": "tokens",
  "path": Array [
    Object {
      "name": "tokens",
    },
  ],
  "properties": Array [
    Object {
      "description": "Open parenthesis.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "tokens",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** Tokens that can appear in the stream. */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/objectlit3.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Open parenthesis.",
  "end": 251,
  "filename": "jsdoc/objectlit3.js",
  "ignore": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 251,
      "line": 9,
    },
    "start": Position {
      "column": 1,
      "index": 61,
      "line": 3,
    },
  },
  "member": "'('",
  "memberOf": "tokens",
  "mutable": true,
  "name": "'('",
  "path": Array [
    Object {
      "name": "tokens",
    },
  ],
  "properties": Array [
    Object {
      "description": "Executed before the token is processed.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "tokens",
        },
      ],
      "tags": Array [],
    },
    Object {
      "description": "Executed after the token is processed.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "tokens",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** Open parenthesis. */",
  "start": 61,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/objectlit3.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Executed before the token is processed.",
  "end": 171,
  "filename": "jsdoc/objectlit3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 28,
      "index": 171,
      "line": 6,
    },
    "start": Position {
      "column": 2,
      "index": 96,
      "line": 5,
    },
  },
  "member": "before",
  "memberOf": "'('",
  "mutable": true,
  "name": "before",
  "params": Array [
    Object {
      "member": "token",
      "name": "token",
    },
  ],
  "path": Array [
    Object {
      "name": "tokens",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Executed before the token is processed.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "before: function (token) {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "before",
        "memberOf": undefined,
        "name": "before",
        "params": Array [
          Object {
            "member": "token",
            "name": "token",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Executed before the token is processed.",
      "end": 171,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 28,
          "index": 171,
          "line": 6,
        },
        "start": Position {
          "column": 2,
          "index": 96,
          "line": 5,
        },
      },
      "member": "before",
      "memberOf": undefined,
      "name": "before",
      "params": Array [
        Object {
          "member": "token",
          "name": "token",
        },
      ],
      "path": Array [],
      "raw": "/** Executed before the token is processed. */",
      "start": 96,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Executed after the token is processed.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "after: function (token) {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "after",
        "memberOf": undefined,
        "name": "after",
        "params": Array [
          Object {
            "member": "token",
            "name": "token",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Executed after the token is processed.",
      "end": 248,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 27,
          "index": 248,
          "line": 8,
        },
        "start": Position {
          "column": 2,
          "index": 175,
          "line": 7,
        },
      },
      "member": "after",
      "memberOf": undefined,
      "name": "after",
      "params": Array [
        Object {
          "member": "token",
          "name": "token",
        },
      ],
      "path": Array [],
      "raw": "/** Executed after the token is processed. */",
      "start": 175,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Executed before the token is processed. */",
  "start": 96,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/objectlit3.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Executed after the token is processed.",
  "end": 248,
  "filename": "jsdoc/objectlit3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 27,
      "index": 248,
      "line": 8,
    },
    "start": Position {
      "column": 2,
      "index": 175,
      "line": 7,
    },
  },
  "member": "after",
  "memberOf": "'('",
  "mutable": true,
  "name": "after",
  "params": Array [
    Object {
      "member": "token",
      "name": "token",
    },
  ],
  "path": Array [
    Object {
      "name": "tokens",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "Executed before the token is processed.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "before: function (token) {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "before",
        "memberOf": undefined,
        "name": "before",
        "params": Array [
          Object {
            "member": "token",
            "name": "token",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Executed before the token is processed.",
      "end": 171,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 28,
          "index": 171,
          "line": 6,
        },
        "start": Position {
          "column": 2,
          "index": 96,
          "line": 5,
        },
      },
      "member": "before",
      "memberOf": undefined,
      "name": "before",
      "params": Array [
        Object {
          "member": "token",
          "name": "token",
        },
      ],
      "path": Array [],
      "raw": "/** Executed before the token is processed. */",
      "start": 96,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Executed after the token is processed.",
        "ignore": false,
        "tags": Array [],
      },
      "code": "after: function (token) {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "after",
        "memberOf": undefined,
        "name": "after",
        "params": Array [
          Object {
            "member": "token",
            "name": "token",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Executed after the token is processed.",
      "end": 248,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 27,
          "index": 248,
          "line": 8,
        },
        "start": Position {
          "column": 2,
          "index": 175,
          "line": 7,
        },
      },
      "member": "after",
      "memberOf": undefined,
      "name": "after",
      "params": Array [
        Object {
          "member": "token",
          "name": "token",
        },
      ],
      "path": Array [],
      "raw": "/** Executed after the token is processed. */",
      "start": 175,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** Executed after the token is processed. */",
  "start": 175,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/overridetag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Parent class.",
  "end": 59,
  "filename": "jsdoc/overridetag.js",
  "fnName": "Connection",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 24,
      "index": 59,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Connection",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Connection",
    },
  ],
  "raw": "/**
 * Parent class.
 * @class
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/overridetag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Open the connection.",
  "end": 147,
  "filename": "jsdoc/overridetag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 42,
      "index": 147,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 61,
      "line": 7,
    },
  },
  "member": "open",
  "memberOf": "Connection.prototype",
  "name": "open",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Connection",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "open",
    },
  ],
  "raw": "/**
 * Open the connection.
 * @virtual
 */",
  "scope": "instance",
  "start": 61,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/overridetag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Close the connection.",
  "end": 225,
  "filename": "jsdoc/overridetag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 43,
      "index": 225,
      "line": 16,
    },
    "start": Position {
      "column": 0,
      "index": 149,
      "line": 13,
    },
  },
  "member": "close",
  "memberOf": "Connection.prototype",
  "name": "close",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Connection",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "close",
    },
  ],
  "raw": "/**
 * Close the connection.
 */",
  "scope": "instance",
  "start": 149,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/overridetag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Read the specified number of bytes from the connection.",
  "end": 475,
  "filename": "jsdoc/overridetag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 47,
      "index": 475,
      "line": 25,
    },
    "start": Position {
      "column": 0,
      "index": 227,
      "line": 18,
    },
  },
  "member": "read",
  "memberOf": "Connection",
  "name": "read",
  "params": Array [
    Object {
      "description": "- The number of bytes to read.",
      "name": "bytes",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Connection",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "read",
    },
  ],
  "raw": "/**
 * Read the specified number of bytes from the connection.
 *
 * @function Connection#read
 * @param {number} bytes - The number of bytes to read.
 * @return {Buffer} The bytes that were read.
 */",
  "returns": Object {
    "description": "bytes that were read.",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "Buffer",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "Buffer",
        },
      ],
      "string": "Buffer",
    },
  },
  "scope": "instance",
  "start": 227,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/overridetag.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Child class.",
  "end": 554,
  "extends": Array [
    Object {
      "name": "Connection",
    },
  ],
  "filename": "jsdoc/overridetag.js",
  "fnName": "Socket",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 554,
      "line": 32,
    },
    "start": Position {
      "column": 0,
      "index": 477,
      "line": 27,
    },
  },
  "name": "Socket",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Socket",
    },
  ],
  "raw": "/**
 * Child class.
 * @class
 * @extends Connection
 */",
  "start": 477,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/overridetag.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 611,
  "filename": "jsdoc/overridetag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 38,
      "index": 611,
      "line": 35,
    },
    "start": Position {
      "column": 0,
      "index": 556,
      "line": 34,
    },
  },
  "member": "open",
  "memberOf": "Socket.prototype",
  "name": "open",
  "overrides": true,
  "params": Array [],
  "path": Array [
    Object {
      "name": "Socket",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "open",
    },
  ],
  "raw": "/** @override */",
  "scope": "instance",
  "start": 556,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/overridetag.js snapshots: Item 7 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Close the socket.",
  "end": 776,
  "filename": "jsdoc/overridetag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 39,
      "index": 776,
      "line": 42,
    },
    "start": Position {
      "column": 0,
      "index": 613,
      "line": 37,
    },
  },
  "member": "close",
  "memberOf": "Socket.prototype",
  "name": "close",
  "overrides": true,
  "params": Array [
    Object {
      "description": "- A message explaining why the socket is being closed.",
      "name": "message",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Socket",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "close",
    },
  ],
  "raw": "/**
 * Close the socket.
 * @param {string} message - A message explaining why the socket is being closed.
 * @override
 */",
  "scope": "instance",
  "start": 613,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/overridetag.js snapshots: Item 8 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 838,
  "filename": "jsdoc/overridetag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 43,
      "index": 838,
      "line": 45,
    },
    "start": Position {
      "column": 0,
      "index": 778,
      "line": 44,
    },
  },
  "member": "read",
  "memberOf": "Socket.prototype",
  "name": "read",
  "overrides": true,
  "params": Array [
    Object {
      "member": "bytes",
      "name": "bytes",
    },
  ],
  "path": Array [
    Object {
      "name": "Socket",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "read",
    },
  ],
  "raw": "/** @override */",
  "scope": "instance",
  "start": 778,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/overridetag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Parent interface.",
  "end": 67,
  "filename": "jsdoc/overridetag2.js",
  "fnName": "Connection",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "isInterface": true,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 24,
      "index": 67,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Connection",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Connection",
    },
  ],
  "raw": "/**
 * Parent interface.
 * @interface
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/overridetag2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Open the connection.",
  "end": 143,
  "filename": "jsdoc/overridetag2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 42,
      "index": 143,
      "line": 10,
    },
    "start": Position {
      "column": 0,
      "index": 69,
      "line": 7,
    },
  },
  "member": "open",
  "memberOf": "Connection.prototype",
  "name": "open",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Connection",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "open",
    },
  ],
  "raw": "/**
 * Open the connection.
 */",
  "scope": "instance",
  "start": 69,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/overridetag2.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Close the connection.",
  "end": 221,
  "filename": "jsdoc/overridetag2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 43,
      "index": 221,
      "line": 15,
    },
    "start": Position {
      "column": 0,
      "index": 145,
      "line": 12,
    },
  },
  "member": "close",
  "memberOf": "Connection.prototype",
  "name": "close",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Connection",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "close",
    },
  ],
  "raw": "/**
 * Close the connection.
 */",
  "scope": "instance",
  "start": 145,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/overridetag2.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Read the specified number of bytes from the connection.",
  "end": 471,
  "filename": "jsdoc/overridetag2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 47,
      "index": 471,
      "line": 24,
    },
    "start": Position {
      "column": 0,
      "index": 223,
      "line": 17,
    },
  },
  "member": "read",
  "memberOf": "Connection",
  "name": "read",
  "params": Array [
    Object {
      "description": "- The number of bytes to read.",
      "name": "bytes",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Connection",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "read",
    },
  ],
  "raw": "/**
 * Read the specified number of bytes from the connection.
 *
 * @function Connection#read
 * @param {number} bytes - The number of bytes to read.
 * @return {Buffer} The bytes that were read.
 */",
  "returns": Object {
    "description": "bytes that were read.",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "Buffer",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "Buffer",
        },
      ],
      "string": "Buffer",
    },
  },
  "scope": "instance",
  "start": 223,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/overridetag2.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Child class.",
  "end": 553,
  "filename": "jsdoc/overridetag2.js",
  "fnName": "Socket",
  "ignore": false,
  "implements": Array [],
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 553,
      "line": 31,
    },
    "start": Position {
      "column": 0,
      "index": 473,
      "line": 26,
    },
  },
  "name": "Socket",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Socket",
    },
  ],
  "raw": "/**
 * Child class.
 * @class
 * @implements Connection
 */",
  "start": 473,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/overridetag2.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 610,
  "filename": "jsdoc/overridetag2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 38,
      "index": 610,
      "line": 34,
    },
    "start": Position {
      "column": 0,
      "index": 555,
      "line": 33,
    },
  },
  "member": "open",
  "memberOf": "Socket.prototype",
  "name": "open",
  "overrides": true,
  "params": Array [],
  "path": Array [
    Object {
      "name": "Socket",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "open",
    },
  ],
  "raw": "/** @override */",
  "scope": "instance",
  "start": 555,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/overridetag2.js snapshots: Item 7 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Close the socket.",
  "end": 775,
  "filename": "jsdoc/overridetag2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 39,
      "index": 775,
      "line": 41,
    },
    "start": Position {
      "column": 0,
      "index": 612,
      "line": 36,
    },
  },
  "member": "close",
  "memberOf": "Socket.prototype",
  "name": "close",
  "overrides": true,
  "params": Array [
    Object {
      "description": "- A message explaining why the socket is being closed.",
      "name": "message",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Socket",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "close",
    },
  ],
  "raw": "/**
 * Close the socket.
 * @param {string} message - A message explaining why the socket is being closed.
 * @override
 */",
  "scope": "instance",
  "start": 612,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/overridetag2.js snapshots: Item 8 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 837,
  "filename": "jsdoc/overridetag2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 43,
      "index": 837,
      "line": 44,
    },
    "start": Position {
      "column": 0,
      "index": 777,
      "line": 43,
    },
  },
  "member": "read",
  "memberOf": "Socket.prototype",
  "name": "read",
  "overrides": true,
  "params": Array [
    Object {
      "member": "bytes",
      "name": "bytes",
    },
  ],
  "path": Array [
    Object {
      "name": "Socket",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "read",
    },
  ],
  "raw": "/** @override */",
  "scope": "instance",
  "start": 777,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/packagetag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "This function is package-private.",
  "end": 77,
  "filename": "jsdoc/packagetag.js",
  "fnName": "foo",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 77,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "foo",
    },
  ],
  "raw": "/**
 * This function is package-private.
 *
 * @package
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
  "visibility": "package",
}
`;

exports[`./jsdoc/packagetag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 145,
  "filename": "jsdoc/packagetag2.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 145,
      "line": 8,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "connectionPorts",
  "mutable": true,
  "name": "connectionPorts",
  "path": Array [
    Object {
      "name": "connectionPorts",
    },
  ],
  "properties": Array [
    Object {
      "kind": "property",
      "member": "'devServer'",
      "memberOf": "connectionPorts",
      "name": "'devServer'",
      "path": Array [
        Object {
          "name": "connectionPorts",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 6464,
    },
    Object {
      "kind": "property",
      "member": "'prodServer'",
      "memberOf": "connectionPorts",
      "name": "'prodServer'",
      "path": Array [
        Object {
          "name": "connectionPorts",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 2232,
    },
    Object {
      "kind": "property",
      "member": "'stagingServer'",
      "memberOf": "connectionPorts",
      "name": "'stagingServer'",
      "path": Array [
        Object {
          "name": "connectionPorts",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 4997,
    },
  ],
  "raw": "/**
 * @package {Object.<string, number>}
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
  "visibility": "package",
}
`;

exports[`./jsdoc/paramtag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 124,
  "filename": "jsdoc/paramtag.js",
  "fnName": "find",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 124,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "find",
  "params": Array [
    Object {
      "description": "The name (or names) of what to find.",
      "name": "targetName",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "String",
            "type": "NAME",
          },
          Object {
            "meta": Object {
              "syntax": "ANGLE_BRACKET",
            },
            "objects": Array [
              Object {
                "name": "String",
                "type": "NAME",
              },
            ],
            "subject": Object {
              "name": "Array",
              "type": "NAME",
            },
            "type": "GENERIC",
          },
        ],
        "simple": Array [
          Object {
            "name": "String",
          },
          Object {
            "generic": Object {
              "name": "Array",
            },
            "name": "String",
          },
        ],
        "string": "String | Array<String>",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "find",
    },
  ],
  "raw": "/**
*  @param { String | Array<String>}  targetName    The name (or names) of what to find.
*/",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/paramtag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 190,
  "filename": "jsdoc/paramtag.js",
  "fnName": "bind",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 190,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 126,
      "line": 7,
    },
  },
  "name": "bind",
  "params": Array [
    Object {
      "description": "",
      "name": "callback",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "function",
          },
        ],
        "string": "function",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "bind",
    },
  ],
  "raw": "/**
*  @param {function} callback
*/",
  "start": 126,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/paramtag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 249,
  "filename": "jsdoc/paramtag.js",
  "fnName": "unbind",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 249,
      "line": 17,
    },
    "start": Position {
      "column": 0,
      "index": 192,
      "line": 13,
    },
  },
  "name": "unbind",
  "params": Array [
    Object {
      "description": "",
      "name": "",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "function",
          },
        ],
        "string": "function",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "unbind",
    },
  ],
  "raw": "/**
*  @param {function}
*/",
  "start": 192,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/paramtag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 321,
  "filename": "jsdoc/paramtag.js",
  "fnName": "getElement",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 321,
      "line": 23,
    },
    "start": Position {
      "column": 0,
      "index": 251,
      "line": 19,
    },
  },
  "name": "getElement",
  "params": Array [
    Object {
      "description": "The id of the element.",
      "name": "id",
      "optional": false,
      "type": Array [],
    },
  ],
  "path": Array [
    Object {
      "name": "getElement",
    },
  ],
  "raw": "/**
*  @param id The id of the element.
*/",
  "start": 251,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/paramtag.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 388,
  "filename": "jsdoc/paramtag.js",
  "fnName": "combine",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 388,
      "line": 29,
    },
    "start": Position {
      "column": 0,
      "index": 323,
      "line": 25,
    },
  },
  "name": "combine",
  "params": Array [
    Object {
      "description": "Two or more elements.",
      "memberOf": "..",
      "name": "",
      "optional": false,
      "type": Array [],
    },
  ],
  "path": Array [
    Object {
      "name": "combine",
    },
  ],
  "raw": "/**
*  @param ... Two or more elements.
*/",
  "start": 323,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/paramtag.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 466,
  "filename": "jsdoc/paramtag.js",
  "fnName": "split",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 466,
      "line": 35,
    },
    "start": Position {
      "column": 0,
      "index": 390,
      "line": 31,
    },
  },
  "name": "split",
  "params": Array [
    Object {
      "description": "- What to split on.",
      "name": "delimiter",
      "optional": false,
      "type": Array [],
    },
  ],
  "path": Array [
    Object {
      "name": "split",
    },
  ],
  "raw": "/**
*  @param delimiter - What to split on.
*/",
  "start": 390,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/paramtag.js snapshots: Item 7 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 546,
  "filename": "jsdoc/paramtag.js",
  "fnName": "commit",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 546,
      "line": 41,
    },
    "start": Position {
      "column": 0,
      "index": 468,
      "line": 37,
    },
  },
  "name": "commit",
  "params": Array [
    Object {
      "description": "If true make the commit atomic.",
      "name": "-",
      "optional": false,
      "type": Array [],
    },
  ],
  "path": Array [
    Object {
      "name": "commit",
    },
  ],
  "raw": "/**
*  @param - If true make the commit atomic.
*/",
  "start": 468,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/paramtag.js snapshots: Item 8 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 635,
  "filename": "jsdoc/paramtag.js",
  "fnName": "request",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 635,
      "line": 47,
    },
    "start": Position {
      "column": 0,
      "index": 548,
      "line": 43,
    },
  },
  "name": "request",
  "params": Array [
    Object {
      "description": "- whether to be asynchronous",
      "name": "async",
      "optional": true,
      "type": Array [],
    },
  ],
  "path": Array [
    Object {
      "name": "request",
    },
  ],
  "raw": "/**
 * @param [async=true] - whether to be asynchronous
 */",
  "start": 548,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/paramtag.js snapshots: Item 9 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 673,
  "filename": "jsdoc/paramtag.js",
  "fnName": "MySocket",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 22,
      "index": 673,
      "line": 50,
    },
    "start": Position {
      "column": 0,
      "index": 637,
      "line": 49,
    },
  },
  "name": "MySocket",
  "params": Array [],
  "path": Array [
    Object {
      "name": "MySocket",
    },
  ],
  "raw": "/** @class */",
  "start": 637,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/paramtag.js snapshots: Item 10 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 801,
  "filename": "jsdoc/paramtag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 54,
      "index": 801,
      "line": 55,
    },
    "start": Position {
      "column": 0,
      "index": 674,
      "line": 51,
    },
  },
  "member": "open",
  "memberOf": "MySocket.prototype",
  "name": "open",
  "params": Array [
    Object {
      "description": "Hostname.",
      "name": "-",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "description": "Port number.",
      "name": "-",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "MySocket",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "open",
    },
  ],
  "raw": "/**
 * @param {string} - Hostname.
 * @param {number} - Port number.
 */",
  "scope": "instance",
  "start": 674,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/paramtag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 23,
  "filename": "jsdoc/paramtag2.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 23,
      "index": 23,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:mysocket",
  },
  "path": Array [],
  "raw": "/** @module mysocket */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/paramtag2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 141,
  "export": "open",
  "filename": "jsdoc/paramtag2.js",
  "ignore": false,
  "isAsync": false,
  "isExport": true,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 43,
      "index": 141,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 25,
      "line": 3,
    },
  },
  "member": "open",
  "memberOf": "exports",
  "name": "open",
  "params": Array [
    Object {
      "description": "Hostname.",
      "name": "-",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "description": "Port number.",
      "name": "-",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "open",
    },
  ],
  "raw": "/**
 * @param {string} - Hostname.
 * @param {number} - Port number.
 */",
  "start": 25,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/paramtaginvalidtype.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 50,
  "filename": "jsdoc/paramtaginvalidtype.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 26,
      "index": 50,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "Test",
  "mutable": true,
  "name": "Test",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Test",
    },
  ],
  "raw": "/**
 * @constructor
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/paramtaginvalidtype.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 127,
  "filename": "jsdoc/paramtaginvalidtype.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 38,
      "index": 127,
      "line": 9,
    },
    "start": Position {
      "column": 0,
      "index": 52,
      "line": 6,
    },
  },
  "member": "test",
  "memberOf": "Test.prototype",
  "name": "test",
  "params": Array [
    Object {
      "name": "a",
      "optional": false,
      "type": JSDocType {
        "error": [InvalidJSDocTypeError: "{string, number}" is not a valid JSDoc Type: Expected "!", "#", "&", ".", "...", ".<", "<", "=", "?", "[", "|", "~", [ \\t], [\\n], [\\r], [a-zA-Z0-9_$\\-], or end of input but "," found.],
        "string": "string, number",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Test",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "test",
    },
  ],
  "raw": "/**
 * @param {string, number} a
 */",
  "scope": "instance",
  "start": 52,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/paramtagsametype.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Baz class.",
  "end": 255,
  "filename": "jsdoc/paramtagsametype.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 255,
      "line": 16,
    },
    "start": Position {
      "column": 0,
      "index": 30,
      "line": 5,
    },
  },
  "member": "Baz",
  "memberOf": "foo.bar",
  "name": "Baz",
  "path": Array [
    Object {
      "name": "foo",
    },
    Object {
      "name": "bar",
    },
    Object {
      "name": "Baz",
    },
  ],
  "properties": Array [
    Object {
      "description": "Creates a Baz.",
      "filename": "jsdoc/paramtagsametype.js",
      "ignore": false,
      "isAsync": false,
      "isConstructor": true,
      "isGenerator": false,
      "kind": "constructor",
      "member": "constructor",
      "memberOf": "Baz.prototype",
      "name": "constructor",
      "params": Array [
        Object {
          "description": "- First parameter.",
          "name": "first",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "meta": Object {
                  "syntax": "SUFFIX_EQUALS_SIGN",
                },
                "type": "OPTIONAL",
                "value": Object {
                  "name": "string",
                  "type": "NAME",
                },
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
                "optional": true,
              },
            ],
            "string": "string=",
          },
        },
        Object {
          "description": "- Second parameter.",
          "name": "second",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "meta": Object {
                  "syntax": "SUFFIX_EQUALS_SIGN",
                },
                "type": "OPTIONAL",
                "value": Object {
                  "name": "string",
                  "type": "NAME",
                },
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
                "optional": true,
              },
            ],
            "string": "string=",
          },
        },
      ],
      "scope": "instance",
      "tags": Array [
        Object {
          "description": "- First parameter.",
          "name": "first",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "     * @param {string=} first - First parameter.",
              "tokens": Object {
                "delimiter": "*",
                "description": "- First parameter.",
                "end": "",
                "lineEnd": "",
                "name": "first",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@param",
                "type": "{string=}",
              },
            },
          ],
          "tag": "param",
          "type": "string=",
        },
        Object {
          "description": "- Second parameter.",
          "name": "second",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 4,
              "source": "     * @param {string=} second - Second parameter.",
              "tokens": Object {
                "delimiter": "*",
                "description": "- Second parameter.",
                "end": "",
                "lineEnd": "",
                "name": "second",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@param",
                "type": "{string=}",
              },
            },
            Object {
              "number": 5,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "string=",
        },
      ],
    },
  ],
  "raw": "/**
 * Baz class.
 */",
  "start": 30,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/paramtagsametype.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Creates a Baz.",
  "end": 252,
  "filename": "jsdoc/paramtagsametype.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 33,
      "index": 252,
      "line": 15,
    },
    "start": Position {
      "column": 4,
      "index": 78,
      "line": 9,
    },
  },
  "member": "constructor",
  "memberOf": "Baz.prototype",
  "name": "constructor",
  "params": Array [
    Object {
      "description": "- First parameter.",
      "name": "first",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "meta": Object {
              "syntax": "SUFFIX_EQUALS_SIGN",
            },
            "type": "OPTIONAL",
            "value": Object {
              "name": "string",
              "type": "NAME",
            },
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
            "optional": true,
          },
        ],
        "string": "string=",
      },
    },
    Object {
      "description": "- Second parameter.",
      "name": "second",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "meta": Object {
              "syntax": "SUFFIX_EQUALS_SIGN",
            },
            "type": "OPTIONAL",
            "value": Object {
              "name": "string",
              "type": "NAME",
            },
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
            "optional": true,
          },
        ],
        "string": "string=",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Baz",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "constructor",
    },
  ],
  "raw": "/**
     * Creates a Baz.
     *
     * @param {string=} first - First parameter.
     * @param {string=} second - Second parameter.
     */",
  "scope": "instance",
  "start": 78,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/plugins.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 24,
  "filename": "jsdoc/plugins.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 24,
      "line": 3,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "path": Array [],
  "raw": "/**
 * @name virtual
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/plugins.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 82,
  "filename": "jsdoc/plugins.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 18,
      "index": 82,
      "line": 10,
    },
    "start": Position {
      "column": 0,
      "index": 44,
      "line": 7,
    },
  },
  "member": "test",
  "mutable": true,
  "name": "test",
  "path": Array [
    Object {
      "name": "test",
    },
  ],
  "raw": "/**
 * @foo bar
 */",
  "start": 44,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "tada",
}
`;

exports[`./jsdoc/polymerbehaviortag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 51,
  "filename": "jsdoc/polymerbehaviortag.js",
  "ignore": false,
  "isPolymerBehavior": true,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 27,
      "index": 51,
      "line": 2,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "MyPolymerBehavior",
  "mutable": true,
  "name": "MyPolymerBehavior",
  "path": Array [
    Object {
      "name": "MyPolymerBehavior",
    },
  ],
  "properties": Array [],
  "raw": "/** @polymerBehavior */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/polymertag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A Polymer class.",
  "end": 57,
  "filename": "jsdoc/polymertag.js",
  "fnName": "Foo",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "isPolymer": true,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 57,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "raw": "/**
 * A Polymer class.
 * @polymer
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/preservetag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 50,
  "filename": "jsdoc/preservetag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 50,
      "line": 2,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "x",
  "mutable": true,
  "name": "x",
  "path": Array [
    Object {
      "name": "x",
    },
  ],
  "raw": "/** @preserve My cool license goes here. */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/privatetag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 93,
  "filename": "jsdoc/privatetag.js",
  "fnName": "Foo",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 93,
      "line": 9,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "raw": "/**
* @constructor
* @private
*/",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
  "visibility": "private",
}
`;

exports[`./jsdoc/privatetag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 91,
  "filename": "jsdoc/privatetag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 91,
      "line": 8,
    },
    "start": Position {
      "column": 4,
      "index": 55,
      "line": 7,
    },
  },
  "member": "bar",
  "memberOf": "this",
  "name": "bar",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "bar",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 55,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 1,
}
`;

exports[`./jsdoc/privatetag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 145,
  "filename": "jsdoc/privatetag2.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 145,
      "line": 8,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "connectionPorts",
  "mutable": true,
  "name": "connectionPorts",
  "path": Array [
    Object {
      "name": "connectionPorts",
    },
  ],
  "properties": Array [
    Object {
      "kind": "property",
      "member": "'devServer'",
      "memberOf": "connectionPorts",
      "name": "'devServer'",
      "path": Array [
        Object {
          "name": "connectionPorts",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 6464,
    },
    Object {
      "kind": "property",
      "member": "'prodServer'",
      "memberOf": "connectionPorts",
      "name": "'prodServer'",
      "path": Array [
        Object {
          "name": "connectionPorts",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 2232,
    },
    Object {
      "kind": "property",
      "member": "'stagingServer'",
      "memberOf": "connectionPorts",
      "name": "'stagingServer'",
      "path": Array [
        Object {
          "name": "connectionPorts",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
      "value": 4997,
    },
  ],
  "raw": "/**
 * @private {Object.<string, number>}
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
  "visibility": "private",
}
`;

exports[`./jsdoc/projecttag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "An automated documentation generator for JavaScript.",
  "end": 260,
  "filename": "jsdoc/projecttag.js",
  "fnName": "blah",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "license": "Version 2 <http://www.apache.org/licenses/LICENSE-2.0>",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 260,
      "line": 9,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "blah",
  "params": Array [
    Object {
      "member": "url",
      "name": "url",
    },
  ],
  "path": Array [
    Object {
      "name": "blah",
    },
  ],
  "raw": "/**
    An automated documentation generator for JavaScript.
    @project JSDoc
    @version 3.0.0
    @copyright 2011 (c) Michael Mathews <micmath@gmail.com>
    @license Apache Version 2 <http://www.apache.org/licenses/LICENSE-2.0>
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
  "version": "3.0.0",
}
`;

exports[`./jsdoc/propertytag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 370,
  "filename": "jsdoc/propertytag.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 370,
      "line": 15,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "myobject",
  "mutable": true,
  "name": "myobject",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "myobject",
    },
  ],
  "properties": Array [
    Object {
      "description": "The identifier.",
    },
    Object {
      "description": "The default values.",
    },
    Object {
      "description": "The a property of the defaults.",
    },
    Object {
      "description": "The b property of the defaults.",
    },
  ],
  "raw": "/**
 * @namespace
 * @property {String} id=abc123 The identifier.
 * @property {Object} defaults The default values.
 * @property {Number} defaults.a=1 The a property of the defaults.
 * @property {String} defaults.b The b property of the defaults.
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/protectedtag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 18,
  "filename": "jsdoc/protectedtag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 18,
      "index": 18,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:uid",
  },
  "path": Array [],
  "raw": "/** @module uid */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/protectedtag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 57,
  "filename": "jsdoc/protectedtag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 19,
      "index": 57,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 20,
      "line": 3,
    },
  },
  "member": "uidCounter",
  "mutable": true,
  "name": "uidCounter",
  "path": Array [
    Object {
      "name": "uidCounter",
    },
  ],
  "raw": "/** @protected */",
  "start": 20,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 1,
  "visibility": "protected",
}
`;

exports[`./jsdoc/protectedtag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 135,
  "filename": "jsdoc/protectedtag.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 135,
      "line": 10,
    },
    "start": Position {
      "column": 0,
      "index": 59,
      "line": 6,
    },
  },
  "member": "uidObjects",
  "mutable": true,
  "name": "uidObjects",
  "path": Array [
    Object {
      "name": "uidObjects",
    },
  ],
  "properties": Array [
    Object {
      "description": "Root object.",
      "ignore": false,
      "path": Array [
        Object {
          "name": "uidObjects",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** @protected */",
  "start": 59,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
  "visibility": "protected",
}
`;

exports[`./jsdoc/protectedtag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Root object.",
  "end": 132,
  "filename": "jsdoc/protectedtag.js",
  "ignore": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 12,
      "index": 132,
      "line": 9,
    },
    "start": Position {
      "column": 4,
      "index": 100,
      "line": 8,
    },
  },
  "member": "root",
  "memberOf": "uidObjects",
  "mutable": true,
  "name": "root",
  "path": Array [
    Object {
      "name": "uidObjects",
    },
  ],
  "properties": Array [],
  "raw": "/** Root object. */",
  "start": 100,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/protectedtag.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Obtain a unique ID.",
  "end": 228,
  "export": "getUid",
  "filename": "jsdoc/protectedtag.js",
  "fnName": "getUid",
  "ignore": false,
  "isAsync": false,
  "isExport": true,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 228,
      "line": 15,
    },
    "start": Position {
      "column": 0,
      "index": 137,
      "line": 12,
    },
  },
  "member": "getUid",
  "memberOf": "exports",
  "name": "getUid",
  "params": Array [],
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "getUid",
    },
  ],
  "raw": "/** Obtain a unique ID. */",
  "start": 137,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/protectedtag.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Associate an object with a unique ID.",
  "end": 367,
  "export": "setObjectForUid",
  "filename": "jsdoc/protectedtag.js",
  "fnName": "setObjectForUid",
  "ignore": false,
  "isAsync": false,
  "isExport": true,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 367,
      "line": 20,
    },
    "start": Position {
      "column": 0,
      "index": 230,
      "line": 17,
    },
  },
  "member": "setObjectForUid",
  "memberOf": "exports",
  "name": "setObjectForUid",
  "params": Array [
    Object {
      "member": "obj",
      "name": "obj",
    },
    Object {
      "member": "uid",
      "name": "uid",
    },
  ],
  "path": Array [
    Object {
      "name": "exports",
    },
    Object {
      "name": "setObjectForUid",
    },
  ],
  "raw": "/** Associate an object with a unique ID. */",
  "start": 230,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/protectedtag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 46,
  "filename": "jsdoc/protectedtag2.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 19,
      "index": 46,
      "line": 2,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "uidCounter",
  "mutable": true,
  "name": "uidCounter",
  "path": Array [
    Object {
      "name": "uidCounter",
    },
  ],
  "raw": "/** @protected {number} */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 1,
  "visibility": "protected",
}
`;

exports[`./jsdoc/protectedtag2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Unique ID generator.",
  "end": 122,
  "filename": "jsdoc/protectedtag2.js",
  "fnName": "UidGenerator",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 26,
      "index": 122,
      "line": 8,
    },
    "start": Position {
      "column": 0,
      "index": 48,
      "line": 4,
    },
  },
  "name": "UidGenerator",
  "params": Array [],
  "path": Array [
    Object {
      "name": "UidGenerator",
    },
  ],
  "raw": "/**
 * Unique ID generator.
 * @constructor
 */",
  "start": 48,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/protectedtag2.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Generate a unique ID.",
  "end": 236,
  "filename": "jsdoc/protectedtag2.js",
  "fnName": "generate",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 236,
      "line": 13,
    },
    "start": Position {
      "column": 0,
      "index": 124,
      "line": 10,
    },
  },
  "member": "generate",
  "memberOf": "UidGenerator.prototype",
  "name": "generate",
  "params": Array [],
  "path": Array [
    Object {
      "name": "UidGenerator",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "generate",
    },
  ],
  "raw": "/** Generate a unique ID. */",
  "scope": "instance",
  "start": 124,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/publictag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Public class.",
  "end": 66,
  "filename": "jsdoc/publictag.js",
  "fnName": "Foo",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 66,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "raw": "/**
 * Public class.
 *
 * @class
 * @public
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
  "visibility": "public",
}
`;

exports[`./jsdoc/publictag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Public variable.",
  "end": 67,
  "filename": "jsdoc/publictag2.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 16,
      "index": 67,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "bar",
  "mutable": true,
  "name": "bar",
  "path": Array [
    Object {
      "name": "bar",
    },
  ],
  "raw": "/**
 * Public variable.
 *
 * @public {string}
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "baz",
  "visibility": "public",
}
`;

exports[`./jsdoc/quotename.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 32,
  "filename": "jsdoc/quotename.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 14,
      "index": 32,
      "line": 2,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "chat",
  "mutable": true,
  "name": "chat",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "chat",
    },
  ],
  "properties": Array [],
  "raw": "/** @namespace */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/quotename.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 79,
  "filename": "jsdoc/quotename.js",
  "ignore": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 22,
      "index": 79,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 34,
      "line": 4,
    },
  },
  "member": "#channel",
  "memberOf": "chat",
  "name": "#channel",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "chat",
    },
    Object {
      "name": "#channel",
    },
  ],
  "properties": Array [],
  "raw": "/**
    @namespace
 */",
  "start": 34,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/quotename.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 168,
  "filename": "jsdoc/quotename.js",
  "ignore": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 29,
      "index": 168,
      "line": 14,
    },
    "start": Position {
      "column": 0,
      "index": 81,
      "line": 9,
    },
  },
  "member": "open",
  "memberOf": "chat.#channel",
  "name": "open",
  "path": Array [
    Object {
      "name": "chat",
    },
    Object {
      "name": "#channel",
    },
    Object {
      "name": "open",
    },
  ],
  "raw": "/**
    @member
    @type {boolean}
    @defaultvalue
 */",
  "start": 81,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "boolean",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "boolean",
      },
    ],
    "string": "boolean",
  },
  "value": true,
}
`;

exports[`./jsdoc/quotename.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 223,
  "filename": "jsdoc/quotename.js",
  "ignore": false,
  "kind": "event",
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 223,
      "line": 18,
    },
    "start": Position {
      "column": 0,
      "index": 170,
      "line": 16,
    },
  },
  "memberOf": "chat.\\".channel\\"",
  "name": "\\"op:announce-motd\\"",
  "raw": "/**
    @event chat.\\"#channel\\".\\"op:announce-motd\\"
 */",
  "start": 170,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/quotename2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 158,
  "filename": "jsdoc/quotename2.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 158,
      "line": 10,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "contacts",
  "mutable": true,
  "name": "contacts",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "contacts",
    },
  ],
  "properties": Array [
    Object {
      "description": "",
      "ignore": false,
      "namespace": Object {},
      "path": Array [
        Object {
          "name": "contacts",
        },
      ],
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @namespace */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@namespace",
                "type": "",
              },
            },
          ],
          "tag": "namespace",
          "type": "",
        },
      ],
    },
  ],
  "raw": "/** @namespace */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/quotename2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 156,
  "filename": "jsdoc/quotename2.js",
  "ignore": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 156,
      "line": 9,
    },
    "start": Position {
      "column": 4,
      "index": 40,
      "line": 4,
    },
  },
  "member": "'say-\\"hello\\"@example.com'",
  "memberOf": "contacts",
  "mutable": true,
  "name": "'say-\\"hello\\"@example.com'",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "contacts",
    },
  ],
  "properties": Array [
    Object {
      "description": "document me",
      "ignore": false,
      "path": Array [
        Object {
          "name": "contacts",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** @namespace */",
  "start": 40,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/quotename2.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 150,
  "filename": "jsdoc/quotename2.js",
  "ignore": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 31,
      "index": 150,
      "line": 8,
    },
    "start": Position {
      "column": 8,
      "index": 100,
      "line": 7,
    },
  },
  "member": "\\"username\\"",
  "memberOf": "'say-\\"hello\\"@example.com'",
  "mutable": true,
  "name": "\\"username\\"",
  "path": Array [
    Object {
      "name": "contacts",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "document me",
        "ignore": false,
        "tags": Array [],
      },
      "code": "\\"username\\": 'Sue Smart'",
      "ctx": Object {
        "kind": "property",
        "member": "\\"username\\"",
        "memberOf": undefined,
        "name": "\\"username\\"",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
        "value": "Sue Smart",
      },
      "description": "document me",
      "end": 150,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 31,
          "index": 150,
          "line": 8,
        },
        "start": Position {
          "column": 8,
          "index": 100,
          "line": 7,
        },
      },
      "member": "\\"username\\"",
      "memberOf": undefined,
      "name": "\\"username\\"",
      "path": Array [],
      "raw": "/** document me */",
      "start": 100,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
      "value": "Sue Smart",
    },
  ],
  "raw": "/** document me */",
  "start": 100,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "Sue Smart",
}
`;

exports[`./jsdoc/readonlytag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 90,
  "filename": "jsdoc/readonlytag.js",
  "fnName": "Collection",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 90,
      "line": 8,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Collection",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Collection",
    },
  ],
  "raw": "/**
* @constructor
*/",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/readonlytag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 88,
  "filename": "jsdoc/readonlytag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "isReadOnly": true,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 88,
      "line": 7,
    },
    "start": Position {
      "column": 4,
      "index": 51,
      "line": 6,
    },
  },
  "member": "length",
  "memberOf": "this",
  "name": "length",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "length",
    },
  ],
  "raw": "/** @readonly */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 51,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 0,
}
`;

exports[`./jsdoc/requirestag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 57,
  "filename": "jsdoc/requirestag.js",
  "fnName": "foo",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 57,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "foo",
    },
  ],
  "raw": "/**
 * @requires module:foo/helper
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/requirestag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 145,
  "filename": "jsdoc/requirestag.js",
  "fnName": "bar",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 145,
      "line": 12,
    },
    "start": Position {
      "column": 0,
      "index": 59,
      "line": 7,
    },
  },
  "name": "bar",
  "params": Array [],
  "path": Array [
    Object {
      "name": "bar",
    },
  ],
  "raw": "/**
 * @requires foo
 * @requires Pez#blat this text is ignored
 */",
  "start": 59,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/requirestag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 286,
  "filename": "jsdoc/requirestag.js",
  "fnName": "baz",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 286,
      "line": 20,
    },
    "start": Position {
      "column": 0,
      "index": 147,
      "line": 14,
    },
  },
  "name": "baz",
  "params": Array [],
  "path": Array [
    Object {
      "name": "baz",
    },
  ],
  "raw": "/**
 * @requires {@link module:zest}
 * @requires {@linkplain module:zing}
 * @requires {@linkstupid module:pizzazz}
 */",
  "start": 147,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/restparams.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Set the list of users who are admins.",
  "end": 164,
  "filename": "jsdoc/restparams.js",
  "fnName": "setAdmins",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 31,
      "index": 164,
      "line": 8,
    },
    "start": Position {
      "column": 0,
      "index": 15,
      "line": 3,
    },
  },
  "name": "setAdmins",
  "params": Array [
    Object {
      "description": "- The users who will receive admin rights.",
      "name": "users",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "User",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "User",
          },
        ],
        "string": "User",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "setAdmins",
    },
  ],
  "raw": "/**
 * Set the list of users who are admins.
 *
 * @param {User} users - The users who will receive admin rights.
 */",
  "start": 15,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/restparams.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Set the list of users who can access a widget.",
  "end": 393,
  "filename": "jsdoc/restparams.js",
  "fnName": "setWidgetAccess",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 45,
      "index": 393,
      "line": 16,
    },
    "start": Position {
      "column": 0,
      "index": 166,
      "line": 10,
    },
  },
  "name": "setWidgetAccess",
  "params": Array [
    Object {
      "description": "- The widget.",
      "name": "widget",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Widget",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Widget",
          },
        ],
        "string": "Widget",
      },
    },
    Object {
      "description": "- The users who will receive rights to access the widget.",
      "name": "users",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "User",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "User",
          },
        ],
        "string": "User",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "setWidgetAccess",
    },
  ],
  "raw": "/**
 * Set the list of users who can access a widget.
 *
 * @param {Widget} widget - The widget.
 * @param {User} users - The users who will receive rights to access the widget.
 */",
  "start": 166,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/restparams.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Set the list of users who are managers.",
  "end": 542,
  "filename": "jsdoc/restparams.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 40,
      "index": 542,
      "line": 23,
    },
    "start": Position {
      "column": 0,
      "index": 395,
      "line": 18,
    },
  },
  "member": "setManagers",
  "mutable": true,
  "name": "setManagers",
  "params": Array [
    Object {
      "description": "- The users who are managers.",
      "name": "users",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "User",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "User",
          },
        ],
        "string": "User",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "setManagers",
    },
  ],
  "raw": "/**
 * Set the list of users who are managers.
 *
 * @param {User} users - The users who are managers.
 */",
  "start": 395,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/restparams2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Class representing a widget.",
  "end": 226,
  "filename": "jsdoc/restparams2.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 226,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 15,
      "line": 3,
    },
  },
  "name": "Widget",
  "path": Array [
    Object {
      "name": "Widget",
    },
  ],
  "properties": Array [
    Object {
      "description": "Add users who can access the widget.",
      "filename": "jsdoc/restparams2.js",
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "member": "addUsers",
      "memberOf": "Widget.prototype",
      "name": "addUsers",
      "params": Array [
        Object {
          "description": "- The users who can access the widget.",
          "name": "users",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "name": "User",
                "type": "NAME",
              },
            ],
            "simple": Array [
              Object {
                "name": "User",
              },
            ],
            "string": "User",
          },
        },
      ],
      "scope": "instance",
      "tags": Array [
        Object {
          "description": "- The users who can access the widget.",
          "name": "users",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "     * @param {User} users - The users who can access the widget.",
              "tokens": Object {
                "delimiter": "*",
                "description": "- The users who can access the widget.",
                "end": "",
                "lineEnd": "",
                "name": "users",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@param",
                "type": "{User}",
              },
            },
            Object {
              "number": 4,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "User",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Widget",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Widget",
          },
        ],
        "string": "Widget",
      },
    },
  ],
  "raw": "/** Class representing a widget. */",
  "start": 15,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Widget",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Widget",
      },
    ],
    "string": "Widget",
  },
}
`;

exports[`./jsdoc/restparams2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Add users who can access the widget.",
  "end": 224,
  "filename": "jsdoc/restparams2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 25,
      "index": 224,
      "line": 10,
    },
    "start": Position {
      "column": 4,
      "index": 70,
      "line": 5,
    },
  },
  "member": "addUsers",
  "memberOf": "Widget.prototype",
  "name": "addUsers",
  "params": Array [
    Object {
      "description": "- The users who can access the widget.",
      "name": "users",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "User",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "User",
          },
        ],
        "string": "User",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Widget",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "addUsers",
    },
  ],
  "raw": "/**
     * Add users who can access the widget.
     *
     * @param {User} users - The users who can access the widget.
     */",
  "scope": "instance",
  "start": 70,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Widget",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Widget",
      },
    ],
    "string": "Widget",
  },
}
`;

exports[`./jsdoc/returnstag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 105,
  "filename": "jsdoc/returnstag.js",
  "fnName": "find",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 105,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "find",
  "params": Array [
    Object {
      "member": "targetName",
      "name": "targetName",
    },
  ],
  "path": Array [
    Object {
      "name": "find",
    },
  ],
  "raw": "/**
 * @returns {string|Array<string>}  The names of the found item(s).
 */",
  "returns": Object {
    "description": "names of the found item(s).",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "string",
          "type": "NAME",
        },
        Object {
          "meta": Object {
            "syntax": "ANGLE_BRACKET",
          },
          "objects": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "subject": Object {
            "name": "Array",
            "type": "NAME",
          },
          "type": "GENERIC",
        },
      ],
      "simple": Array [
        Object {
          "name": "string",
        },
        Object {
          "generic": Object {
            "name": "Array",
          },
          "name": "string",
        },
      ],
      "string": "string | Array<string>",
    },
  },
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/returnstag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 181,
  "filename": "jsdoc/returnstag.js",
  "fnName": "getName",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 181,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 107,
      "line": 7,
    },
  },
  "name": "getName",
  "params": Array [],
  "path": Array [
    Object {
      "name": "getName",
    },
  ],
  "raw": "/**
 * @returns {!string} The name, if defined.
 */",
  "returns": Object {
    "description": "name, if defined.",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "meta": Object {
            "syntax": "PREFIX_BANG",
          },
          "type": "NOT_NULLABLE",
          "value": Object {
            "name": "string",
            "type": "NAME",
          },
        },
      ],
      "simple": Array [
        Object {
          "name": "string",
          "nullable": false,
        },
      ],
      "string": "!string",
    },
  },
  "start": 107,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/returnstag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 245,
  "filename": "jsdoc/returnstag.js",
  "fnName": "bind",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 245,
      "line": 17,
    },
    "start": Position {
      "column": 0,
      "index": 183,
      "line": 13,
    },
  },
  "name": "bind",
  "params": Array [
    Object {
      "member": "callback",
      "name": "callback",
    },
  ],
  "path": Array [
    Object {
      "name": "bind",
    },
  ],
  "raw": "/**
 * @return The binding id.
 */",
  "returns": Object {
    "description": "binding id.",
  },
  "start": 183,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/returnstag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 332,
  "filename": "jsdoc/returnstag.js",
  "fnName": "convert",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 332,
      "line": 23,
    },
    "start": Position {
      "column": 0,
      "index": 247,
      "line": 19,
    },
  },
  "name": "convert",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "convert",
    },
  ],
  "raw": "/**
 * @return An object to be passed to {@link find}.
 */",
  "returns": Object {
    "description": "object to be passed to {@link find}.",
  },
  "start": 247,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/scopetags.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "(scope tags for global objects do not override globalness hence need a container class)",
  "end": 115,
  "filename": "jsdoc/scopetags.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 23,
      "index": 115,
      "line": 2,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:scopetags",
  },
  "path": Array [],
  "raw": "/** (scope tags for global objects do not override globalness hence need a container class)
 * @module scopetags */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/scopetags.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 142,
  "filename": "jsdoc/scopetags.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 12,
      "index": 142,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 116,
      "line": 3,
    },
  },
  "member": "myInner",
  "mutable": true,
  "name": "myInner",
  "path": Array [
    Object {
      "name": "myInner",
    },
  ],
  "raw": "/** @inner */",
  "scope": "inner",
  "start": 116,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/scopetags.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 176,
  "filename": "jsdoc/scopetags.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 15,
      "index": 176,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 144,
      "line": 6,
    },
  },
  "member": "myInstance",
  "mutable": true,
  "name": "myInstance",
  "path": Array [
    Object {
      "name": "myInstance",
    },
  ],
  "raw": "/** @instance */",
  "scope": "instance",
  "start": 144,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/scopetags.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 206,
  "filename": "jsdoc/scopetags.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 13,
      "index": 206,
      "line": 10,
    },
    "start": Position {
      "column": 0,
      "index": 178,
      "line": 9,
    },
  },
  "member": "myStatic",
  "mutable": true,
  "name": "myStatic",
  "path": Array [
    Object {
      "name": "myStatic",
    },
  ],
  "raw": "/** @static */",
  "scope": "static",
  "start": 178,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/seetag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 45,
  "filename": "jsdoc/seetag.js",
  "fnName": "foo",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 45,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "foo",
    },
  ],
  "raw": "/**
*  @see {@link bar}
*/",
  "see": "",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/seetag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 107,
  "filename": "jsdoc/seetag.js",
  "fnName": "bar",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 107,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 47,
      "line": 7,
    },
  },
  "name": "bar",
  "params": Array [],
  "path": Array [
    Object {
      "name": "bar",
    },
  ],
  "raw": "/**
*  @see http://example.com/someref
*/",
  "see": "http://example.com/someref",
  "start": 47,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/sincetag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 44,
  "filename": "jsdoc/sincetag.js",
  "fnName": "foo",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 44,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "foo",
  "params": Array [
    Object {
      "member": "x",
      "name": "x",
    },
  ],
  "path": Array [
    Object {
      "name": "foo",
    },
  ],
  "raw": "/**
    @since 1.2.3
*/",
  "since": "1.2.3",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/specialchars.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 107,
  "filename": "jsdoc/specialchars.js",
  "fnName": "Socket",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 107,
      "line": 9,
    },
    "start": Position {
      "column": 0,
      "index": 15,
      "line": 3,
    },
  },
  "name": "Socket",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Socket",
    },
  ],
  "raw": "/**
 * @class
 */",
  "start": 15,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/specialchars.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Port number.",
  "end": 105,
  "filename": "jsdoc/specialchars.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 28,
      "index": 105,
      "line": 8,
    },
    "start": Position {
      "column": 4,
      "index": 57,
      "line": 7,
    },
  },
  "member": "port#number",
  "memberOf": "this",
  "name": "port#number",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "port#number",
    },
  ],
  "raw": "/** Port number. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 57,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 0,
}
`;

exports[`./jsdoc/specialchars.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Open a connection.",
  "end": 193,
  "filename": "jsdoc/specialchars.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 58,
      "index": 193,
      "line": 12,
    },
    "start": Position {
      "column": 0,
      "index": 109,
      "line": 11,
    },
  },
  "member": "open~a.connection#now",
  "memberOf": "Socket.prototype",
  "name": "open~a.connection#now",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Socket",
    },
    Object {
      "name": "prototype",
    },
    Object {
      "name": "open~a.connection#now",
    },
  ],
  "raw": "/** Open a connection. */",
  "scope": "instance",
  "start": 109,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/specialnames.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 91,
  "filename": "jsdoc/specialnames.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 91,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "constructor",
  "mutable": true,
  "name": "constructor",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "constructor",
    },
  ],
  "properties": Array [
    Object {
      "description": "document me",
      "ignore": false,
      "path": Array [
        Object {
          "name": "constructor",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** @namespace */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/specialnames.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 88,
  "filename": "jsdoc/specialnames.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 27,
      "index": 88,
      "line": 4,
    },
    "start": Position {
      "column": 4,
      "index": 42,
      "line": 3,
    },
  },
  "member": "toString",
  "memberOf": "constructor",
  "mutable": true,
  "name": "toString",
  "params": Array [],
  "path": Array [
    Object {
      "name": "constructor",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "document me",
        "ignore": false,
        "tags": Array [],
      },
      "code": "toString: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "toString",
        "memberOf": undefined,
        "name": "toString",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "document me",
      "end": 88,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 27,
          "index": 88,
          "line": 4,
        },
        "start": Position {
          "column": 4,
          "index": 42,
          "line": 3,
        },
      },
      "member": "toString",
      "memberOf": undefined,
      "name": "toString",
      "params": Array [],
      "path": Array [],
      "raw": "/** document me */",
      "start": 42,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** document me */",
  "start": 42,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/specialnames.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 181,
  "filename": "jsdoc/specialnames.js",
  "ignore": false,
  "kind": "object",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 181,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 93,
      "line": 7,
    },
  },
  "member": "prototype",
  "mutable": true,
  "name": "prototype",
  "namespace": Object {},
  "path": Array [
    Object {
      "name": "prototype",
    },
  ],
  "properties": Array [
    Object {
      "description": "document me",
      "ignore": false,
      "path": Array [
        Object {
          "name": "prototype",
        },
      ],
      "tags": Array [],
    },
  ],
  "raw": "/** @namespace */",
  "start": 93,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/specialnames.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 178,
  "filename": "jsdoc/specialnames.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 26,
      "index": 178,
      "line": 10,
    },
    "start": Position {
      "column": 4,
      "index": 133,
      "line": 9,
    },
  },
  "member": "valueOf",
  "memberOf": "prototype",
  "mutable": true,
  "name": "valueOf",
  "params": Array [],
  "path": Array [
    Object {
      "name": "prototype",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "document me",
        "ignore": false,
        "tags": Array [],
      },
      "code": "valueOf: function () {}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "valueOf",
        "memberOf": undefined,
        "name": "valueOf",
        "params": Array [],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "document me",
      "end": 178,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 26,
          "index": 178,
          "line": 10,
        },
        "start": Position {
          "column": 4,
          "index": 133,
          "line": 9,
        },
      },
      "member": "valueOf",
      "memberOf": undefined,
      "name": "valueOf",
      "params": Array [],
      "path": Array [],
      "raw": "/** document me */",
      "start": 133,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** document me */",
  "start": 133,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/specialnames.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 255,
  "filename": "jsdoc/specialnames.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 53,
      "index": 255,
      "line": 14,
    },
    "start": Position {
      "column": 0,
      "index": 183,
      "line": 13,
    },
  },
  "member": "hasOwnProperty",
  "mutable": true,
  "name": "hasOwnProperty",
  "path": Array [
    Object {
      "name": "hasOwnProperty",
    },
    Object {
      "name": "hasOwnProperty",
    },
  ],
  "raw": "/** document me */",
  "start": 183,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/starbangstar.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "author": "Lea",
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Script that does something awesome",
  "end": 149,
  "filename": "jsdoc/starbangstar.js",
  "ignore": true,
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 149,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:myscript/core",
  },
  "raw": "/*!*
* Script that does something awesome
*
* @copyright (c) 2011 Rotorz Limited. All rights reserved.
* @author Lea Hayes
* @module myscript/core
*/",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/starbangstar.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "This should be ignored by JSDoc",
  "end": 236,
  "filename": "jsdoc/starbangstar.js",
  "ignore": true,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 236,
      "line": 12,
    },
    "start": Position {
      "column": 0,
      "index": 151,
      "line": 9,
    },
  },
  "raw": "/*!*********************************
 * This should be ignored by JSDoc
 * @var x
 */",
  "start": 151,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/structtag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Foo class.",
  "end": 69,
  "filename": "jsdoc/structtag.js",
  "fnName": "Foo",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isDict": false,
  "isGenerator": false,
  "isStruct": true,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 69,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "raw": "/**
 * Foo class.
 *
 * @constructor
 * @struct
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/summarytag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 68,
  "filename": "jsdoc/summarytag.js",
  "fnName": "Sam",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 68,
      "line": 3,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Sam",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Sam",
    },
  ],
  "raw": "/** @summary I do not like green eggs and ham! */",
  "start": 0,
  "summary": "do not like green eggs and ham! ",
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/suppresstag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Foo class.",
  "end": 84,
  "filename": "jsdoc/suppresstag.js",
  "fnName": "Foo",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 84,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "raw": "/**
 * Foo class.
 *
 * @constructor
 * @suppress {deprecated}
 */",
  "start": 0,
  "suppress": JSDocType {
    "parsed": Array [
      Object {
        "name": "deprecated",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "deprecated",
      },
    ],
    "string": "deprecated",
  },
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/templatetag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 79,
  "filename": "jsdoc/templatetag.js",
  "fnName": "Container",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 24,
      "index": 79,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Container",
  "params": Array [
    Object {
      "name": "t",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "T",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "T",
          },
        ],
        "string": "T",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Container",
    },
  ],
  "raw": "/**
 * @param {T} t
 * @constructor
 * @template T
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "template": Object {
    "description": "",
    "type": Array [],
  },
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/this.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 218,
  "filename": "jsdoc/this.js",
  "fnName": "Singer",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 218,
      "line": 10,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Singer",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Singer",
    },
  ],
  "raw": "/**
    @constructor
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/this.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 167,
  "filename": "jsdoc/this.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 30,
      "index": 167,
      "line": 8,
    },
    "start": Position {
      "column": 8,
      "index": 118,
      "line": 7,
    },
  },
  "member": "isSinging",
  "memberOf": "this",
  "name": "isSinging",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "isSinging",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 118,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "boolean",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "boolean",
      },
    ],
    "string": "boolean",
  },
  "value": true,
}
`;

exports[`./jsdoc/this-and-objectlit.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 195,
  "filename": "jsdoc/this-and-objectlit.js",
  "fnName": "Page",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 195,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Page",
  "params": Array [
    Object {
      "member": "title",
      "name": "title",
    },
  ],
  "path": Array [
    Object {
      "name": "Page",
    },
  ],
  "raw": "/** @constructor */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/this-and-objectlit.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 154,
  "filename": "jsdoc/this-and-objectlit.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 23,
      "index": 154,
      "line": 7,
    },
    "start": Position {
      "column": 12,
      "index": 112,
      "line": 6,
    },
  },
  "member": "heading",
  "memberOf": "body",
  "name": "heading",
  "params": Array [
    Object {
      "member": "title",
      "name": "title",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "parts",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "document me",
        "ignore": false,
        "tags": Array [],
      },
      "code": "heading: ''",
      "ctx": Object {
        "kind": "property",
        "member": "heading",
        "memberOf": undefined,
        "name": "heading",
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "string",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "string",
            },
          ],
          "string": "string",
        },
        "value": "",
      },
      "description": "document me",
      "end": 154,
      "ignore": false,
      "kind": "property",
      "loc": Object {
        "end": Position {
          "column": 23,
          "index": 154,
          "line": 7,
        },
        "start": Position {
          "column": 12,
          "index": 112,
          "line": 6,
        },
      },
      "member": "heading",
      "memberOf": undefined,
      "name": "heading",
      "path": Array [],
      "raw": "/** document me */",
      "start": 112,
      "tags": Array [],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
      "value": "",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 112,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
  "value": "",
}
`;

exports[`./jsdoc/this2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 386,
  "filename": "jsdoc/this2.js",
  "fnName": "TemplateBuilder",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 386,
      "line": 15,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "TemplateBuilder",
  "params": Array [
    Object {
      "member": "templateType",
      "name": "templateType",
    },
  ],
  "path": Array [
    Object {
      "name": "TemplateBuilder",
    },
  ],
  "raw": "/** @constructor */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/this2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 383,
  "filename": "jsdoc/this2.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 383,
      "line": 13,
    },
    "start": Position {
      "column": 4,
      "index": 130,
      "line": 6,
    },
  },
  "member": "Template",
  "memberOf": "this",
  "name": "Template",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "Template",
    },
  ],
  "raw": "/** @constructor */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 130,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/this2.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 376,
  "filename": "jsdoc/this2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 9,
      "index": 376,
      "line": 12,
    },
    "start": Position {
      "column": 8,
      "index": 244,
      "line": 8,
    },
  },
  "member": "render",
  "memberOf": "this",
  "name": "render",
  "params": Array [
    Object {
      "member": "data",
      "name": "data",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "render",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 244,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/this2.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 366,
  "filename": "jsdoc/this2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 33,
      "index": 366,
      "line": 11,
    },
    "start": Position {
      "column": 12,
      "index": 314,
      "line": 10,
    },
  },
  "member": "rendered",
  "memberOf": "this",
  "name": "rendered",
  "params": Array [
    Object {
      "member": "data",
      "name": "data",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "rendered",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 314,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "boolean",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "boolean",
      },
    ],
    "string": "boolean",
  },
  "value": true,
}
`;

exports[`./jsdoc/this3.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 77,
  "filename": "jsdoc/this3.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 25,
      "index": 77,
      "line": 3,
    },
    "start": Position {
      "column": 4,
      "index": 33,
      "line": 2,
    },
  },
  "member": "newP",
  "memberOf": "this",
  "name": "newP",
  "params": Array [
    Object {
      "member": "newP",
      "name": "newP",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "position",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 33,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/this4.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 51,
  "filename": "jsdoc/this4.js",
  "fnName": "Template",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 22,
      "index": 51,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 15,
      "line": 3,
    },
  },
  "name": "Template",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Template",
    },
  ],
  "raw": "/** @class */",
  "start": 15,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/this4.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Render content.",
  "end": 152,
  "filename": "jsdoc/this4.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 36,
      "index": 152,
      "line": 8,
    },
    "start": Position {
      "column": 4,
      "index": 93,
      "line": 7,
    },
  },
  "member": "render",
  "memberOf": "this",
  "name": "render",
  "params": Array [
    Object {
      "member": "data",
      "name": "data",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "render",
    },
  ],
  "raw": "/** Render content. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 93,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/this5.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 38,
  "filename": "jsdoc/this5.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 23,
      "index": 38,
      "line": 3,
    },
    "start": Position {
      "column": 0,
      "index": 15,
      "line": 3,
    },
  },
  "module": Object {
    "name": "module:template",
  },
  "path": Array [],
  "raw": "/** @module template */",
  "start": 15,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/this5.js snapshots: Item 2 1`] = `
Object {
  "alias": "module:template.Template",
  "aliasOriginal": "Template",
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 186,
  "export": "Template",
  "filename": "jsdoc/this5.js",
  "ignore": false,
  "isAsync": false,
  "isExport": true,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 186,
      "line": 12,
    },
    "start": Position {
      "column": 0,
      "index": 40,
      "line": 5,
    },
  },
  "member": "Template",
  "memberOf": "module:template",
  "mutable": true,
  "name": "Template",
  "params": Array [],
  "path": Array [
    Object {
      "name": "module:template",
    },
    Object {
      "alias": "module:template.Template",
      "name": "Template",
      "original": "exports.Template",
    },
  ],
  "raw": "/**
 * @class
 * @alias module:template.Template
 */",
  "start": 40,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/this5.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "View file.",
  "end": 183,
  "filename": "jsdoc/this5.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 21,
      "index": 183,
      "line": 11,
    },
    "start": Position {
      "column": 4,
      "index": 144,
      "line": 10,
    },
  },
  "member": "view",
  "memberOf": "this",
  "mutable": true,
  "name": "view",
  "params": Array [],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "view",
    },
  ],
  "raw": "/** View file. */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 144,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/this6.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 37,
  "filename": "jsdoc/this6.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 22,
      "index": 37,
      "line": 3,
    },
    "start": Position {
      "column": 0,
      "index": 15,
      "line": 3,
    },
  },
  "module": Object {
    "name": "module:example",
  },
  "path": Array [],
  "raw": "/** @module example */",
  "start": 15,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/this6.js snapshots: Item 2 1`] = `
Object {
  "alias": "module:example",
  "aliasOriginal": "Foo",
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "An ES6 class.",
  "end": 248,
  "filename": "jsdoc/this6.js",
  "ignore": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 248,
      "line": 19,
    },
    "start": Position {
      "column": 0,
      "index": 39,
      "line": 5,
    },
  },
  "name": "module:example",
  "path": Array [
    Object {
      "alias": "module:example",
      "name": "module:example",
      "original": "Foo",
    },
  ],
  "properties": Array [
    Object {
      "filename": "jsdoc/this6.js",
      "isAsync": false,
      "isConstructor": true,
      "isGenerator": false,
      "kind": "constructor",
      "member": "constructor",
      "memberOf": "Foo.prototype",
      "name": "constructor",
      "params": Array [],
      "scope": "instance",
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Foo",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Foo",
          },
        ],
        "string": "Foo",
      },
    },
  ],
  "raw": "/**
 * An ES6 class.
 *
 * @alias module:example
 */",
  "start": 39,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Foo",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Foo",
      },
    ],
    "string": "Foo",
  },
}
`;

exports[`./jsdoc/this6.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "My property.",
  "end": 204,
  "filename": "jsdoc/this6.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 11,
      "index": 204,
      "line": 16,
    },
    "start": Position {
      "column": 8,
      "index": 132,
      "line": 12,
    },
  },
  "raw": "/**
         * My property.
         *
         * @protected
         */",
  "start": 132,
  "tags": ArrayContaining [],
  "visibility": "protected",
}
`;

exports[`./jsdoc/thistag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 73,
  "filename": "jsdoc/thistag.js",
  "fnName": "Foo",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 73,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Foo",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "raw": "/** @constructor */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/thistag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 163,
  "filename": "jsdoc/thistag.js",
  "fnName": "setName",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 163,
      "line": 10,
    },
    "start": Position {
      "column": 0,
      "index": 75,
      "line": 6,
    },
  },
  "name": "setName",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "setName",
    },
  ],
  "raw": "/** @this Foo */",
  "start": 75,
  "tags": ArrayContaining [],
  "this": Object {
    "description": "",
    "type": Array [],
  },
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/thistag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 161,
  "filename": "jsdoc/thistag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 21,
      "index": 161,
      "line": 9,
    },
    "start": Position {
      "column": 4,
      "index": 121,
      "line": 8,
    },
  },
  "member": "name",
  "memberOf": "this",
  "name": "name",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "name",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 121,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/thistag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 73,
  "filename": "jsdoc/thistag2.js",
  "fnName": "Foo",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 73,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Foo",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "raw": "/** @constructor */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/thistag2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 165,
  "filename": "jsdoc/thistag2.js",
  "fnName": "setName",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 165,
      "line": 10,
    },
    "start": Position {
      "column": 0,
      "index": 75,
      "line": 6,
    },
  },
  "name": "setName",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "setName",
    },
  ],
  "raw": "/** @this {Foo} */",
  "start": 75,
  "tags": ArrayContaining [],
  "this": Object {
    "description": "",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "Foo",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "Foo",
        },
      ],
      "string": "Foo",
    },
  },
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/thistag2.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 163,
  "filename": "jsdoc/thistag2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "property",
  "loc": Object {
    "end": Position {
      "column": 21,
      "index": 163,
      "line": 9,
    },
    "start": Position {
      "column": 4,
      "index": 123,
      "line": 8,
    },
  },
  "member": "name",
  "memberOf": "this",
  "name": "name",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "this",
    },
    Object {
      "name": "name",
    },
  ],
  "raw": "/** document me */",
  "returnPotentials": TypeInferance {
    "potentials": Array [],
  },
  "start": 123,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/thistag2.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 240,
  "filename": "jsdoc/thistag2.js",
  "fnName": "getName",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 240,
      "line": 15,
    },
    "start": Position {
      "column": 0,
      "index": 167,
      "line": 12,
    },
  },
  "name": "getName",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "getName",
    },
  ],
  "raw": "/** @this {(Foo|Bar)} */",
  "start": 167,
  "tags": ArrayContaining [],
  "this": Object {
    "description": "",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "type": "PARENTHESIS",
          "value": Object {
            "left": Object {
              "name": "Foo",
              "type": "NAME",
            },
            "right": Object {
              "name": "Bar",
              "type": "NAME",
            },
            "type": "UNION",
          },
        },
      ],
      "simple": Array [
        Object {
          "name": "Foo",
        },
        Object {
          "name": "Bar",
        },
      ],
      "string": "(Foo | Bar)",
    },
  },
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/todotag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "A function.",
  "end": 79,
  "filename": "jsdoc/todotag.js",
  "fnName": "x",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 79,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "x",
  "params": Array [],
  "path": Array [
    Object {
      "name": "x",
    },
  ],
  "raw": "/** A function.
 * @todo something
 * @todo something else
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "todo": "else",
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/trailingcomment.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 57,
  "filename": "jsdoc/trailingcomment.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 57,
      "line": 5,
    },
    "start": Position {
      "column": 0,
      "index": 37,
      "line": 5,
    },
  },
  "raw": "/** @external foo */",
  "start": 37,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/trailingcomment2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 35,
  "filename": "jsdoc/trailingcomment2.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 35,
      "line": 3,
    },
    "start": Position {
      "column": 0,
      "index": 15,
      "line": 3,
    },
  },
  "raw": "/** @external foo */",
  "start": 15,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/typedeftag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 49,
  "filename": "jsdoc/typedeftag.js",
  "ignore": false,
  "isTypedef": true,
  "loc": Object {
    "end": Position {
      "column": 49,
      "index": 49,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "path": Array [],
  "raw": "/** @typedef {(string|number)} calc.NumberLike */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "type": "PARENTHESIS",
        "value": Object {
          "left": Object {
            "name": "string",
            "type": "NAME",
          },
          "right": Object {
            "name": "number",
            "type": "NAME",
          },
          "type": "UNION",
        },
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
      Object {
        "name": "number",
      },
    ],
    "string": "(string | number)",
  },
  "typedef": "calc.NumberLike",
}
`;

exports[`./jsdoc/typedeftag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 90,
  "filename": "jsdoc/typedeftag.js",
  "ignore": false,
  "isTypedef": true,
  "loc": Object {
    "end": Position {
      "column": 14,
      "index": 90,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 51,
      "line": 3,
    },
  },
  "path": Array [],
  "raw": "/** @typedef {string} */",
  "start": 51,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
}
`;

exports[`./jsdoc/typedeftag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 151,
  "filename": "jsdoc/typedeftag.js",
  "ignore": false,
  "isTypedef": true,
  "loc": Object {
    "end": Position {
      "column": 13,
      "index": 151,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 92,
      "line": 6,
    },
  },
  "path": Array [],
  "raw": "/** @typedef {calc.NumberLike} calc.Result */",
  "start": 92,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "hasEventPrefix": false,
        "name": "NumberLike",
        "owner": Object {
          "name": "calc",
          "type": "NAME",
        },
        "quoteStyle": "none",
        "type": "MEMBER",
      },
    ],
    "simple": Array [
      Object {
        "name": "calc.NumberLike",
      },
    ],
    "string": "calc.NumberLike",
  },
  "typedef": "calc.Result",
}
`;

exports[`./jsdoc/typedeftag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 243,
  "filename": "jsdoc/typedeftag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 243,
      "line": 11,
    },
    "start": Position {
      "column": 0,
      "index": 153,
      "line": 9,
    },
  },
  "member": "readNumber",
  "memberOf": "calc",
  "name": "readNumber",
  "params": Array [
    Object {
      "description": "A number or a string.",
      "name": "x",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "hasEventPrefix": false,
            "name": "NumberLike",
            "owner": Object {
              "name": "calc",
              "type": "NAME",
            },
            "quoteStyle": "none",
            "type": "MEMBER",
          },
        ],
        "simple": Array [
          Object {
            "name": "calc.NumberLike",
          },
        ],
        "string": "calc.NumberLike",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "calc",
    },
    Object {
      "name": "readNumber",
    },
  ],
  "raw": "/** @param {calc.NumberLike} x A number or a string. */",
  "start": 153,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/typedeftag.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 287,
  "filename": "jsdoc/typedeftag.js",
  "ignore": false,
  "isTypedef": true,
  "loc": Object {
    "end": Position {
      "column": 42,
      "index": 287,
      "line": 13,
    },
    "start": Position {
      "column": 0,
      "index": 245,
      "line": 13,
    },
  },
  "raw": "/** @typedef {Object} CalculatorBattery */",
  "start": 245,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
  "typedef": "CalculatorBattery",
}
`;

exports[`./jsdoc/typedeftag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 50,
  "filename": "jsdoc/typedeftag2.js",
  "ignore": false,
  "isTypedef": true,
  "loc": Object {
    "end": Position {
      "column": 16,
      "index": 50,
      "line": 2,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "path": Array [],
  "raw": "/** @typedef {(string|number)} */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "type": "PARENTHESIS",
        "value": Object {
          "left": Object {
            "name": "string",
            "type": "NAME",
          },
          "right": Object {
            "name": "number",
            "type": "NAME",
          },
          "type": "UNION",
        },
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
      Object {
        "name": "number",
      },
    ],
    "string": "(string | number)",
  },
}
`;

exports[`./jsdoc/typekind.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 46,
  "filename": "jsdoc/typekind.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 46,
      "line": 3,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:blog/server",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "ConnectServer",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "ConnectServer",
        },
      ],
      "string": "ConnectServer",
    },
  },
  "path": Array [],
  "raw": "/**
    @module {ConnectServer} blog/server
*/",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/typekind.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "default": true,
  "description": "",
  "end": 307,
  "filename": "jsdoc/typekind.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 307,
      "line": 17,
    },
    "start": Position {
      "column": 0,
      "index": 238,
      "line": 14,
    },
  },
  "raw": "/**
    @member {number} module:blog/server.port
    @default 8080
*/",
  "start": 238,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/typetag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 48,
  "filename": "jsdoc/typetag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 8,
      "index": 48,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "foo",
  "mutable": true,
  "name": "foo",
  "path": Array [
    Object {
      "name": "foo",
    },
  ],
  "raw": "/**
 * @type {string|Array<string>}
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
      Object {
        "meta": Object {
          "syntax": "ANGLE_BRACKET",
        },
        "objects": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "subject": Object {
          "name": "Array",
          "type": "NAME",
        },
        "type": "GENERIC",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
      Object {
        "generic": Object {
          "name": "Array",
        },
        "name": "string",
      },
    ],
    "string": "string | Array<string>",
  },
}
`;

exports[`./jsdoc/typetag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 109,
  "filename": "jsdoc/typetag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 34,
      "index": 109,
      "line": 9,
    },
    "start": Position {
      "column": 0,
      "index": 50,
      "line": 6,
    },
  },
  "member": "bar",
  "mutable": true,
  "name": "bar",
  "path": Array [
    Object {
      "name": "bar",
    },
  ],
  "raw": "/**
 * @type integer
 */",
  "start": 50,
  "tags": ArrayContaining [],
  "type": Array [],
  "typedef": "integer",
}
`;

exports[`./jsdoc/typetag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 166,
  "filename": "jsdoc/typetag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 20,
      "index": 166,
      "line": 14,
    },
    "start": Position {
      "column": 0,
      "index": 111,
      "line": 11,
    },
  },
  "member": "baz",
  "mutable": true,
  "name": "baz",
  "path": Array [
    Object {
      "name": "baz",
    },
  ],
  "raw": "/**
 * @type {!Array.<number>}
 */",
  "start": 111,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "meta": Object {
          "syntax": "PREFIX_BANG",
        },
        "type": "NOT_NULLABLE",
        "value": Object {
          "meta": Object {
            "syntax": "ANGLE_BRACKET_WITH_DOT",
          },
          "objects": Array [
            Object {
              "name": "number",
              "type": "NAME",
            },
          ],
          "subject": Object {
            "name": "Array",
            "type": "NAME",
          },
          "type": "GENERIC",
        },
      },
    ],
    "simple": Array [
      Object {
        "generic": Object {
          "name": "Array",
        },
        "name": "number",
        "nullable": false,
      },
    ],
    "string": "!Array.<number>",
  },
}
`;

exports[`./jsdoc/typetag2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 76,
  "filename": "jsdoc/typetag2.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 19,
      "index": 76,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "stringOrNumber",
  "mutable": true,
  "name": "stringOrNumber",
  "path": Array [
    Object {
      "name": "stringOrNumber",
    },
  ],
  "raw": "/**
 * @type {(string|number)} A string or a number.
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "type": "PARENTHESIS",
        "value": Object {
          "left": Object {
            "name": "string",
            "type": "NAME",
          },
          "right": Object {
            "name": "number",
            "type": "NAME",
          },
          "type": "UNION",
        },
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
      Object {
        "name": "number",
      },
    ],
    "string": "(string | number)",
  },
  "typeAnnotation": "string or a number.",
  "typedef": "A",
}
`;

exports[`./jsdoc/typetaginline.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Inline type info only.",
  "end": 83,
  "filename": "jsdoc/typetaginline.js",
  "fnName": "dispense",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 49,
      "index": 83,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "dispense",
  "params": Array [
    Object {
      "description": "",
      "ignore": false,
      "tags": Array [
        Object {
          "description": "",
          "name": "",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @type {string} */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "",
                "tag": "@type",
                "type": "{string}",
              },
            },
          ],
          "tag": "type",
          "type": "string",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "dispense",
    },
  ],
  "raw": "/**
 * Inline type info only.
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/typetaginline.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 79,
  "filename": "jsdoc/typetaginline.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 45,
      "index": 79,
      "line": 4,
    },
    "start": Position {
      "column": 18,
      "index": 52,
      "line": 4,
    },
  },
  "member": "candy",
  "name": "candy",
  "params": Array [],
  "path": Array [],
  "raw": "/** @type {string} */",
  "start": 52,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
}
`;

exports[`./jsdoc/typetaginline.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Inline type info that conflicts with \`@param\` tag.",
  "end": 265,
  "filename": "jsdoc/typetaginline.js",
  "fnName": "Dispenser",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 52,
      "index": 265,
      "line": 12,
    },
    "start": Position {
      "column": 0,
      "index": 85,
      "line": 6,
    },
  },
  "name": "Dispenser",
  "params": Array [
    Object {
      "description": "- The candy's identifier.",
      "name": "candyId",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Dispenser",
    },
  ],
  "raw": "/**
 * Inline type info that conflicts with \`@param\` tag.
 *
 * @class
 * @param {number} candyId - The candy's identifier.
 */",
  "start": 85,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/typetaginline.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 261,
  "filename": "jsdoc/typetaginline.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 48,
      "index": 261,
      "line": 12,
    },
    "start": Position {
      "column": 19,
      "index": 232,
      "line": 12,
    },
  },
  "member": "candyId",
  "name": "candyId",
  "params": Array [],
  "path": Array [],
  "raw": "/** @type {string} */",
  "start": 232,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
}
`;

exports[`./jsdoc/typetaginline.js snapshots: Item 5 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Inline type info for leading param only.",
  "end": 407,
  "filename": "jsdoc/typetaginline.js",
  "fnName": "restock",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 61,
      "index": 407,
      "line": 19,
    },
    "start": Position {
      "column": 0,
      "index": 267,
      "line": 14,
    },
  },
  "name": "restock",
  "params": Array [
    Object {
      "name": "item",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "restock",
    },
  ],
  "raw": "/**
 * Inline type info for leading param only.
 *
 * @param {string} item
 */",
  "start": 267,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/typetaginline.js snapshots: Item 6 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 397,
  "filename": "jsdoc/typetaginline.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 51,
      "index": 397,
      "line": 19,
    },
    "start": Position {
      "column": 17,
      "index": 363,
      "line": 19,
    },
  },
  "member": "dispenser",
  "name": "dispenser",
  "params": Array [],
  "path": Array [],
  "raw": "/** @type {Dispenser} */",
  "start": 363,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Dispenser",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Dispenser",
      },
    ],
    "string": "Dispenser",
  },
}
`;

exports[`./jsdoc/typetaginline.js snapshots: Item 7 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Inline type info for trailing param only.",
  "end": 556,
  "filename": "jsdoc/typetaginline.js",
  "fnName": "clean",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 59,
      "index": 556,
      "line": 26,
    },
    "start": Position {
      "column": 0,
      "index": 409,
      "line": 21,
    },
  },
  "name": "clean",
  "params": Array [
    Object {
      "name": "dispenser",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Dispenser",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Dispenser",
          },
        ],
        "string": "Dispenser",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "clean",
    },
  ],
  "raw": "/**
 * Inline type info for trailing param only.
 *
 * @param {Dispenser} dispenser
 */",
  "start": 409,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/typetaginline.js snapshots: Item 8 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 552,
  "filename": "jsdoc/typetaginline.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 55,
      "index": 552,
      "line": 26,
    },
    "start": Position {
      "column": 26,
      "index": 523,
      "line": 26,
    },
  },
  "member": "cleaner",
  "name": "cleaner",
  "params": Array [],
  "path": Array [],
  "raw": "/** @type {string} */",
  "start": 523,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "string",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "string",
      },
    ],
    "string": "string",
  },
}
`;

exports[`./jsdoc/typetaginline.js snapshots: Item 9 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Inline type info for inner param only.",
  "end": 763,
  "filename": "jsdoc/typetaginline.js",
  "fnName": "paint",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 70,
      "index": 763,
      "line": 35,
    },
    "start": Position {
      "column": 0,
      "index": 558,
      "line": 28,
    },
  },
  "name": "paint",
  "params": Array [
    Object {
      "name": "dispenser",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Dispenser",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Dispenser",
          },
        ],
        "string": "Dispenser",
      },
    },
    Object {
      "name": "shade",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
    Object {
      "name": "brand",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "paint",
    },
  ],
  "raw": "/**
 * Inline type info for inner param only.
 *
 * @param {Dispenser} dispenser
 * @param {number} shade
 * @param {string} brand
 */",
  "start": 558,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/typetaginline.js snapshots: Item 10 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 745,
  "filename": "jsdoc/typetaginline.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 52,
      "index": 745,
      "line": 35,
    },
    "start": Position {
      "column": 26,
      "index": 719,
      "line": 35,
    },
  },
  "member": "color",
  "name": "color",
  "params": Array [],
  "path": Array [],
  "raw": "/** @type {Color} */",
  "start": 719,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Color",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Color",
      },
    ],
    "string": "Color",
  },
}
`;

exports[`./jsdoc/typetagwithnewline.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 49,
  "filename": "jsdoc/typetagwithnewline.js",
  "fnName": "Matryoshka",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "class",
  "loc": Object {
    "end": Position {
      "column": 24,
      "index": 49,
      "line": 2,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Matryoshka",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Matryoshka",
    },
  ],
  "raw": "/** @class Matryoshka */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/typetagwithnewline.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 141,
  "filename": "jsdoc/typetagwithnewline.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 16,
      "index": 141,
      "line": 8,
    },
    "start": Position {
      "column": 0,
      "index": 51,
      "line": 4,
    },
  },
  "path": Array [],
  "raw": "/**
 * @type {(!Array.<number>|
 *         !Array.<!Array.<number>>)}
 */",
  "start": 51,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "type": "PARENTHESIS",
        "value": Object {
          "left": Object {
            "meta": Object {
              "syntax": "PREFIX_BANG",
            },
            "type": "NOT_NULLABLE",
            "value": Object {
              "meta": Object {
                "syntax": "ANGLE_BRACKET_WITH_DOT",
              },
              "objects": Array [
                Object {
                  "name": "number",
                  "type": "NAME",
                },
              ],
              "subject": Object {
                "name": "Array",
                "type": "NAME",
              },
              "type": "GENERIC",
            },
          },
          "right": Object {
            "meta": Object {
              "syntax": "PREFIX_BANG",
            },
            "type": "NOT_NULLABLE",
            "value": Object {
              "meta": Object {
                "syntax": "ANGLE_BRACKET_WITH_DOT",
              },
              "objects": Array [
                Object {
                  "meta": Object {
                    "syntax": "PREFIX_BANG",
                  },
                  "type": "NOT_NULLABLE",
                  "value": Object {
                    "meta": Object {
                      "syntax": "ANGLE_BRACKET_WITH_DOT",
                    },
                    "objects": Array [
                      Object {
                        "name": "number",
                        "type": "NAME",
                      },
                    ],
                    "subject": Object {
                      "name": "Array",
                      "type": "NAME",
                    },
                    "type": "GENERIC",
                  },
                },
              ],
              "subject": Object {
                "name": "Array",
                "type": "NAME",
              },
              "type": "GENERIC",
            },
          },
          "type": "UNION",
        },
      },
    ],
    "simple": Array [
      Object {
        "generic": Object {
          "name": "Array",
        },
        "name": "number",
        "nullable": false,
      },
      Object {
        "generic": Object {
          "name": "Array",
        },
        "name": "number",
        "nullable": false,
      },
    ],
    "string": "(!Array.<number> | !Array.<!Array.<number>>)",
  },
}
`;

exports[`./jsdoc/typetagwithnewline.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 264,
  "filename": "jsdoc/typetagwithnewline.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 16,
      "index": 264,
      "line": 14,
    },
    "start": Position {
      "column": 0,
      "index": 143,
      "line": 10,
    },
  },
  "path": Array [],
  "raw": "/**
 * @type (!Array.<number>|!Array.<!Array.<number>>|
 *        !Array.<!Array.<!Array.<number>>>)
 */",
  "start": 143,
  "tags": ArrayContaining [],
  "type": Array [],
  "typeAnnotation": "!Array.<!Array.<!Array.<number>>>)",
  "typedef": "(!Array.<number>|!Array.<!Array.<number>>|",
}
`;

exports[`./jsdoc/undocumentedtag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Undocumented doclet.",
  "end": 51,
  "filename": "jsdoc/undocumentedtag.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 6,
      "index": 51,
      "line": 3,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "x",
  "mutable": true,
  "name": "x",
  "path": Array [
    Object {
      "name": "x",
    },
  ],
  "raw": "/** Undocumented doclet.
 * @undocumented */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/unrestrictedtag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "My class.",
  "end": 74,
  "filename": "jsdoc/unrestrictedtag.js",
  "fnName": "Foo",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isDict": false,
  "isGenerator": false,
  "isStruct": false,
  "isUnrestricted": true,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 17,
      "index": 74,
      "line": 7,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Foo",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Foo",
    },
  ],
  "raw": "/**
 * My class.
 *
 * @constructor
 * @unrestricted
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/utf8.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "είναι η επικοινωνία!",
  "end": 87,
  "filename": "jsdoc/utf8.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 87,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "Test",
  "params": Array [],
  "path": Array [
    Object {
      "name": "Test",
    },
  ],
  "raw": "/**
 * @constructor
 * @desc Τεκμηρίωση είναι η επικοινωνία!
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/var.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 52,
  "filename": "jsdoc/var.js",
  "ignore": false,
  "isConstant": true,
  "isReadOnly": true,
  "kind": "constant",
  "loc": Object {
    "end": Position {
      "column": 16,
      "index": 52,
      "line": 3,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "member": "GREEN",
  "name": "GREEN",
  "path": Array [
    Object {
      "name": "GREEN",
    },
  ],
  "raw": "/** document me */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "number",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "number",
      },
    ],
    "string": "number",
  },
  "value": 1,
}
`;

exports[`./jsdoc/var.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 101,
  "filename": "jsdoc/var.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 28,
      "index": 101,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 54,
      "line": 5,
    },
  },
  "member": "validate",
  "mutable": true,
  "name": "validate",
  "params": Array [],
  "path": Array [
    Object {
      "name": "validate",
    },
  ],
  "raw": "/** document me */",
  "start": 54,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/var.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "document me",
  "end": 144,
  "filename": "jsdoc/var.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 11,
      "index": 144,
      "line": 10,
    },
    "start": Position {
      "column": 4,
      "index": 114,
      "line": 9,
    },
  },
  "member": "results",
  "mutable": true,
  "name": "results",
  "path": Array [
    Object {
      "name": "results",
    },
  ],
  "raw": "/** document me */",
  "start": 114,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/variations.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 26,
  "filename": "jsdoc/variations.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 26,
      "line": 3,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "namespace": Object {
    "name": "anim",
  },
  "raw": "/**
 * @namespace anim
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/variations.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "the nodelist elements by fading them to opaque.",
  "end": 306,
  "filename": "jsdoc/variations.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 306,
      "line": 14,
    },
    "start": Position {
      "column": 0,
      "index": 28,
      "line": 5,
    },
  },
  "params": Array [
    Object {
      "description": "How long the animation will run.",
      "name": "duration",
      "optional": true,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
    Object {
      "description": "Called once the animation is complete.",
      "name": "callback",
      "optional": true,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "function",
          },
        ],
        "string": "function",
      },
    },
  ],
  "raw": "/**
 * @method anim.fadein(1)
 * @desc Show the nodelist elements by fading them to opaque.
 * @since 1.0
 *
 * @param {number}   [duration=400] How long the animation will run.
 * @param {function} [callback]     Called once the animation is complete.
 *
 * @returns {this}
 */",
  "returns": Object {
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "this",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "this",
        },
      ],
      "string": "this",
    },
  },
  "since": "1.0",
  "start": 28,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/variations.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "the nodelist elements by fading them to opaque.",
  "end": 664,
  "filename": "jsdoc/variations.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 664,
      "line": 26,
    },
    "start": Position {
      "column": 0,
      "index": 308,
      "line": 16,
    },
  },
  "params": Array [
    Object {
      "description": "How long the animation will run.",
      "name": "duration",
      "optional": true,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "number",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "number",
          },
        ],
        "string": "number",
      },
    },
    Object {
      "description": "The easing function for the transition.",
      "name": "easing",
      "optional": true,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
    Object {
      "description": "Called once the animation is complete.",
      "name": "callback",
      "optional": true,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "function",
          },
        ],
        "string": "function",
      },
    },
  ],
  "raw": "/**
 * @method anim.fadein(2)
 * @desc Show the nodelist elements by fading them to opaque.
 * @since 1.4.3
 *
 * @param {number}   [duration=400] How long the animation will run.
 * @param {string}   [easing=swing] The easing function for the transition.
 * @param {function} [callback]     Called once the animation is complete.
 *
 * @returns {this}
 */",
  "returns": Object {
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "this",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "this",
        },
      ],
      "string": "this",
    },
  },
  "since": "1.4.3",
  "start": 308,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/variationtag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 50,
  "filename": "jsdoc/variationtag.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 26,
      "index": 50,
      "line": 4,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "someObject",
  "params": Array [],
  "path": Array [
    Object {
      "name": "someObject",
    },
  ],
  "raw": "/**
 * @constructor
 */",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/variationtag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 118,
  "filename": "jsdoc/variationtag.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 26,
      "index": 118,
      "line": 10,
    },
    "start": Position {
      "column": 0,
      "index": 52,
      "line": 6,
    },
  },
  "name": "someObject",
  "params": Array [],
  "path": Array [
    Object {
      "name": "someObject",
    },
  ],
  "raw": "/**
 * @constructor
 * @variation 2
 */",
  "start": 52,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/variationtag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 189,
  "filename": "jsdoc/variationtag.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 27,
      "index": 189,
      "line": 16,
    },
    "start": Position {
      "column": 0,
      "index": 120,
      "line": 12,
    },
  },
  "name": "someObject",
  "params": Array [],
  "path": Array [
    Object {
      "name": "someObject",
    },
  ],
  "raw": "/**
 * @constructor
 * @variation (3)
 */",
  "start": 120,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/variationtag.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 252,
  "filename": "jsdoc/variationtag.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 26,
      "index": 252,
      "line": 21,
    },
    "start": Position {
      "column": 0,
      "index": 191,
      "line": 18,
    },
  },
  "name": "someMethod",
  "params": Array [],
  "parent": "someObject(2)",
  "path": Array [
    Object {
      "name": "someMethod",
    },
  ],
  "raw": "/**
 * @memberOf someObject(2)
 */",
  "start": 191,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/versiontag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 46,
  "filename": "jsdoc/versiontag.js",
  "fnName": "foo",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 46,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "name": "foo",
  "params": Array [
    Object {
      "member": "x",
      "name": "x",
    },
  ],
  "path": Array [
    Object {
      "name": "foo",
    },
  ],
  "raw": "/**
    @version 1.2.3
*/",
  "start": 0,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
  "version": "1.2.3",
}
`;

exports[`./jsdoc/virtual.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 23,
  "filename": "jsdoc/virtual.js",
  "ignore": false,
  "loc": Object {
    "end": Position {
      "column": 23,
      "index": 23,
      "line": 1,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "path": Array [],
  "raw": "/** @name dimensions */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/virtual2.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 626,
  "filename": "jsdoc/virtual2.js",
  "ignore": false,
  "kind": "object",
  "lends": Array [],
  "loc": Object {
    "end": Position {
      "column": 1,
      "index": 626,
      "line": 28,
    },
    "start": Position {
      "column": 0,
      "index": 27,
      "line": 2,
    },
  },
  "member": "Person",
  "mutable": true,
  "name": "Person",
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "description": "",
      "ignore": false,
      "path": Array [
        Object {
          "name": "Person",
        },
      ],
      "tags": Array [
        Object {
          "description": "",
          "name": "Person",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @constructs Person */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "Person",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
      ],
    },
    Object {
      "description": "Speak a message asynchronously.",
      "ignore": false,
      "params": Array [
        Object {
          "name": "cb",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "hasEventPrefix": false,
                "name": "sayCallback",
                "owner": Object {
                  "name": "Person",
                  "type": "NAME",
                },
                "quoteStyle": "none",
                "type": "INNER_MEMBER",
              },
            ],
            "simple": Array [
              "Person~sayCallback",
            ],
            "string": "Person~sayCallback",
          },
        },
      ],
      "path": Array [
        Object {
          "name": "Person",
        },
      ],
      "tags": Array [
        Object {
          "description": "",
          "name": "cb",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "     * @param {Person~sayCallback} cb",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "cb",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@param",
                "type": "{Person~sayCallback}",
              },
            },
            Object {
              "number": 4,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "Person~sayCallback",
        },
      ],
    },
  ],
  "raw": "/** @lends Person.prototype */",
  "start": 27,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/virtual2.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 154,
  "filename": "jsdoc/virtual2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 154,
      "line": 7,
    },
    "start": Position {
      "column": 4,
      "index": 64,
      "line": 4,
    },
  },
  "member": "initialize",
  "memberOf": "Person",
  "mutable": true,
  "name": "initialize",
  "params": Array [
    Object {
      "member": "name",
      "name": "name",
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "Person",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @constructs Person */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "Person",
                  "postDelimiter": " ",
                  "postName": " ",
                  "postTag": " ",
                  "postType": "",
                  "start": "",
                  "tag": "@constructs",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
        ],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 154,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 154,
          "line": 7,
        },
        "start": Position {
          "column": 4,
          "index": 64,
          "line": 4,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** @constructs Person */",
      "start": 64,
      "tags": Array [
        Object {
          "description": "",
          "name": "Person",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @constructs Person */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "Person",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Callback for \`say\`.",
        "ignore": false,
        "isCallback": true,
        "kind": "function",
        "memberOf": "Person",
        "name": "sayCallback",
        "params": Array [
          Object {
            "description": "- Information about the error, if any.",
            "name": "err",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "meta": Object {
                    "syntax": "PREFIX_QUESTION_MARK",
                  },
                  "type": "NULLABLE",
                  "value": Object {
                    "name": "string",
                    "type": "NAME",
                  },
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                  "nullable": true,
                },
              ],
              "string": "?string",
            },
          },
          Object {
            "description": "- The message.",
            "name": "message",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "meta": Object {
                    "syntax": "PREFIX_QUESTION_MARK",
                  },
                  "type": "NULLABLE",
                  "value": Object {
                    "name": "string",
                    "type": "NAME",
                  },
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                  "nullable": true,
                },
              ],
              "string": "?string",
            },
          },
        ],
        "tags": Array [
          Object {
            "description": "",
            "name": "Person~sayCallback",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 3,
                "source": "     * @callback Person~sayCallback",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "Person~sayCallback",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "     ",
                  "tag": "@callback",
                  "type": "",
                },
              },
            ],
            "tag": "callback",
            "type": "",
          },
          Object {
            "description": "- Information about the error, if any.",
            "name": "err",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 4,
                "source": "     * @param {?string} err - Information about the error, if any.",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "- Information about the error, if any.",
                  "end": "",
                  "lineEnd": "",
                  "name": "err",
                  "postDelimiter": " ",
                  "postName": " ",
                  "postTag": " ",
                  "postType": " ",
                  "start": "     ",
                  "tag": "@param",
                  "type": "{?string}",
                },
              },
            ],
            "tag": "param",
            "type": "?string",
          },
          Object {
            "description": "- The message.",
            "name": "message",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 5,
                "source": "     * @param {?string} message - The message.",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "- The message.",
                  "end": "",
                  "lineEnd": "",
                  "name": "message",
                  "postDelimiter": " ",
                  "postName": " ",
                  "postTag": " ",
                  "postType": " ",
                  "start": "     ",
                  "tag": "@param",
                  "type": "{?string}",
                },
              },
              Object {
                "number": 6,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "?string",
          },
        ],
      },
      "code": "",
      "ctx": Object {},
      "description": "Callback for \`say\`.",
      "end": 356,
      "ignore": false,
      "isCallback": true,
      "kind": "function",
      "loc": Object {
        "end": Position {
          "column": 7,
          "index": 356,
          "line": 15,
        },
        "start": Position {
          "column": 4,
          "index": 161,
          "line": 9,
        },
      },
      "memberOf": "Person",
      "name": "sayCallback",
      "params": Array [
        Object {
          "description": "- Information about the error, if any.",
          "name": "err",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "meta": Object {
                  "syntax": "PREFIX_QUESTION_MARK",
                },
                "type": "NULLABLE",
                "value": Object {
                  "name": "string",
                  "type": "NAME",
                },
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
                "nullable": true,
              },
            ],
            "string": "?string",
          },
        },
        Object {
          "description": "- The message.",
          "name": "message",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "meta": Object {
                  "syntax": "PREFIX_QUESTION_MARK",
                },
                "type": "NULLABLE",
                "value": Object {
                  "name": "string",
                  "type": "NAME",
                },
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
                "nullable": true,
              },
            ],
            "string": "?string",
          },
        },
      ],
      "path": Array [],
      "raw": "/**
     * Callback for \`say\`.
     *
     * @callback Person~sayCallback
     * @param {?string} err - Information about the error, if any.
     * @param {?string} message - The message.
     */",
      "start": 161,
      "tags": Array [
        Object {
          "description": "",
          "name": "Person~sayCallback",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "     * @callback Person~sayCallback",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "Person~sayCallback",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "     ",
                "tag": "@callback",
                "type": "",
              },
            },
          ],
          "tag": "callback",
          "type": "",
        },
        Object {
          "description": "- Information about the error, if any.",
          "name": "err",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 4,
              "source": "     * @param {?string} err - Information about the error, if any.",
              "tokens": Object {
                "delimiter": "*",
                "description": "- Information about the error, if any.",
                "end": "",
                "lineEnd": "",
                "name": "err",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@param",
                "type": "{?string}",
              },
            },
          ],
          "tag": "param",
          "type": "?string",
        },
        Object {
          "description": "- The message.",
          "name": "message",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 5,
              "source": "     * @param {?string} message - The message.",
              "tokens": Object {
                "delimiter": "*",
                "description": "- The message.",
                "end": "",
                "lineEnd": "",
                "name": "message",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@param",
                "type": "{?string}",
              },
            },
            Object {
              "number": 6,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "?string",
        },
      ],
    },
    Object {
      "cmt": Object {
        "description": "Speak a message asynchronously.",
        "ignore": false,
        "params": Array [
          Object {
            "name": "cb",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "hasEventPrefix": false,
                  "name": "sayCallback",
                  "owner": Object {
                    "name": "Person",
                    "type": "NAME",
                  },
                  "quoteStyle": "none",
                  "type": "INNER_MEMBER",
                },
              ],
              "simple": Array [
                "Person~sayCallback",
              ],
              "string": "Person~sayCallback",
            },
          },
        ],
        "tags": Array [
          Object {
            "description": "",
            "name": "cb",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 3,
                "source": "     * @param {Person~sayCallback} cb",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "cb",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "     ",
                  "tag": "@param",
                  "type": "{Person~sayCallback}",
                },
              },
              Object {
                "number": 4,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "Person~sayCallback",
          },
        ],
      },
      "code": "say: function (message, cb) {
  if (!message) {
    cb('You forgot the message!');
  }

  cb(null, this.name + ' says: ' + message);
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
          Object {
            "member": "cb",
            "name": "cb",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message asynchronously.",
      "end": 624,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 624,
          "line": 27,
        },
        "start": Position {
          "column": 4,
          "index": 361,
          "line": 16,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "name": "cb",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "hasEventPrefix": false,
                "name": "sayCallback",
                "owner": Object {
                  "name": "Person",
                  "type": "NAME",
                },
                "quoteStyle": "none",
                "type": "INNER_MEMBER",
              },
            ],
            "simple": Array [
              "Person~sayCallback",
            ],
            "string": "Person~sayCallback",
          },
        },
      ],
      "path": Array [],
      "raw": "/**
     * Speak a message asynchronously.
     *
     * @param {Person~sayCallback} cb
     */",
      "start": 361,
      "tags": Array [
        Object {
          "description": "",
          "name": "cb",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "     * @param {Person~sayCallback} cb",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "cb",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@param",
                "type": "{Person~sayCallback}",
              },
            },
            Object {
              "number": 4,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "Person~sayCallback",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/** @constructs Person */",
  "start": 64,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/virtual2.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Callback for \`say\`.",
  "end": 356,
  "filename": "jsdoc/virtual2.js",
  "ignore": false,
  "isCallback": true,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 7,
      "index": 356,
      "line": 15,
    },
    "start": Position {
      "column": 4,
      "index": 161,
      "line": 9,
    },
  },
  "member": "Person",
  "memberOf": "Person",
  "mutable": true,
  "name": "sayCallback",
  "params": Array [
    Object {
      "description": "- Information about the error, if any.",
      "name": "err",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "meta": Object {
              "syntax": "PREFIX_QUESTION_MARK",
            },
            "type": "NULLABLE",
            "value": Object {
              "name": "string",
              "type": "NAME",
            },
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
            "nullable": true,
          },
        ],
        "string": "?string",
      },
    },
    Object {
      "description": "- The message.",
      "name": "message",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "meta": Object {
              "syntax": "PREFIX_QUESTION_MARK",
            },
            "type": "NULLABLE",
            "value": Object {
              "name": "string",
              "type": "NAME",
            },
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
            "nullable": true,
          },
        ],
        "string": "?string",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "Person",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @constructs Person */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "Person",
                  "postDelimiter": " ",
                  "postName": " ",
                  "postTag": " ",
                  "postType": "",
                  "start": "",
                  "tag": "@constructs",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
        ],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 154,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 154,
          "line": 7,
        },
        "start": Position {
          "column": 4,
          "index": 64,
          "line": 4,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** @constructs Person */",
      "start": 64,
      "tags": Array [
        Object {
          "description": "",
          "name": "Person",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @constructs Person */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "Person",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Callback for \`say\`.",
        "ignore": false,
        "isCallback": true,
        "kind": "function",
        "memberOf": "Person",
        "name": "sayCallback",
        "params": Array [
          Object {
            "description": "- Information about the error, if any.",
            "name": "err",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "meta": Object {
                    "syntax": "PREFIX_QUESTION_MARK",
                  },
                  "type": "NULLABLE",
                  "value": Object {
                    "name": "string",
                    "type": "NAME",
                  },
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                  "nullable": true,
                },
              ],
              "string": "?string",
            },
          },
          Object {
            "description": "- The message.",
            "name": "message",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "meta": Object {
                    "syntax": "PREFIX_QUESTION_MARK",
                  },
                  "type": "NULLABLE",
                  "value": Object {
                    "name": "string",
                    "type": "NAME",
                  },
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                  "nullable": true,
                },
              ],
              "string": "?string",
            },
          },
        ],
        "tags": Array [
          Object {
            "description": "",
            "name": "Person~sayCallback",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 3,
                "source": "     * @callback Person~sayCallback",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "Person~sayCallback",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "     ",
                  "tag": "@callback",
                  "type": "",
                },
              },
            ],
            "tag": "callback",
            "type": "",
          },
          Object {
            "description": "- Information about the error, if any.",
            "name": "err",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 4,
                "source": "     * @param {?string} err - Information about the error, if any.",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "- Information about the error, if any.",
                  "end": "",
                  "lineEnd": "",
                  "name": "err",
                  "postDelimiter": " ",
                  "postName": " ",
                  "postTag": " ",
                  "postType": " ",
                  "start": "     ",
                  "tag": "@param",
                  "type": "{?string}",
                },
              },
            ],
            "tag": "param",
            "type": "?string",
          },
          Object {
            "description": "- The message.",
            "name": "message",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 5,
                "source": "     * @param {?string} message - The message.",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "- The message.",
                  "end": "",
                  "lineEnd": "",
                  "name": "message",
                  "postDelimiter": " ",
                  "postName": " ",
                  "postTag": " ",
                  "postType": " ",
                  "start": "     ",
                  "tag": "@param",
                  "type": "{?string}",
                },
              },
              Object {
                "number": 6,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "?string",
          },
        ],
      },
      "code": "",
      "ctx": Object {},
      "description": "Callback for \`say\`.",
      "end": 356,
      "ignore": false,
      "isCallback": true,
      "kind": "function",
      "loc": Object {
        "end": Position {
          "column": 7,
          "index": 356,
          "line": 15,
        },
        "start": Position {
          "column": 4,
          "index": 161,
          "line": 9,
        },
      },
      "memberOf": "Person",
      "name": "sayCallback",
      "params": Array [
        Object {
          "description": "- Information about the error, if any.",
          "name": "err",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "meta": Object {
                  "syntax": "PREFIX_QUESTION_MARK",
                },
                "type": "NULLABLE",
                "value": Object {
                  "name": "string",
                  "type": "NAME",
                },
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
                "nullable": true,
              },
            ],
            "string": "?string",
          },
        },
        Object {
          "description": "- The message.",
          "name": "message",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "meta": Object {
                  "syntax": "PREFIX_QUESTION_MARK",
                },
                "type": "NULLABLE",
                "value": Object {
                  "name": "string",
                  "type": "NAME",
                },
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
                "nullable": true,
              },
            ],
            "string": "?string",
          },
        },
      ],
      "path": Array [],
      "raw": "/**
     * Callback for \`say\`.
     *
     * @callback Person~sayCallback
     * @param {?string} err - Information about the error, if any.
     * @param {?string} message - The message.
     */",
      "start": 161,
      "tags": Array [
        Object {
          "description": "",
          "name": "Person~sayCallback",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "     * @callback Person~sayCallback",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "Person~sayCallback",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "     ",
                "tag": "@callback",
                "type": "",
              },
            },
          ],
          "tag": "callback",
          "type": "",
        },
        Object {
          "description": "- Information about the error, if any.",
          "name": "err",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 4,
              "source": "     * @param {?string} err - Information about the error, if any.",
              "tokens": Object {
                "delimiter": "*",
                "description": "- Information about the error, if any.",
                "end": "",
                "lineEnd": "",
                "name": "err",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@param",
                "type": "{?string}",
              },
            },
          ],
          "tag": "param",
          "type": "?string",
        },
        Object {
          "description": "- The message.",
          "name": "message",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 5,
              "source": "     * @param {?string} message - The message.",
              "tokens": Object {
                "delimiter": "*",
                "description": "- The message.",
                "end": "",
                "lineEnd": "",
                "name": "message",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@param",
                "type": "{?string}",
              },
            },
            Object {
              "number": 6,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "?string",
        },
      ],
    },
    Object {
      "cmt": Object {
        "description": "Speak a message asynchronously.",
        "ignore": false,
        "params": Array [
          Object {
            "name": "cb",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "hasEventPrefix": false,
                  "name": "sayCallback",
                  "owner": Object {
                    "name": "Person",
                    "type": "NAME",
                  },
                  "quoteStyle": "none",
                  "type": "INNER_MEMBER",
                },
              ],
              "simple": Array [
                "Person~sayCallback",
              ],
              "string": "Person~sayCallback",
            },
          },
        ],
        "tags": Array [
          Object {
            "description": "",
            "name": "cb",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 3,
                "source": "     * @param {Person~sayCallback} cb",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "cb",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "     ",
                  "tag": "@param",
                  "type": "{Person~sayCallback}",
                },
              },
              Object {
                "number": 4,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "Person~sayCallback",
          },
        ],
      },
      "code": "say: function (message, cb) {
  if (!message) {
    cb('You forgot the message!');
  }

  cb(null, this.name + ' says: ' + message);
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
          Object {
            "member": "cb",
            "name": "cb",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message asynchronously.",
      "end": 624,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 624,
          "line": 27,
        },
        "start": Position {
          "column": 4,
          "index": 361,
          "line": 16,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "name": "cb",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "hasEventPrefix": false,
                "name": "sayCallback",
                "owner": Object {
                  "name": "Person",
                  "type": "NAME",
                },
                "quoteStyle": "none",
                "type": "INNER_MEMBER",
              },
            ],
            "simple": Array [
              "Person~sayCallback",
            ],
            "string": "Person~sayCallback",
          },
        },
      ],
      "path": Array [],
      "raw": "/**
     * Speak a message asynchronously.
     *
     * @param {Person~sayCallback} cb
     */",
      "start": 361,
      "tags": Array [
        Object {
          "description": "",
          "name": "cb",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "     * @param {Person~sayCallback} cb",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "cb",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@param",
                "type": "{Person~sayCallback}",
              },
            },
            Object {
              "number": 4,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "Person~sayCallback",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/**
     * Callback for \`say\`.
     *
     * @callback Person~sayCallback
     * @param {?string} err - Information about the error, if any.
     * @param {?string} message - The message.
     */",
  "start": 161,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Object",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Object",
      },
    ],
    "string": "Object",
  },
}
`;

exports[`./jsdoc/virtual2.js snapshots: Item 4 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Speak a message asynchronously.",
  "end": 624,
  "filename": "jsdoc/virtual2.js",
  "ignore": false,
  "isAsync": false,
  "isGenerator": false,
  "kind": "method",
  "loc": Object {
    "end": Position {
      "column": 5,
      "index": 624,
      "line": 27,
    },
    "start": Position {
      "column": 4,
      "index": 361,
      "line": 16,
    },
  },
  "member": "say",
  "memberOf": "Person",
  "mutable": true,
  "name": "say",
  "params": Array [
    Object {
      "name": "cb",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "hasEventPrefix": false,
            "name": "sayCallback",
            "owner": Object {
              "name": "Person",
              "type": "NAME",
            },
            "quoteStyle": "none",
            "type": "INNER_MEMBER",
          },
        ],
        "simple": Array [
          "Person~sayCallback",
        ],
        "string": "Person~sayCallback",
      },
    },
  ],
  "path": Array [
    Object {
      "name": "Person",
    },
  ],
  "properties": Array [
    Object {
      "cmt": Object {
        "description": "",
        "ignore": false,
        "tags": Array [
          Object {
            "description": "",
            "name": "Person",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 0,
                "source": "/** @constructs Person */",
                "tokens": Object {
                  "delimiter": "/**",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "Person",
                  "postDelimiter": " ",
                  "postName": " ",
                  "postTag": " ",
                  "postType": "",
                  "start": "",
                  "tag": "@constructs",
                  "type": "",
                },
              },
            ],
            "tag": "constructs",
            "type": "",
          },
        ],
      },
      "code": "initialize: function (name) {
  this.name = name;
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "initialize",
        "memberOf": undefined,
        "name": "initialize",
        "params": Array [
          Object {
            "member": "name",
            "name": "name",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "",
      "end": 154,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 154,
          "line": 7,
        },
        "start": Position {
          "column": 4,
          "index": 64,
          "line": 4,
        },
      },
      "member": "initialize",
      "memberOf": undefined,
      "name": "initialize",
      "params": Array [
        Object {
          "member": "name",
          "name": "name",
        },
      ],
      "path": Array [],
      "raw": "/** @constructs Person */",
      "start": 64,
      "tags": Array [
        Object {
          "description": "",
          "name": "Person",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 0,
              "source": "/** @constructs Person */",
              "tokens": Object {
                "delimiter": "/**",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "Person",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": "",
                "start": "",
                "tag": "@constructs",
                "type": "",
              },
            },
          ],
          "tag": "constructs",
          "type": "",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
    Object {
      "cmt": Object {
        "description": "Callback for \`say\`.",
        "ignore": false,
        "isCallback": true,
        "kind": "function",
        "memberOf": "Person",
        "name": "sayCallback",
        "params": Array [
          Object {
            "description": "- Information about the error, if any.",
            "name": "err",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "meta": Object {
                    "syntax": "PREFIX_QUESTION_MARK",
                  },
                  "type": "NULLABLE",
                  "value": Object {
                    "name": "string",
                    "type": "NAME",
                  },
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                  "nullable": true,
                },
              ],
              "string": "?string",
            },
          },
          Object {
            "description": "- The message.",
            "name": "message",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "meta": Object {
                    "syntax": "PREFIX_QUESTION_MARK",
                  },
                  "type": "NULLABLE",
                  "value": Object {
                    "name": "string",
                    "type": "NAME",
                  },
                },
              ],
              "simple": Array [
                Object {
                  "name": "string",
                  "nullable": true,
                },
              ],
              "string": "?string",
            },
          },
        ],
        "tags": Array [
          Object {
            "description": "",
            "name": "Person~sayCallback",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 3,
                "source": "     * @callback Person~sayCallback",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "Person~sayCallback",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": "",
                  "start": "     ",
                  "tag": "@callback",
                  "type": "",
                },
              },
            ],
            "tag": "callback",
            "type": "",
          },
          Object {
            "description": "- Information about the error, if any.",
            "name": "err",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 4,
                "source": "     * @param {?string} err - Information about the error, if any.",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "- Information about the error, if any.",
                  "end": "",
                  "lineEnd": "",
                  "name": "err",
                  "postDelimiter": " ",
                  "postName": " ",
                  "postTag": " ",
                  "postType": " ",
                  "start": "     ",
                  "tag": "@param",
                  "type": "{?string}",
                },
              },
            ],
            "tag": "param",
            "type": "?string",
          },
          Object {
            "description": "- The message.",
            "name": "message",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 5,
                "source": "     * @param {?string} message - The message.",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "- The message.",
                  "end": "",
                  "lineEnd": "",
                  "name": "message",
                  "postDelimiter": " ",
                  "postName": " ",
                  "postTag": " ",
                  "postType": " ",
                  "start": "     ",
                  "tag": "@param",
                  "type": "{?string}",
                },
              },
              Object {
                "number": 6,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "?string",
          },
        ],
      },
      "code": "",
      "ctx": Object {},
      "description": "Callback for \`say\`.",
      "end": 356,
      "ignore": false,
      "isCallback": true,
      "kind": "function",
      "loc": Object {
        "end": Position {
          "column": 7,
          "index": 356,
          "line": 15,
        },
        "start": Position {
          "column": 4,
          "index": 161,
          "line": 9,
        },
      },
      "memberOf": "Person",
      "name": "sayCallback",
      "params": Array [
        Object {
          "description": "- Information about the error, if any.",
          "name": "err",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "meta": Object {
                  "syntax": "PREFIX_QUESTION_MARK",
                },
                "type": "NULLABLE",
                "value": Object {
                  "name": "string",
                  "type": "NAME",
                },
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
                "nullable": true,
              },
            ],
            "string": "?string",
          },
        },
        Object {
          "description": "- The message.",
          "name": "message",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "meta": Object {
                  "syntax": "PREFIX_QUESTION_MARK",
                },
                "type": "NULLABLE",
                "value": Object {
                  "name": "string",
                  "type": "NAME",
                },
              },
            ],
            "simple": Array [
              Object {
                "name": "string",
                "nullable": true,
              },
            ],
            "string": "?string",
          },
        },
      ],
      "path": Array [],
      "raw": "/**
     * Callback for \`say\`.
     *
     * @callback Person~sayCallback
     * @param {?string} err - Information about the error, if any.
     * @param {?string} message - The message.
     */",
      "start": 161,
      "tags": Array [
        Object {
          "description": "",
          "name": "Person~sayCallback",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "     * @callback Person~sayCallback",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "Person~sayCallback",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": "",
                "start": "     ",
                "tag": "@callback",
                "type": "",
              },
            },
          ],
          "tag": "callback",
          "type": "",
        },
        Object {
          "description": "- Information about the error, if any.",
          "name": "err",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 4,
              "source": "     * @param {?string} err - Information about the error, if any.",
              "tokens": Object {
                "delimiter": "*",
                "description": "- Information about the error, if any.",
                "end": "",
                "lineEnd": "",
                "name": "err",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@param",
                "type": "{?string}",
              },
            },
          ],
          "tag": "param",
          "type": "?string",
        },
        Object {
          "description": "- The message.",
          "name": "message",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 5,
              "source": "     * @param {?string} message - The message.",
              "tokens": Object {
                "delimiter": "*",
                "description": "- The message.",
                "end": "",
                "lineEnd": "",
                "name": "message",
                "postDelimiter": " ",
                "postName": " ",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@param",
                "type": "{?string}",
              },
            },
            Object {
              "number": 6,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "?string",
        },
      ],
    },
    Object {
      "cmt": Object {
        "description": "Speak a message asynchronously.",
        "ignore": false,
        "params": Array [
          Object {
            "name": "cb",
            "optional": false,
            "type": JSDocType {
              "parsed": Array [
                Object {
                  "hasEventPrefix": false,
                  "name": "sayCallback",
                  "owner": Object {
                    "name": "Person",
                    "type": "NAME",
                  },
                  "quoteStyle": "none",
                  "type": "INNER_MEMBER",
                },
              ],
              "simple": Array [
                "Person~sayCallback",
              ],
              "string": "Person~sayCallback",
            },
          },
        ],
        "tags": Array [
          Object {
            "description": "",
            "name": "cb",
            "optional": false,
            "problems": Array [],
            "source": Array [
              Object {
                "number": 3,
                "source": "     * @param {Person~sayCallback} cb",
                "tokens": Object {
                  "delimiter": "*",
                  "description": "",
                  "end": "",
                  "lineEnd": "",
                  "name": "cb",
                  "postDelimiter": " ",
                  "postName": "",
                  "postTag": " ",
                  "postType": " ",
                  "start": "     ",
                  "tag": "@param",
                  "type": "{Person~sayCallback}",
                },
              },
              Object {
                "number": 4,
                "source": "     */",
                "tokens": Object {
                  "delimiter": "",
                  "description": "",
                  "end": "*/",
                  "lineEnd": "",
                  "name": "",
                  "postDelimiter": "",
                  "postName": "",
                  "postTag": "",
                  "postType": "",
                  "start": "     ",
                  "tag": "",
                  "type": "",
                },
              },
            ],
            "tag": "param",
            "type": "Person~sayCallback",
          },
        ],
      },
      "code": "say: function (message, cb) {
  if (!message) {
    cb('You forgot the message!');
  }

  cb(null, this.name + ' says: ' + message);
}",
      "ctx": Object {
        "isAsync": false,
        "isGenerator": false,
        "kind": "method",
        "member": "say",
        "memberOf": undefined,
        "name": "say",
        "params": Array [
          Object {
            "member": "message",
            "name": "message",
          },
          Object {
            "member": "cb",
            "name": "cb",
          },
        ],
        "type": JSDocType {
          "parsed": Array [
            Object {
              "name": "Function",
              "type": "NAME",
            },
          ],
          "simple": Array [
            Object {
              "name": "Function",
            },
          ],
          "string": "Function",
        },
      },
      "description": "Speak a message asynchronously.",
      "end": 624,
      "ignore": false,
      "isAsync": false,
      "isGenerator": false,
      "kind": "method",
      "loc": Object {
        "end": Position {
          "column": 5,
          "index": 624,
          "line": 27,
        },
        "start": Position {
          "column": 4,
          "index": 361,
          "line": 16,
        },
      },
      "member": "say",
      "memberOf": undefined,
      "name": "say",
      "params": Array [
        Object {
          "name": "cb",
          "optional": false,
          "type": JSDocType {
            "parsed": Array [
              Object {
                "hasEventPrefix": false,
                "name": "sayCallback",
                "owner": Object {
                  "name": "Person",
                  "type": "NAME",
                },
                "quoteStyle": "none",
                "type": "INNER_MEMBER",
              },
            ],
            "simple": Array [
              "Person~sayCallback",
            ],
            "string": "Person~sayCallback",
          },
        },
      ],
      "path": Array [],
      "raw": "/**
     * Speak a message asynchronously.
     *
     * @param {Person~sayCallback} cb
     */",
      "start": 361,
      "tags": Array [
        Object {
          "description": "",
          "name": "cb",
          "optional": false,
          "problems": Array [],
          "source": Array [
            Object {
              "number": 3,
              "source": "     * @param {Person~sayCallback} cb",
              "tokens": Object {
                "delimiter": "*",
                "description": "",
                "end": "",
                "lineEnd": "",
                "name": "cb",
                "postDelimiter": " ",
                "postName": "",
                "postTag": " ",
                "postType": " ",
                "start": "     ",
                "tag": "@param",
                "type": "{Person~sayCallback}",
              },
            },
            Object {
              "number": 4,
              "source": "     */",
              "tokens": Object {
                "delimiter": "",
                "description": "",
                "end": "*/",
                "lineEnd": "",
                "name": "",
                "postDelimiter": "",
                "postName": "",
                "postTag": "",
                "postType": "",
                "start": "     ",
                "tag": "",
                "type": "",
              },
            },
          ],
          "tag": "param",
          "type": "Person~sayCallback",
        },
      ],
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "Function",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "Function",
          },
        ],
        "string": "Function",
      },
    },
  ],
  "raw": "/**
     * Speak a message asynchronously.
     *
     * @param {Person~sayCallback} cb
     */",
  "start": 361,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/virtual3.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 112,
  "filename": "jsdoc/virtual3.js",
  "ignore": false,
  "isConstructor": true,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 3,
      "index": 112,
      "line": 6,
    },
    "start": Position {
      "column": 0,
      "index": 0,
      "line": 1,
    },
  },
  "module": Object {
    "name": "module:connection",
  },
  "params": Array [
    Object {
      "description": "- The connection name.",
      "name": "name",
      "optional": false,
      "type": JSDocType {
        "parsed": Array [
          Object {
            "name": "string",
            "type": "NAME",
          },
        ],
        "simple": Array [
          Object {
            "name": "string",
          },
        ],
        "string": "string",
      },
    },
  ],
  "path": Array [],
  "raw": "/** @module connection

/**
 * @param {string} name - The connection name.
 * @constructor module:connection
 */",
  "start": 0,
  "tags": ArrayContaining [],
}
`;

exports[`./jsdoc/virtual3.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "",
  "end": 197,
  "export": "default",
  "filename": "jsdoc/virtual3.js",
  "ignore": false,
  "isAsync": false,
  "isConstructor": true,
  "isDefaultExport": true,
  "isGenerator": false,
  "kind": "constructor",
  "loc": Object {
    "end": Position {
      "column": 2,
      "index": 197,
      "line": 11,
    },
    "start": Position {
      "column": 3,
      "index": 112,
      "line": 6,
    },
  },
  "member": "exports",
  "memberOf": "module",
  "name": "exports",
  "params": Array [],
  "path": Array [
    Object {
      "name": "module",
    },
    Object {
      "name": "exports",
    },
  ],
  "raw": "/**
 * @constructor module:connection
 */",
  "start": 112,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
}
`;

exports[`./jsdoc/yieldstag.js snapshots: Item 1 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Generate the Fibonacci sequence of numbers.",
  "end": 160,
  "filename": "jsdoc/yieldstag.js",
  "fnName": "fibonacci",
  "ignore": false,
  "isAsync": false,
  "isGenerator": true,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 24,
      "index": 160,
      "line": 8,
    },
    "start": Position {
      "column": 0,
      "index": 15,
      "line": 3,
    },
  },
  "name": "fibonacci",
  "params": Array [],
  "path": Array [
    Object {
      "name": "fibonacci",
    },
  ],
  "raw": "/**
 * Generate the Fibonacci sequence of numbers.
 *
 * @yields {number} The next number in the Fibonacci sequence.
 */",
  "start": 15,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
  "yields": Object {
    "description": "next number in the Fibonacci sequence.",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "number",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "number",
        },
      ],
      "string": "number",
    },
  },
}
`;

exports[`./jsdoc/yieldstag.js snapshots: Item 2 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Generate the Fibonacci sequence of numbers.",
  "end": 299,
  "filename": "jsdoc/yieldstag.js",
  "fnName": "fibonacci2",
  "ignore": false,
  "isAsync": false,
  "isGenerator": true,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 25,
      "index": 299,
      "line": 15,
    },
    "start": Position {
      "column": 0,
      "index": 162,
      "line": 10,
    },
  },
  "name": "fibonacci2",
  "params": Array [],
  "path": Array [
    Object {
      "name": "fibonacci2",
    },
  ],
  "raw": "/**
 * Generate the Fibonacci sequence of numbers.
 *
 * @yields The next number in the Fibonacci sequence.
 */",
  "start": 162,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
  "yields": Object {
    "description": "next number in the Fibonacci sequence.",
    "type": Array [],
  },
}
`;

exports[`./jsdoc/yieldstag.js snapshots: Item 3 1`] = `
Object {
  "ast": Any<Object>,
  "cmt": Any<Object>,
  "code": Any<String>,
  "ctx": Any<Object>,
  "description": "Generate the Fibonacci sequence of numbers.",
  "end": 404,
  "filename": "jsdoc/yieldstag.js",
  "fnName": "fibonacci3",
  "ignore": false,
  "isAsync": false,
  "isGenerator": true,
  "kind": "function",
  "loc": Object {
    "end": Position {
      "column": 25,
      "index": 404,
      "line": 22,
    },
    "start": Position {
      "column": 0,
      "index": 301,
      "line": 17,
    },
  },
  "name": "fibonacci3",
  "params": Array [],
  "path": Array [
    Object {
      "name": "fibonacci3",
    },
  ],
  "raw": "/**
 * Generate the Fibonacci sequence of numbers.
 *
 * @yields {number}
 */",
  "start": 301,
  "tags": ArrayContaining [],
  "type": JSDocType {
    "parsed": Array [
      Object {
        "name": "Function",
        "type": "NAME",
      },
    ],
    "simple": Array [
      Object {
        "name": "Function",
      },
    ],
    "string": "Function",
  },
  "yields": Object {
    "description": "",
    "type": JSDocType {
      "parsed": Array [
        Object {
          "name": "number",
          "type": "NAME",
        },
      ],
      "simple": Array [
        Object {
          "name": "number",
        },
      ],
      "string": "number",
    },
  },
}
`;
